{"version":3,"file":"moebio_framework_concat.js","sources":["../src/dataStructures/DataModel.js","../src/dataStructures/geometry/Point.js","../src/dataStructures/numeric/Interval.js","../src/dataStructures/geometry/Rectangle.js","../src/dataStructures/lists/List.js","../src/dataStructures/dates/DateList.js","../src/operators/dates/DateOperators.js","../src/tools/utils/code/ClassUtils.js","../src/dataStructures/geometry/Polygon.js","../src/dataStructures/structures/lists/NodeList.js","../src/dataStructures/structures/lists/RelationList.js","../src/tools/loaders/LoadEvent.js","../src/tools/loaders/Loader.js","../src/dataStructures/structures/elements/Node.js","../src/Version.js","../src/operators/graphic/ColorOperators.js","../src/tools/utils/strings/MD5.js","../src/Global.js","../src/dataStructures/structures/elements/Relation.js","../src/dataStructures/structures/networks/Network.js","../src/operators/structures/NetworkEncodings.js","../src/operators/lists/TableEncodings.js","../src/dataStructures/lists/Table.js","../src/dataStructures/numeric/NumberTable.js","../src/dataStructures/geometry/RectangleList.js","../src/operators/lists/ListGenerators.js","../src/dataStructures/numeric/NumberList.js","../src/dataStructures/strings/StringList.js","../src/operators/numeric/NumberOperators.js","../src/operators/numeric/numberList/NumberListGenerators.js","../src/operators/lists/TableOperators.js","../src/operators/lists/ListOperators.js","../src/operators/strings/StringOperators.js","../src/dataStructures/geometry/PolygonList.js","../src/dataStructures/numeric/Axis.js","../src/dataStructures/numeric/Axis2D.js","../src/dataStructures/numeric/Matrix.js","../src/dataStructures/dates/DateAxis.js","../src/dataStructures/dates/DateInterval.js","../src/operators/geo/CountryOperators.js","../src/dataStructures/geo/Country.js","../src/dataStructures/structures/networks/Tree.js","../src/dataStructures/geometry/Point3D.js","../src/operators/geometry/PointOperators.js","../src/dataStructures/geometry/Polygon3D.js","../src/operators/geometry/GeometryOperators.js","../src/tools/graphic/Draw.js","../src/operators/geometry/PolygonOperators.js","../src/dataStructures/geo/CountryList.js","../src/dataStructures/geometry/Polygon3DList.js","../src/dataStructures/graphic/ColorList.js","../src/operators/graphic/ColorScales.js","../src/dataStructures/graphic/ColorScale.js","../src/dataStructures/spaces/Space2D.js","../src/operators/dates/DateListOperators.js","../src/operators/geo/CountryListOperators.js","../src/operators/geo/GeoOperators.js","../src/operators/geometry/GeometryConvertions.js","../src/operators/geometry/PolygonGenerators.js","../src/operators/geometry/PolygonListEncodings.js","../src/operators/geometry/PolygonListOperators.js","../src/operators/geometry/RectangleOperators.js","../src/operators/graphic/ColorGenerators.js","../src/operators/graphic/ColorListGenerators.js","../src/operators/graphic/ColorListOperators.js","../src/operators/graphic/ColorScaleGenerators.js","../src/operators/lists/TableConversions.js","../src/operators/lists/TableGenerators.js","../src/operators/numeric/interval/IntervalListOperators.js","../src/operators/numeric/interval/IntervalTableOperators.js","../src/operators/numeric/MatrixGenerators.js","../src/operators/numeric/numberList/NumberListOperators.js","../src/operators/numeric/numberTable/NumberTableConversions.js","../src/operators/numeric/numberTable/NumberTableFlowOperators.js","../src/operators/numeric/numberTable/NumberTableOperators.js","../src/operators/structures/NetworkConvertions.js","../src/operators/objects/ObjectConversions.js","../src/operators/objects/ObjectOperators.js","../src/operators/strings/StringConversions.js","../src/operators/strings/StringListOperators.js","../src/operators/structures/NetworkGenerators.js","../src/operators/structures/NetworkOperators.js","../src/operators/structures/TreeConvertions.js","../src/operators/structures/TreeEncodings.js","../src/tools/graphic/CanvasAndContext.js","../src/tools/graphic/DrawSimpleVis.js","../src/tools/graphic/SimpleGraphics.js","../src/tools/graphic/DrawTexts.js","../src/tools/graphic/DrawTextsAdvanced.js","../src/tools/interaction/DragDetection.js","../src/tools/interaction/InputTextFieldHTML.js","../src/tools/interaction/TextBox.js","../src/tools/utils/strings/FastHtml.js","../src/tools/interaction/TextFieldHTML.js","../src/tools/loaders/MultiLoader.js","../src/tools/utils/strings/ConsoleTools.js","../src/tools/utils/strings/JSONUtils.js","../src/tools/utils/strings/StringUtils.js","../src/tools/utils/system/Navigator.js","../src/tools/physics/Forces.js","../src/tools/threeD/Engine3D.js","../src/visualization/geo/CountryListDraw.js","../src/visualization/geometry/CirclesVisOperators.js","../src/visualization/graphic/ColorsDraw.js","../src/visualization/graphic/ImageDraw.js","../src/visualization/lists/ListDraw.js","../src/visualization/numeric/IntervalTableDraw.js","../src/visualization/numeric/NumberTableDraw.js","../src/visualization/numeric/NumberListDraw.js","../src/visualization/objects/ObjectDraw.js","../src/visualization/strings/StringDraw.js","../src/visualization/strings/StringListDraw.js","../src/visualization/strings/StringListVisOperators.js","../src/visualization/structures/NetworkDraw.js","../src/visualization/structures/TreeDraw.js","../src/index.js"],"sourcesContent":["DataModel.prototype = {};\nDataModel.prototype.constructor = DataModel;\n\n/**\n * @classdesc Basic DataType from which other types are derived.\n *\n * @description Creates a new DataModel.\n * @constructor\n * @category basics\n */\nfunction DataModel() {\n\t// TODO. What is the intent in this line. I don't think its needed.\n  Object.apply(this);\n  this.type = \"DataModel\";\n}\nexport default DataModel;\n\nDataModel.prototype.destroy = function() {\n\t// TODO. Why is this being done? It is in a few\n\t// places in the codebase. Also this.name isn't\n\t// defined here.\n  delete this.type;\n  delete this.name;\n};\n\nDataModel.prototype.setType = function(type) {\n  this.type = type;\n};\n\nDataModel.prototype.getType = function() {\n  return this.type;\n};\n\nDataModel.prototype.toString = function() {\n\n};\n","import DataModel from \"src/dataStructures/DataModel\";\n\nPoint.prototype = new DataModel();\nPoint.prototype.constructor = Point;\n\n/**\n * @classdesc Represents an individual 2D point in space.\n *\n * @description Creates a new Point\n * @param {Number} x\n * @param {Number} y\n * @constructor\n * @category geometry\n */\nfunction Point(x, y) {\n  DataModel.apply(this, arguments);\n  this.type = \"Point\";\n  this.x = Number(x) || 0;\n  this.y = Number(y) || 0;\n}\nexport default Point;\n\n\nPoint.prototype.getNorm = function() {\n  return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n};\n\nPoint.prototype.getAngle = function() {\n  return Math.atan2(this.y, this.x);\n};\n\n\n\nPoint.prototype.factor = function(k) {\n  if(k >= 0 || k < 0) return new Point(this.x * k, this.y * k);\n  if(k.type != null && k.type == 'Point') return new Point(this.x * k.x, this.y * k.y);\n};\n\nPoint.prototype.normalize = function() {\n  var norm = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  return new Point(this.x / norm, this.y / norm);\n};\nPoint.prototype.normalizeToValue = function(k) {\n  var factor = k / Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  return new Point(this.x * factor, this.y * factor);\n};\n\n\n\nPoint.prototype.subtract = function(point) {\n  return new Point(this.x - point.x, this.y - point.y);\n};\n\nPoint.prototype.add = function(point) {\n  return new Point(point.x + this.x, point.y + this.y);\n};\n\nPoint.prototype.addCoordinates = function(x, y) {\n  return new Point(x + this.x, y + this.y);\n};\n\nPoint.prototype.distanceToPoint = function(point) {\n  return Math.sqrt(Math.pow(this.x - point.x, 2) + Math.pow(this.y - point.y, 2));\n};\nPoint.prototype.distanceToPointSquared = function(point) {\n  return Math.pow(this.x - point.x, 2) + Math.pow(this.y - point.y, 2);\n};\nPoint.prototype.angleToPoint = function(point) {\n  return Math.atan2(point.y - this.y, point.x - this.x);\n};\nPoint.prototype.expandFromPoint = function(point, factor) {\n  return new Point(point.x + factor * (this.x - point.x), point.y + factor * (this.y - point.y));\n};\n\n\nPoint.prototype.interpolate = function(point, t) {\n  return new Point((1 - t) * this.x + t * point.x, (1 - t) * this.y + t * point.y);\n};\n\nPoint.prototype.cross = function(point) {\n  return this.x * point.y - this.y * point.x;\n};\n\nPoint.prototype.dot = function(point) {\n  return this.x * point.x + this.y * point.y;\n};\n\nPoint.prototype.getRotated = function(angle, center) {\n  center = center == null ? new Point() : center;\n\n  return new Point(Math.cos(angle) * (this.x - center.x) - Math.sin(angle) * (this.y - center.y) + center.x, Math.sin(angle) * (this.x - center.x) + Math.cos(angle) * (this.y - center.y) + center.y);\n};\n\n\n\nPoint.prototype.clone = function() {\n  return new Point(this.x, this.y);\n};\nPoint.prototype.toString = function() {\n  return \"(x=\" + this.x + \", y=\" + this.y + \")\";\n};\n\n\nPoint.prototype.destroy = function() {\n  delete this.type;\n  delete this.name;\n  delete this.x;\n  delete this.y;\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\nInterval.prototype = new Point();\nInterval.prototype.constructor = Interval;\n\n/**\n * @classdesc Provide reasoning around numeric intervals.\n *\n * @constructor\n * @param {Number} x Interval's start value.\n * @param {Number} y Interval's end value.\n * @description Creates a new Interval.\n * @category numbers\n */\nfunction Interval(x, y) {\n  DataModel.apply(this, arguments);\n  this.x = Number(x);\n  this.y = Number(y);\n  this.type = \"Interval\";\n}\nexport default Interval;\n\n/**\n * Finds the minimum value of the Interval.\n *\n * @return {Number} the minimum value in the interval\n */\nInterval.prototype.getMin = function() {\n  return Math.min(this.x, this.y);\n};\n\n/**\n * Finds the maximum value of the Interval.\n *\n * @return {Number} the max value in the interval\n */\nInterval.prototype.getMax = function() {\n  return Math.max(this.x, this.y);\n};\n\n/**\n * Finds the range between the min and max of the Interval.\n *\n * @return {Number} the absolute difference between the starting and ending values.\n */\nInterval.prototype.getAmplitude = function() {\n  return Math.abs(this.x - this.y);\n};\n\n/**\n * Finds the range between the min and max of the Interval.\n * If the starting value of the Interval is less then the ending value,\n * this will return a negative value.\n *\n * @return {Number} the difference between the starting and ending values.\n */\nInterval.prototype.getSignedAmplitude = function() {\n  return this.x - this.y;\n};\n\nInterval.prototype.getMiddle = function() {\n  return(this.x + this.y) * 0.5;\n};\n\nInterval.prototype.getSign = function() {\n  if(this.x == this.y) return 0;\n  return this.getAmplitude() / this.getSignedAmplitude();\n};\n\n/**\n * Scales a value to\n *\n * @return {Interval}\n */\nInterval.prototype.getScaled = function(value) {\n  var midAmp = 0.5 * (this.y - this.x);\n  var middle = (this.x + this.y) * 0.5;\n  return new Interval(middle - midAmp * value, middle + midAmp * value);\n};\n\nInterval.prototype.getScaledFromProportion = function(value, proportion) {\n  var antiP = 1 - proportion;\n  var amp0 = proportion * (this.y - this.x);\n  var amp1 = antiP * (this.y - this.x);\n  var middle = antiP * this.x + proportion * this.y;\n  return new Interval(middle - amp0 * value, middle + amp1 * value);\n};\n\nInterval.prototype.add = function(value) {\n  return new Interval(this.x + value, this.y + value);\n};\n\nInterval.prototype.invert = function() {\n  var swap = this.x;\n  this.x = this.y;\n  this.y = swap;\n};\n\n/**\n * Returns a value in interval range\n * 0 -> min\n * 1 -> max\n * @param value between 0 and 1 (to obtain values between min and max)\n *\n */\nInterval.prototype.getInterpolatedValue = function(value) {\n  //TODO: should this be unsigned amplitude?\n  return value * Number(this.getSignedAmplitude()) + this.x;\n};\n\nInterval.prototype.getInverseInterpolatedValue = function(value) {\n  return(value - this.x) / this.getSignedAmplitude();\n};\n\nInterval.prototype.getInterpolatedValues = function(numberList) {\n  var newNumberList = [];\n  var nElements = numberList.length;\n  for(var i = 0; i < nElements; i++) {\n    newNumberList.push(this.getInterpolatedValue(numberList[i]));\n  }\n  return newNumberList;\n};\nInterval.prototype.getInverseInterpolatedValues = function(numberList) {\n  var newNumberList = [];\n  var nElements = numberList.length;\n  for(var i = 0; i < nElements; i++) {\n    newNumberList.push(this.getInverseInterpolatedValue(numberList[i]));\n  }\n  return newNumberList;\n};\n\nInterval.prototype.intersect = function(interval) {\n  return new Interval(Math.max(this.x, interval.x), Math.min(this.y, interval.y));\n};\n\n/**\n * create a new interval with the same proporties values\n * @return {Interval}\n *\n */\nInterval.prototype.clone = function() {\n  var newInterval = new Interval(this.x, this.y);\n  newInterval.name = name;\n  return newInterval;\n};\n\n/**\n * Indicates if a number is included in the Interval.\n *\n * @param value Number to test.\n * @return {Boolean} True if the value is inside the Interval.\n *\n */\nInterval.prototype.contains = function(value) {\n  if(this.y > this.x) return value >= this.x && value <= this.y;\n  return value >= this.y && value <= this.y;\n};\n\n/**\n * Indicate wether other interval contains the same values\n *\n * @param interval\n * @return {Boolean}\n *\n */\nInterval.prototype.isEquivalent = function(interval) {\n  return this.x == interval.x && this.y == interval.y;\n};\n\n/**\n * create a new interval with the same proporties values\n * @return {String}\n *\n */\n\nInterval.prototype.toString = function() {\n  return \"Interval[x:\" + this.x + \"| y:\" + this.y + \"| amplitude:\" + this.getAmplitude() + \"]\";\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\nRectangle.prototype = new DataModel();\nRectangle.prototype.constructor = Rectangle;\n\n/**\n * @classdesc Rectangle shape\n *\n * @description Creates a new Rectangle.\n * @param {Number} x\n * @param {Number} y\n * @param {Number} width\n * @param {Number} height\n * @constructor\n * @category geometry\n */\nfunction Rectangle(x, y, width, height) {\n  DataModel.apply(this);\n  this.name = \"\";\n  this.type = \"Rectangle\";\n  this.x = Number(x) || 0;\n  this.y = Number(y) || 0;\n  this.width = Number(width) || 0;\n  this.height = Number(height) || 0;\n}\nexport default Rectangle;\n\nRectangle.prototype.getRight = function() {\n  return this.x + this.width;\n};\n\nRectangle.prototype.getBottom = function() {\n  return this.y + this.height;\n};\n\nRectangle.prototype.setRight = function(value) {\n  this.width = value - this.x;\n};\n\nRectangle.prototype.setBottom = function(value) {\n  this.height = value - this.y;\n};\n\n\n\nRectangle.prototype.getTopLeft = function() {\n  return new Point(this.x, this.y);\n};\nRectangle.prototype.getTopRight = function() {\n  return new Point(this.x + this.width, this.y);\n};\n\nRectangle.prototype.getBottomRight = function() {\n  return new Point(this.x + this.width, this.y + this.height);\n};\nRectangle.prototype.getBottomLeft = function() {\n  return new Point(this.x, this.y + this.height);\n};\nRectangle.prototype.getCenter = function() {\n  return new Point(this.x + 0.5 * this.width, this.y + 0.5 * this.height);\n};\nRectangle.prototype.getRandomPoint = function() {\n  return new Point(this.x + Math.random() * this.width, this.y + Math.random() * this.height);\n};\n\nRectangle.prototype.getIntersection = function(rectangle) {\n  if(rectangle.x + rectangle.width < this.x || rectangle.x > this.x + this.width || rectangle.y + rectangle.height < this.y || rectangle.y > this.y + this.height) return null;\n  var xR = Math.max(rectangle.x, this.x);\n  var yR = Math.max(rectangle.y, this.y);\n  return new Rectangle(xR, yR, Math.min(rectangle.x + rectangle.width, this.x + this.width) - xR, Math.min(rectangle.y + rectangle.height, this.y + this.height) - yR);\n};\n\nRectangle.prototype.interpolate = function(rectangle, t) {\n  var mint = 1 - t;\n  return new Rectangle(mint * this.x + t * rectangle.x, mint * this.y + t * rectangle.y, mint * this.width + t * rectangle.width, mint * this.height + t * rectangle.height);\n};\n\nRectangle.prototype.getRatio = function() {\n  return Math.max(this.width, this.height) / Math.min(this.width, this.height);\n};\n\nRectangle.prototype.getArea = function() {\n  return this.width * this.height;\n};\n\n/**\n * check if a point belong to the rectangle\n * @param  {Point} point\n * @return {Boolean}\n * tags:geometry\n */\nRectangle.prototype.containsPoint = function(point) {\n  return(this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n};\n\n\nRectangle.prototype.pointIsOnBorder = function(point, margin) {\n  margin = margin == null ? 1 : margin;\n  if(point.x >= this.x - margin && point.x <= this.x + this.width + margin) {\n    if(point.y >= this.y - margin && point.y <= this.y + margin) return true;\n    if(point.y >= this.y + this.height - margin && point.y <= this.y + this.height + margin) return true;\n    if(point.y >= this.y - margin && point.y <= this.y + this.height + margin) {\n      if(point.x < this.x + margin || point.x > this.x + this.width - margin) return true;\n    }\n  }\n  return false;\n};\n\n\n\n\nRectangle.prototype.getNormalRectangle = function() {\n  return new Rectangle(Math.min(this.x, this.x + this.width), Math.min(this.y, this.y + this.height), Math.abs(this.width), Math.abs(this.height));\n};\n\n/**\n * return true if it interstects a rectangle\n * @param  {Rectangle} rectangle\n * @return {Boolean}\n * tags:geometry\n */\nRectangle.prototype.intersectsRectangle = function(rectangle) {\n  return !(this.x + this.width < rectangle.x) && !(this.y + this.height < rectangle.y) && !(rectangle.x + rectangle.width < this.x) && !(rectangle.y + rectangle.height < this.y);\n\n\n  if(this.x + this.width < rectangle.x) return false;\n  if(this.y + this.height < rectangle.y) return false;\n  if(rectangle.x + rectangle.width < this.x) return false;\n  if(rectangle.y + rectangle.height < this.y) return false;\n  return true;\n\n\n\n\treturn this.containsPoint(rectangle.getTopLeft()) || this.containsPoint(rectangle.getTopRight()) || this.containsPoint(rectangle.getBottomLeft()) || this.containsPoint(rectangle.getBottomRight())\n\t|| rectangle.containsPoint(this.getTopLeft()) || rectangle.containsPoint(this.getTopRight()) || rectangle.containsPoint(this.getBottomLeft()) || rectangle.containsPoint(this.getBottomRight());\n};\n\nRectangle.prototype.expand = function(expantion, centerPoint) {\n  centerPoint = centerPoint || new Point(this.x + 0.5 * this.width, this.y + 0.5 * this.height);\n  return new Rectangle((this.x - centerPoint.x) * expantion + centerPoint.x, (this.y - centerPoint.y) * expantion + centerPoint.y, this.width * expantion, this.height * expantion);\n};\n\nRectangle.prototype.isEqual = function(rectangle) {\n  return this.x == rectangle.x && this.y == rectangle.y && this.width == rectangle.width && this.height == rectangle.height;\n};\n\nRectangle.prototype.clone = function() {\n  return new Rectangle(this.x, this.y, this.width, this.height);\n};\n\nRectangle.prototype.toString = function() {\n  return \"(x=\" + this.x + \", y=\" + this.y + \", w=\" + this.width + \", h=\" + this.height + \")\";\n};\n\nRectangle.prototype.destroy = function() {\n  delete this.x;\n  delete this.y;\n  delete this.width;\n  delete this.height;\n};\n","import StringOperators from \"src/operators/strings/StringOperators\";\nimport DataModel from \"src/dataStructures/DataModel\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport DateList from \"src/dataStructures/dates/DateList\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport RelationList from \"src/dataStructures/structures/lists/RelationList\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport PolygonList from \"src/dataStructures/geometry/PolygonList\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport { instantiateWithSameType, typeOf, instantiate } from \"src/tools/utils/code/ClassUtils\";\n\nList.prototype = new DataModel();\nList.prototype.constructor = List;\n\n /**\n  * @classdesc List is an Array with a type property.\n  * Lists have a number of methods to assist with working with\n  * them. There are also a number of\n  *\n  * @description Creates a new List.\n  * @param {Number|String|Object} arguments Comma separated values to add to List\n  * @constructor\n  * @category basics\n  */\nfunction List() {\n  DataModel.apply(this);\n  var array = [];\n  var i;\n  for(i = 0; i < arguments.length; i++) {\n    array.push(arguments[i]);\n  }\n  array = List.fromArray(array);\n  //\n  return array;\n}\nexport default List;\n\n\n/**\n * Creates a new List from a raw array of values\n *\n * @param {Number[]|String[]|Object[]} array Array of values.\n * @return {List} New List.\n */\nList.fromArray = function(array) {\n  //TODO: clear some of these method declarations\n  array.type = \"List\";\n  array.name = array.name || \"\";\n\n  array.setType = List.prototype.setType;\n  array.setArray = List.prototype.setArray;\n  array._constructor = List;\n\n  array.getImproved = List.prototype.getImproved;\n  array.sameElements = List.prototype.sameElements;\n  array.getLength = List.prototype.getLength;\n  array.getTypeOfElements = List.prototype.getTypeOfElements; //TODO: redundant?\n  array.getTypes = List.prototype.getTypes;\n  array.getType = List.prototype.getType;\n  array.getLengths = List.prototype.getLengths;\n  array.getWithoutRepetitions = List.prototype.getWithoutRepetitions;\n  array.getElementsRepetitionCount = List.prototype.getElementsRepetitionCount;\n  array.allElementsEqual = List.prototype.allElementsEqual;\n  array.countElement = List.prototype.countElement;\n  array.countOccurrences = List.prototype.countOccurrences;\n  array.getMostRepeatedElement = List.prototype.getMostRepeatedElement;\n  array.getMin = List.prototype.getMin;\n  array.getMax = List.prototype.getMax;\n  array.indexesOf = List.prototype.indexesOf;\n  array.indexOfElements = List.prototype.indexOfElements;\n  array.indexOfByPropertyValue = List.prototype.indexOfByPropertyValue;\n  array.getFirstElementByName = List.prototype.getFirstElementByName;\n  array.getElementsByNames = List.prototype.getElementsByNames;\n  array.getFirstElementByPropertyValue = List.prototype.getFirstElementByPropertyValue;\n  array.add = List.prototype.add;\n  array.multiply = List.prototype.multiply;\n  array.getSubList = List.prototype.getSubList;\n  array.getSubListByIndexes = List.prototype.getSubListByIndexes;\n  array.getSubListByType = List.prototype.getSubListByType;\n  array.getElementNumberOfOccurrences = List.prototype.getElementNumberOfOccurrences;\n  array.getPropertyValues = List.prototype.getPropertyValues;\n  array.getRandomElement = List.prototype.getRandomElement;\n  array.getRandomElements = List.prototype.getRandomElements;\n  array.containsElement = List.prototype.containsElement;\n  array.indexOfElement = List.prototype.indexOfElement;\n  //sorting:\n  array.sortIndexed = List.prototype.sortIndexed;\n  array.sortNumericIndexed = List.prototype.sortNumericIndexed;\n  array.sortNumeric = List.prototype.sortNumeric;\n  array.sortNumericIndexedDescending = List.prototype.sortNumericIndexedDescending;\n  array.sortNumericDescending = List.prototype.sortNumericDescending;\n  array.sortOnIndexes = List.prototype.sortOnIndexes;\n  array.getReversed = List.prototype.getReversed;\n  array.getSortedByProperty = List.prototype.getSortedByProperty;\n  array.getSorted = List.prototype.getSorted;\n  array.getSortedByList = List.prototype.getSortedByList;\n  array.getSortedRandom = List.prototype.getSortedRandom;\n  //filter:\n  array.getFilteredByPropertyValue = List.prototype.getFilteredByPropertyValue;\n  array.getFilteredByBooleanList = List.prototype.getFilteredByBooleanList;\n  //conversion\n  array.toNumberList = List.prototype.toNumberList;\n  array.toStringList = List.prototype.toStringList;\n  //\n  array.clone = List.prototype.clone;\n  array.toString = List.prototype.toString;\n  array.getNames = List.prototype.getNames;\n  array.applyFunction = List.prototype.applyFunction;\n  array.getWithoutElementAtIndex = List.prototype.getWithoutElementAtIndex;\n  array.getWithoutElement = List.prototype.getWithoutElement;\n  array.getWithoutElements = List.prototype.getWithoutElements;\n  array.getWithoutElementsAtIndexes = List.prototype.getWithoutElementsAtIndexes;\n  array.getFilteredByFunction = List.prototype.getFilteredByFunction;\n  array._concat = Array.prototype.concat;\n  array.concat = List.prototype.concat;\n  array.getReport = List.prototype.getReport;\n\n  //transformations\n  array.pushIfUnique = List.prototype.pushIfUnique;\n  array.removeElement = List.prototype.removeElement;\n  array.removeElementAtIndex = List.prototype.removeElementAtIndex;\n  array.removeElementsAtIndexes = List.prototype.removeElementsAtIndexes;\n  array.removeElements = List.prototype.removeElements;\n  array.removeRepetitions = List.prototype.removeRepetitions;\n  array.replace = List.prototype.replace;\n  array.assignNames = List.prototype.assignNames;\n  array._splice = Array.prototype.splice;\n  array.splice = List.prototype.splice;\n\n  array.isList = true;\n\n  array.destroy = List.prototype.destroy;\n\n\n  return array;\n};\n\n/**\n * improves a list by its refining type (if the List contains numbers it will return a NumberList)\n * @return {List} Specific sub-class of List, based on the contents of the List.\n * tags:\n */\nList.prototype.getImproved = function() {\n  //TODO: still doesn't solve tha case of a list with several list of different types\n  if(this.length === 0) {\n    return this;\n  }\n\n  var typeOfElements = this.getTypeOfElements();\n\n  var newList;\n  switch(typeOfElements) {\n    case \"number\":\n      newList = NumberList.fromArray(this, false);\n      break;\n    case \"string\":\n      newList = StringList.fromArray(this, false);\n      break;\n    case \"Rectangle\":\n      return this;\n    case \"date\":\n      newList = DateList.fromArray(this, false);\n      break;\n    case \"List\":\n    case \"DateList\":\n    case \"IntervalList\":\n    case \"StringList\":\n    case \"Table\":\n      newList = Table.fromArray(this, false);\n      break;\n    case \"NumberList\":\n      newList = NumberTable.fromArray(this, false);\n      break;\n    case \"Point\":\n      newList = Polygon.fromArray(this, false);\n      break;\n    case \"Polygon\":\n      newList = PolygonList.fromArray(this, false);\n      break;\n    case \"Node\":\n      newList = NodeList.fromArray(this, false);\n      break;\n    case \"Relation\":\n      newList = RelationList.fromArray(this, false);\n      break;\n      var newList = NumberList.fromArray(this, false);\n    break;\n    case \"string\":\n      var newList = StringList.fromArray(this, false);\n    break;\n    case \"Rectangle\":\n      return this;\n    case \"date\":\n      var newList = DateList.fromArray(this, false);\n    break;\n    case \"List\":\n      case \"DateList\":\n      case \"IntervalList\":\n      case \"StringList\":\n      case \"Table\":\n      var newList = Table.fromArray(this, false);\n    break;\n    case \"NumberList\":\n      var newList = NumberTable.fromArray(this, false);\n    break;\n    case \"Point\":\n      var newList = Polygon.fromArray(this, false);\n    break;\n    case \"Polygon\":\n      var newList = PolygonList.fromArray(this, false);\n    break;\n    case \"Node\":\n      var newList = NodeList.fromArray(this, false);\n    break;\n    case \"Relation\":\n      var newList = RelationList.fromArray(this, false);\n    break;\n  }\n\n  if(newList === null ||  newList === \"\") {\n    //c.l('getImproved | all elelemnts no same type')\n\n    var allLists = true;\n    var i;\n    for(i = 0; this[i] != null; i++) {\n      //c.l('isList?', i, this[i].isList);\n      if(!(this[i].isList)) {\n        allLists = false;\n        break;\n      }\n    }\n    //c.l('--> allLists');\n    if(allLists) newList = Table.fromArray(this, false);\n  }\n\n  if(newList != null) {\n    newList.name = this.name;\n    return newList;\n  }\n  return this;\n};\n\n/**\n * Compares elements with another list.\n * @param  {List} list List to compare.\n * @return {Boolean} true if all elements are identical.\n * tags:\n */\nList.prototype.sameElements = function(list) {\n  if(this.length != list.length) return false;\n\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(this[i] != list[i]) return false;\n  }\n\n  return true;\n};\n\n/**\n * Returns the number of elements of the list.\n * @return {Number} Length of the list.\n * tags:\n */\nList.prototype.getLength = function() {\n  return this.length;\n};\n\n/**\n * In sub-classes, this function returns a NumberList of lengths.\n * Base function returns null.\n * @return {null}\n * tags:\n */\nList.prototype.getLengths = function() {\n  //overriden by different extentions of List\n  return null;\n};\n\n/**\n * returns the type of values contained in the List.\n * Uses typeOf to determine type. If multiple types,\n * returns an empty string.\n * @return {String} Type of element stored in the List.\n */\nList.prototype.getTypeOfElements = function() {\n  var typeOfElements = typeOf(this[0]);\n  for(var i = 1; this[i] != null; i++) {\n    if(typeOf(this[i]) != typeOfElements) return \"\";\n  }\n  return typeOfElements;\n};\n\n/**\n * returns a {@link StringList} with elemnts types\n * for all elements in the List.\n * @return {StringList} List of types for each element.\n * tags:\n */\nList.prototype.getTypes = function() {\n  var types = new StringList();\n  for(var i = 0; this[i] != null; i++) {\n    types[i] = typeOf(this[i]);\n  }\n  return types;\n};\n\n\n/**\n * converts the List into a string.\n * @return {String} String representation of the List.\n */\nList.prototype.toString = function() {\n  var i;\n  var str = \"[\";\n  for(var i = 0; i < this.length - 1; i++) {\n    str += this[i] + \", \";\n  }\n  str += this[this.length - 1] + \"]\";\n  return str;\n};\n\n/**\n * returns a list of names (if any) of elements of the list\n * @return {StringList}\n * tags:\n */\nList.prototype.getNames = function() {\n  var stringList = new StringList();\n  for(var i = 0; this[i] != null; i++) {\n    stringList[i] = this[i].name;\n  }\n  return stringList;\n};\n\n/**\n * reverses the list\n * @return {List} New List reveresed from original.\n * tags:sort\n */\nList.prototype.getReversed = function() {\n  var newList = instantiateWithSameType(this);\n  for(var i = 0; this[i] != null; i++) {\n    newList.unshift(this[i]);\n  }\n  return newList;\n};\n\n/**\n * returns a sub-list, params could be: tw numbers, an interval or a NumberList.\n * @param {Number|Interval} argument0 number, interval (in this it will\n * include elements with initial and end indexes) or numberList\n * @param {Number} argument1 second index\n * @return {List}\n * tags:filter\n */\nList.prototype.getSubList = function() {\n  var interval;\n  if(arguments[0].isList) {\n    return this.getSubListByIndexes(arguments[0]);\n  } else if(arguments.length > 2) {\n    return this.getSubListByIndexes(arguments);\n  } else if(typeOf(arguments[0]) == 'number') {\n    if(typeOf(arguments[1]) != null && typeOf(arguments[1]) == 'number') {\n      interval = new Interval(arguments[0], arguments[1]);\n    } else {\n      interval = new Interval(arguments[0], this.length - 1);\n    }\n  } else {\n    interval = arguments[0];\n  }\n\n  var newInterval = new Interval(Math.max(Math.min(Math.floor(interval.x), this.length), 0), Math.max(Math.min(Math.floor(interval.y), this.length - 1), 0));\n  var newList;\n\n  if(this.type == \"NumberList\") {\n    newList = NumberList.fromArray(this.slice(interval.x, interval.y + 1), false);\n    newList.name = this.name;\n    return newList;\n  } else if(this.type == \"StringList\") {\n    newList = StringList.fromArray(this.slice(interval.x, interval.y + 1), false);\n    newList.name = this.name;\n    return newList;\n  }\n\n  if(this.type == 'List' || this.type == 'Table') {\n    newList = new List();\n  } else {\n    newList = instantiate(typeOf(this));\n  }\n\n  for(var i = newInterval.x; i <= newInterval.y; i++) {\n    newList.push(this[i]);\n  }\n  newList.name = this.name;\n  if(this.type == 'List' || this.type == 'Table') return newList.getImproved();\n  return newList;\n};\n\n/**\n * filters a list by picking elements of certain type.\n * @param  {String} type The type to include in the new List.\n * @return {List} A List only containing values from the original\n * List of the input type.\n * tags:filter\n */\nList.prototype.getSubListByType = function(type) {\n  var newList = new List();\n  newList.name = this.name;\n  this.forEach(function(element) {\n    if(typeOf(element) == type) newList.push(element);\n  });\n  return newList.getImproved();\n};\n\n/**\n * returns all elements in indexes.\n * @param {NumberList} indexes\n * @return {List}\n * tags:filter\n */\nList.prototype.getSubListByIndexes = function() { //TODO: merge with getSubList\n  if(this.length < 1) return this;\n  var indexes;\n  if(typeOf(arguments[0]) == 'number') {\n    indexes = arguments;\n  } else {\n    indexes = arguments[0];\n  }\n\n  if(indexes == null) {\n    return;\n  }\n\n  var newList;\n  if(this.type == 'List') {\n    newList = new List();\n  } else {\n    newList = instantiate(typeOf(this));\n  }\n\n  if(indexes.length === 0) {\n    return newList;\n  }\n  newList.name = this.name;\n  var nElements = this.length;\n  var nPositions = indexes.length;\n  var i;\n  for(i = 0; i < nPositions; i++) {\n    if(indexes[i] < nElements) {\n      newList.push(this[(indexes[i] + this.length) % this.length]);\n    }\n  }\n\n  if(this.type == 'List' || this.type == 'Table') {\n    return newList.getImproved();\n  }\n  return newList;\n};\n\n/**\n * getElementNumberOfOccurrences\n * @param {Object} element\n * @return {Number}\n */\nList.prototype.getElementNumberOfOccurrences = function(element) {\n  var nOccurrences = 0;\n  var from = 0;\n  var index = this.indexOf(element, from);\n  while(index > -1) {\n    nOccurrences++;\n    from = index + 1;\n    index = this.indexOf(element, from);\n  }\n  return nOccurrences;\n};\n\n\n/**\n * creates a copy of the List\n * @return {List}\n */\nList.prototype.clone = function() {\n  //TODO:check this! fromArray should suffice\n  var clonedList = instantiateWithSameType(this);\n  var i;\n\n  for(i = 0; this[i] != null; i++) {\n    clonedList.push(this[i]);\n  }\n  clonedList.name = this.name;\n  return clonedList;\n};\n\n/**\n * creates a new List without repeating elements.\n * @return {List}\n * tags:filter\n */\nList.prototype.getWithoutRepetitions = function() {\n  var i;\n  var dictionary;\n\n  var newList = instantiateWithSameType(this);\n  newList.name = this.name;\n\n  if(this.type == 'NumberList' || this.type == 'StringList') {\n    dictionary = {};\n    for(i = 0; this[i] != null; i++) {\n      if(!dictionary[this[i]]) {\n        newList.push(this[i]);\n        dictionary[this[i]] = true;\n      }\n    }\n  } else {\n    for(i = 0; this[i] != null; i++) {\n      if(newList.indexOf(this[i]) == -1) newList.push(this[i]);\n    }\n  }\n\n  return newList;\n};\n\n\n\n/**\n * returns the number of occurrences of an element in a list.\n * @param  {Object} element The element to count\n * @return {Number}\n * tags:countt\n */\nList.prototype.countElement = function(element) {\n  var n = 0;\n  this.forEach(function(elementInList) {\n    if(element == elementInList) {\n      n++;\n    }\n  });\n  return n;\n};\n\n/**\n * returns a NumberList of same size as list with number of occurrences for each element.\n * @return {numberList}\n * tags:count\n */\nList.prototype.countOccurrences = function() { //TODO: more efficient\n  var occurrences = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    occurrences[i] = this.indexesOf(this[i]).length;\n  }\n  return occurrences;\n};\n\n/**\n * returns a table with a list of non repeated elements and a list with the numbers of occurrences for each one.\n * @param  {Boolean} sortListsByOccurrences if true both lists in the table will be sorted by number of occurences (most frequent on top), true by default\n * @return {Table} Table containing a List of non-repeated elements and a NumberList of the frequency of each element.\n * tags:count\n */\nList.prototype.getElementsRepetitionCount = function(sortListsByOccurrences) {\n  sortListsByOccurrences = sortListsByOccurrences == null ? true : sortListsByOccurrences;\n\n  var obj;\n  var elementList = new List();\n  var numberList = new NumberList();\n  var nElements = this.length;\n  var index;\n\n  for(var i = 0; i < nElements; i++) {\n    obj = this[i];\n    index = elementList.indexOf(obj);\n    if(index != -1) {\n      numberList[index]++;\n    } else {\n      elementList.push(obj);\n      numberList.push(1);\n    }\n  }\n\n  var table = new Table();\n  table.push(elementList);\n  table.push(numberList);\n  if(sortListsByOccurrences) {\n    // var indexArray=numberList.getSortIndexes();//sortNumericIndexed();\n    // var j;\n    // for(j=0; j<table.length; j++){\n    //  table[j]=table[j].clone().sortOnIndexes(indexArray);\n    // }\n    table = table.getListsSortedByList(numberList, false);\n  }\n\n  return table;\n};\n\n/**\n * checks if all values in the list are equal to one another\n * @return {Boolean} Returns true if all values in the list are equal.\n */\nList.prototype.allElementsEqual = function() {\n  var i;\n  if(this.length < 2) return true;\n\n  var first = this[0];\n\n  for(i = 1; this[i] != null; i++) {\n    if(this[i] != first) return false;\n  }\n\n  return true;\n};\n\n\n/**\n * Returns the value in the list that is repeated the most times.\n *\n * @return {Object} Most repeated value.\n */\nList.prototype.getMostRepeatedElement = function() {\n  //TODO: this method should be more efficient\n  return ListOperators.countElementsRepetitionOnList(this, true)[0][0];\n};\n\n/**\n * returns the minimum value\n * @return {Number} minimum value in the list\n * tags:\n */\nList.prototype.getMin = function() {\n  if(this.length === 0) return null;\n  var min = this[0];\n  var i;\n  for(i = 1; i < this.length; i++) {\n    min = Math.min(min, this[i]);\n  }\n  return min;\n};\n\n/**\n * returns the maximum value\n * @return {Number} maximum value in the list\n * tags:\n */\nList.prototype.getMax = function() {\n  if(this.length === 0) return null;\n  var max = this[0];\n  var i;\n  for(i = 1; i < this.length; i++) {\n    max = Math.max(max, this[i]);\n  }\n  return max;\n};\n\n/**\n * Creates a new List with the given value added\n * to each element in the current List.\n *\n * @param {Number} value Number to be added to each\n * element in the List.\n * @return {List} New List with each element the result\n * of adding the given value to the original elements\n * in the List.\n */\nList.prototype.add = function(value) {\n  if(value.constructor == Number) {\n    var i;\n    var array = instantiateWithSameType(this);\n    for(i = 0; i < this.length; i++) {\n      array.push(this[i] + value);\n    }\n    return array;\n  }\n};\n\n/**\n * Selects a random element from list.\n *\n * @return {Object}\n * tags:\n */\nList.prototype.getRandomElement = function() {\n  return this[Math.floor(this.length * Math.random())];\n};\n\n/**\n * creates a List with randomly selected elements.\n * @param  {Number} n number of elements\n * @param  {Boolean} avoidRepetitions\n * @return {List}\n * tags:filter\n */\nList.prototype.getRandomElements = function(n, avoidRepetitions) {\n  avoidRepetitions = avoidRepetitions == null ? true : avoidRepetitions;\n  n = Math.min(n, this.length);\n  var newList = instantiateWithSameType(this);\n  var element;\n\n  while(newList.length < n) {\n    element = this[Math.floor(this.length * Math.random())];\n    if(!avoidRepetitions || newList.indexOf(element) == -1) newList.push(element);\n  }\n  return newList;\n};\n\n\n/**\n * returns true if the given element is in the List.\n * @param {Object} element Element to look for in the List.\n * @return {Boolean} True if given element is in the List.\n */\nList.prototype.containsElement = function(element) { //TODO: test if this is faster than indexOf\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(this[i] == element) return true;\n  }\n  return false;\n};\n\n/**\n * returns the index position of the given element in the List.\n * @param {Object} element Value to search for in the List.\n * @return {Number} Index of the given element in the List.\n * If element is not found, -1 is returned.\n */\nList.prototype.indexOfElement = function(element) { //TODO: test if this is faster than indexOf\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(this[i] == element) return i;\n  }\n  return -1;\n};\n\n/**\n * Returns a List of values of a property of all elements.\n *\n * @param  {String} propertyName\n *\n * @param  {Object} valueIfNull in case the property doesn't exist in the element\n * @return {List}\n * tags:\n */\nList.prototype.getPropertyValues = function(propertyName, valueIfNull) {\n  var newList = new List();\n  newList.name = propertyName;\n  var val;\n  for(var i = 0; this[i] != null; i++) {\n    val = this[i][propertyName];\n    newList[i] = (val == null ? valueIfNull : val);\n  }\n  return newList.getImproved();\n};\n\nList.prototype.sortIndexed = function() {\n  var index = [];\n  var i;\n  for(i = 0; i < this.length; i++) {\n    index.push({\n      index: i,\n      value: this[i]\n    });\n  }\n  var comparator = function(a, b) {\n    var array_a = a.value;\n    var array_b = b.value;\n\n    return array_a < array_b ? -1 : array_a > array_b ? 1 : 0;\n  };\n  index = index.sort(comparator);\n  var result = new NumberList();\n  for(i = 0; i < index.length; i++) {\n    result.push(index[i].index);\n  }\n  return result;\n};\n\n// List.prototype.sortNumericIndexed=function() {\n//  var index = new Array();\n//  var i;\n//  for(i=0; i<this.length; i++){\n//      index.push({index:i, value:this[i]});\n//  }\n//  var comparator = function(a, b) {\n//      var array_a = a.value;\n//      var array_b = b.value;;\n\n//      return array_a - array_b;\n//  }\n//  index=index.sort(comparator);\n//  var result = new NumberList();\n//  for(i=0; i<index.length; i++){\n//      result.push(index[i].index);\n//  }\n//  return result;\n// }\n\n// List.prototype.sortNumeric=function(descendant){\n//  var comparator;\n//  if(descendant){\n//    var comparator=function(a, b){\n//      return b - a;\n//    }\n//  } else {\n//    var comparator=function(a, b){\n//      return a - b;\n//    }\n//  }\n//  return this.sort(comparator);\n// }\n\nList.prototype.sortOnIndexes = function(indexes) {\n  var result = instantiateWithSameType(this);\n  result.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(indexes[i] != -1) result.push(this[indexes[i]]);\n  }\n  return result;\n};\n\nList.prototype.getSortedByProperty = function(propertyName, ascending) {\n  ascending = ascending == null ? true : ascending;\n\n  var comparator;\n  if(ascending) {\n    comparator = function(a, b) {\n      return a[propertyName] > b[propertyName] ? 1 : -1;\n    };\n  } else {\n    comparator = function(a, b) {\n      return b[propertyName] > a[propertyName] ? 1 : -1;\n    };\n  }\n  return this.clone().sort(comparator);\n};\n\n/**\n * Returns a sorted version of the List.\n *\n * @param  {Boolean} ascending sort (true by default)\n * @return {List}\n * tags:sort\n */\nList.prototype.getSorted = function(ascending) {\n  ascending = ascending == null ? true : ascending;\n\n  var comparator;\n  if(ascending) {\n    comparator = function(a, b) {\n      return a > b ? 1 : -1;\n    };\n  } else {\n    comparator = function(a, b) {\n      return a > b ? -1 : 1;\n    };\n  }\n  return this.clone().sort(comparator);\n};\n\n/**\n * Sorts the List by another List.\n *\n * @param  {List} list List used to sort (numberList, stringList, dateList…)\n *\n * @param  {Boolean} ascending (true by default)\n * @return {List} sorted list (of the same type)\n * tags:sort\n */\nList.prototype.getSortedByList = function(list, ascending) {\n  ascending = ascending == null ? true : ascending;\n\n  var pairsArray = [];\n  var i;\n\n  for(i = 0; this[i] != null; i++) {\n    pairsArray[i] = [this[i], list[i]];\n  }\n\n  var comparator;\n  if(ascending) {\n    comparator = function(a, b) {\n      return a[1] < b[1] ? -1 : 1;\n    };\n  } else {\n    comparator = function(a, b) {\n      return a[1] < b[1] ? 1 : -1;\n    };\n  }\n\n  pairsArray = pairsArray.sort(comparator);\n\n  var newList = instantiateWithSameType(this);\n  newList.name = this.name;\n\n  for(i = 0; this[i] != null; i++) {\n    newList[i] = pairsArray[i][0];\n  }\n\n  return newList;\n};\n\n\n/**\n * Returns a copy of the list with random sorting.\n *\n * @return {List}\n * tags:sort\n */\nList.prototype.getSortedRandom = function() {\n  var newList = this.clone();\n  newList.name = this.name;\n  newList.sort(function() {\n    return Math.random() < 0.5 ? 1 : -1;\n  });\n  return newList;\n};\n\n/**\n * Returns a NumberList with the indexes (positions) of an element.\n *\n * @param  {Object} element\n * @return {NumberList}\n * tags:\n */\nList.prototype.indexesOf = function(element) {\n  var index = this.indexOf(element);\n  var numberList = new NumberList();\n  while(index != -1) {\n    numberList.push(index);\n    index = this.indexOf(element, index + 1);\n  }\n  return numberList;\n};\n\n/**\n * Returns a NumberList with indexes (first position) of elements in a list.\n *\n * @param  {List} elements\n * @return {NumberList}\n * tags:\n */\nList.prototype.indexOfElements = function(elements) {\n  var numberList = new NumberList();\n  for(var i = 0; elements[i] != null; i++) {\n    numberList[i] = this.indexOf(elements[i]);\n  }\n  return numberList;\n};\n\n/**\n * Returns the first element (or index) of an element in the with a given name.\n *\n * @param  {String} name of element\n * @param  {Boolean} returnIndex if true returns the index of element (false by default)\n * @return {List}\n * tags: filter\n */\nList.prototype.getFirstElementByName = function(name, returnIndex) {\n  for(var i = 0; this[i] != null; i++) {\n    if(this[i].name == name) return returnIndex ? i : this[i];\n  }\n  return returnIndex ? -1 : null;\n};\n\n/**\n * Returns the first element from each name ([!] to be tested).\n *\n * @param  {StringList} names of elements to be filtered\n * @param  {Boolean} returnIndexes if true returns the indexes of elements (false by default)\n * @return {List}\n * tags:filter\n */\nList.prototype.getElementsByNames = function(names, returnIndex) {\n  var list = returnIndex ? new NumberList() : new List();\n  var i;\n\n  names.forEach(function(name) {\n    for(i = 0; this[i] != null; i++) {\n      if(this[i].name == name) {\n        list.push(returnIndex ? i : this[i]);\n        break;\n      }\n    }\n    list.push(returnIndex ? -1 : null);\n  });\n\n  return returnIndex ? list : list.getImproved();\n};\n\n\n/**\n * Gets the first elemenet that has some property with a given value.\n *\n * @param  {String} propertyName name of property\n * @param  {Object} value value of property\n * @return {Object}\n * tags:\n */\nList.prototype.getFirstElementByPropertyValue = function(propertyName, value) {\n  for(var i = 0; this[i] != null; i++) {\n    if(this[i][propertyName] == value) return this[i];\n  }\n  return null;\n};\n\nList.prototype.indexOfByPropertyValue = function(propertyName, value) {\n  for(var i = 0; this[i] != null; i++) {\n    if(this[i][propertyName] == value) return i;\n  }\n  return -1;\n};\n\n\n\n/**\n * Filters the list by booleans (also accepts numberList with 0s as false a any other number as true).\n *\n * @param  {List} booleanList booleanList or numberList\n * @return {List}\n * tags:filter\n */\nList.prototype.getFilteredByBooleanList = function(booleanList) {\n  var newList = new List();\n  newList.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(booleanList[i]) newList.push(this[i]);\n  }\n  return newList.getImproved();\n};\n\n/**\n * Filters a list by its elements, and a type of comparison (equal by default).\n *\n * @param  {Object} value object (for equal or different comparison) or number or date\n * (for equal, different, greater, lesser).\n * @param  {String} comparison equal (default), different, greater, lesser.\n * @return {List} Filtered list\n * tags:filter\n */\nList.prototype.getFilteredByValue = function(value, comparison) {\n  comparison = comparison == null ? \"equal\" : comparison;\n\n  var newList = new List();\n  newList.name = \"filtered_\" + this.name;\n  var i;\n  switch(comparison) {\n    case \"equal\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] == propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"different\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] != propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"greater\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] > propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"lower\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] > propertyValue) newList.push(this[i]);\n    }\n    break;\n  }\n\n  return newList.getImproved();\n};\n\n/**\n * Filters a list by the values of a property on its elements, and a type of comparison (equal by default).\n *\n * @param  {String} propertyName name of property\n * @param  {Object} propertyValue object (for equal or different comparison) or number or date (for equal, different, greater, lesser)\n * @param  {String} comparison equal (default), different, greater, lesser\n * @return {List} filtered list\n * tags:filter\n */\nList.prototype.getFilteredByPropertyValue = function(propertyName, propertyValue, comparison) {\n  comparison = comparison == null ? \"equal\" : comparison;\n\n  var newList = new List();\n  newList.name = \"filtered_\" + this.name;\n  var i;\n  switch(comparison) {\n    case \"equal\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] == propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"different\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] != propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"greater\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] > propertyValue) newList.push(this[i]);\n    }\n    break;\n    case \"lower\":\n      for(i = 0; this[i] != null; i++) {\n      if(this[i][propertyName] > propertyValue) newList.push(this[i]);\n    }\n    break;\n  }\n\n  return newList.getImproved();\n};\n\n/**\n * Converts the List into a NumberList.\n *\n * @return {NumberList}\n * tags:conversion\n */\nList.prototype.toNumberList = function() {\n  var numberList = new NumberList();\n  numberList.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    numberList[i] = Number(this[i]);\n  }\n  return numberList;\n};\n\n/**\n * Converts the List into a StringList.\n *\n * @return {StringList}\n * tags:conversion\n */\nList.prototype.toStringList = function() {\n  var i;\n  var stringList = new StringList();\n  stringList.name = this.name;\n  for(i = 0; this[i] != null; i++) {\n    if(typeof this[i] == 'number') {\n      stringList[i] = String(this[i]);\n    } else {\n      stringList[i] = this[i].toString();\n    }\n  }\n  return stringList;\n};\n\nList.prototype.applyFunction = function(func) {\n  //TODO: to be tested!\n  var newList = new List();\n  newList.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    newList[i] = func(this[i]);\n  }\n  return newList.getImproved();\n};\n\n\n//filtering\n\nList.prototype.getWithoutElementsAtIndexes = function(indexes) { //[!] This DOESN'T transforms the List\n  var i;\n  var newList;\n  if(this.type == 'List') {\n    newList = new List();\n  } else {\n    newList = instantiate(typeOf(this));\n  }\n  for(i = 0; i < this.length; i++) {\n    if(indexes.indexOf(i) == -1) {\n      newList.push(this[i]);\n    }\n  }\n  if(this.type == 'List') return newList.getImproved();\n  return newList;\n};\n\n/**\n * Removes an element and returns a new list.\n *\n * @param  {Number} index of element to remove\n * @return {List}\n * tags:filter\n */\nList.prototype.getWithoutElementAtIndex = function(index) {\n  var newList;\n  if(this.type == 'List') {\n    newList = new List();\n  } else {\n    newList = instantiateWithSameType(this);\n  }\n  for(var i = 0; this[i] != null; i++) {\n    if(i != index) {\n      newList.push(this[i]);\n    }\n  }\n  newList.name = this.name;\n  if(this.type == 'List') return newList.getImproved();\n  return newList;\n};\n\n/**\n * Creates a new List without the given element present.\n * If multiple copies of the element exist, only exlcudes first copy.\n *\n * @param {Number|String|Object} element Element to exclude in the new List.\n * @return {List} New List missing the given element.\n */\nList.prototype.getWithoutElement = function(element) {\n  var index = this.indexOf(element);\n  if(index == -1) return this;\n\n  var newList;\n\n  if(this.type == 'List') {\n    newList = new List();\n  } else {\n    newList = instantiateWithSameType(this);\n  }\n\n  newList.name = this.name;\n\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    if(i != index) newList.push(this[i]);\n  }\n\n  if(this.type == 'List') return newList.getImproved();\n  return newList;\n};\n\nList.prototype.getWithoutElements = function(list) {\n  var newList;\n  if(this.type == 'List') {\n    newList = new List();\n  } else {\n    newList = instantiateWithSameType(this);\n  }\n\n  for(var i = 0; this[i] != null; i++) {\n    if(list.indexOf(this[i]) == -1) {\n      newList.push(this[i]);\n    }\n  }\n  newList.name = this.name;\n  if(this.type == 'List') return newList.getImproved();\n  return newList;\n};\n\n\n/**\n * Returns subset of List where true is returned from\n * given function that is executed on each element in the List.\n *\n * @param {Function} func Function to run on each element.\n * If the function returns true, the element is maintained in the\n * returned List.\n * @return {List} Filtered List.\n */\nList.prototype.getFilteredByFunction = function(func) {\n  var newList = instantiateWithSameType(this);\n  for(var i = 0; this[i] != null; i++) {\n    if(func(this[i])) {\n      newList.push(this[i]);\n    }\n  }\n  newList.name = this.name;\n  if(this.type == 'List') return newList.getImproved();\n  return newList;\n};\n\nList.prototype.concat = function() {\n  if(arguments[0] == null) return this;\n\n  //c.l('concat | arguments[0].type, this.type', arguments[0].type, this.type);\n\n  if(arguments[0].type == this.type) {\n    if(this.type == \"NumberList\") {\n      return NumberList.fromArray(this._concat.apply(this, arguments), false);\n    } else if(this.type == \"StringList\") {\n      return StringList.fromArray(this._concat.apply(this, arguments), false);\n    } else if(this.type == \"NodeList\") { //[!] concat breaks the getNodeById in NodeList\n      return NodeList.fromArray(this._concat.apply(this, arguments), false);\n    } else if(this.type == \"DateList\") {\n      return DateList.fromArray(this._concat.apply(this, arguments), false);\n    } else if(this.type == \"Table\") {\n      return Table.fromArray(this._concat.apply(this, arguments), false);\n    } else if(this.type == \"NumberTable\") {\n      return NumberTable.fromArray(this._concat.apply(this, arguments), false);\n    }\n  }\n  return List.fromArray(this._concat.apply(this, arguments)).getImproved();\n};\n\n\nList.prototype.getReport = function(level) { //TODO:complete\n  var ident = \"\\n\" + (level > 0 ? StringOperators.repeatString(\"  \", level) : \"\");\n  var text = level > 0 ? (ident + \"////report of instance of List////\") : \"///////////report of instance of List//////////\";\n\n  var length = this.length;\n  var i;\n\n  text += ident + \"name: \" + this.name;\n  text += ident + \"type: \" + this.type;\n\n  if(length == 0) {\n    text += ident + \"single element: [\" + this[0] + \"]\";\n    return text;\n  } else {\n    text += ident + \"length: \" + length;\n    text += ident + \"first element: [\" + this[0] + \"]\";\n  }\n\n  switch(this.type) {\n    case \"NumberList\":\n      var min = this.getMin();\n      var max = this.getMax();\n      this.min = min;\n      this.max = max;\n      var average = (min + max) * 0.5;\n      this.average = average;\n      text += ident + \"min: \" + min;\n      text += ident + \"max: \" + max;\n      text += ident + \"average: \" + average;\n      if(length < 101) {\n        text += ident + \"numbers: \" + this.join(\", \");\n      }\n      break;\n      case \"StringList\":\n    case \"List\":\n      var freqTable = this.getElementsRepetitionCount(true);\n      this._freqTable = freqTable;\n      text += ident + \"number of different elements: \" + freqTable[0].length;\n      if(freqTable[0].length < 10) {\n        text += ident + \"elements frequency:\";\n      } else {\n        text += ident + \"some elements frequency:\";\n      }\n\n      for(i = 0; freqTable[0][i] != null && i < 10; i++) {\n        text += ident + \"  [\" + String(freqTable[0][i]) + \"]: \" + freqTable[1][i];\n      }\n\n      var joined;\n      if(this.type == \"List\") {\n        joined = this.join(\"], [\");\n      } else {\n        joined = this.toStringList().join(\"], [\");\n      }\n\n      if(joined.length < 2000) text += ident + \"strings: [\" + joined + \"]\";\n      break;\n\n  }\n\n  ///add ideas to: analyze, visualize\n\n\n  return text;\n};\n\n\n////transformations\n\nList.prototype.pushIfUnique = function(element) {\n  if(this.indexOf(element) != -1) return; //TODO: implement equivalence\n  this.push(element);\n};\n\nList.prototype.removeElements = function(elements) { //TODO: make it more efficient (avoiding the splice method)\n  for(var i = 0; i < this.length; i++) {\n    if(elements.indexOf(this[i]) > -1) {\n      this.splice(i, 1);\n      i--;\n    }\n  }\n};\n\nList.prototype.removeElement = function(element) {\n  var index = this.indexOf(element);\n  if(index != -1) this.splice(index, 1);\n};\n\nList.prototype.removeElementAtIndex = function(index) { //deprecated\n  this.splice(index, 1);\n};\n\nList.prototype.removeElementsAtIndexes = function(indexes) {\n  indexes = indexes.sort(function(a, b) {\n    return a - b;\n  });\n\n  for(var i = 0; indexes[i] != null; i++) {\n    this.splice(indexes[i] - i, 1);\n  }\n};\n\nList.prototype.removeRepetitions = function() {\n  for(var i = 0; this[i] != null; i++) {\n    if(this.indexOf(this[i], i + 1) != -1) {\n      this.splice(i, 1);\n    }\n  }\n};\n\nList.prototype.replace = function(elementToFind, elementToInsert) {\n  var l = this.length;\n  for(var i = 0; i < l; i++) {\n    if(this[i] == elementToFind) this[i] = elementToInsert;\n  }\n};\n\n/**\n * assign value to property name on all elements\n * @param  {StringList} names\n * @return {List}\n * tags:transform\n */\nList.prototype.assignNames = function(names) {\n  if(names == null) return this;\n  var n = names.length;\n\n  this.forEach(function(element, i) {\n    element.name = names[i % n];\n  });\n\n  return this;\n};\n\nList.prototype.splice = function() { //TODO: replace\n  switch(this.type) {\n    case 'NumberList':\n      return NumberList.fromArray(this._splice.apply(this, arguments));\n    break;\n    case 'StringList':\n      return StringList.fromArray(this._splice.apply(this, arguments));\n    break;\n    case 'NodeList':\n      return NodeList.fromArray(this._splice.apply(this, arguments));\n    break;\n    case 'DateList':\n      return DateList.fromArray(this._splice.apply(this, arguments));\n    break;\n  }\n  return List.fromArray(this._splice.apply(this, arguments)).getImproved();\n};\n\nList.prototype.destroy = function() {\n  for(var i = 0; this[i] != null; i++) {\n    delete this[i];\n  }\n};\n","import List from \"src/dataStructures/lists/List\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\n\nDateList.prototype = new List();\nDateList.prototype.constructor = DateList;\n\n/**\n * @classdesc A {@link List} for storing Dates.\n *\n * @description Creates a new DateList.\n * @constructor\n * @category dates\n */\nfunction DateList() {\n  var args = [];\n  for(var i = 0; i < arguments.length; i++) {\n    args[i] = Number(arguments[i]);\n  }\n  var array = List.apply(this, args);\n  array = DateList.fromArray(array);\n  //\n  return array;\n}\nexport default DateList;\n\n\nDateList.fromArray = function(array, forceToDate) {\n  forceToDate = forceToDate == null ? true : forceToDate;\n  var result = List.fromArray(array);\n\n  if(forceToDate) {\n    for(var i = 0; i < result.length; i++) {\n      result[i] = new Date(result[i]);\n    }\n  }\n\n  result.type = \"DateList\";\n  //assign methods to array:\n  result.getTimes = DateList.prototype.getTimes;\n  result.toStringList = DateList.prototype.toStringList;\n  result.getMin = DateList.prototype.getMin;\n  result.getMax = DateList.prototype.getMax;\n  return result;\n};\n\n/**\n * get a numberList of time (milliseconds) values\n * @return {NumberList}\n * tags:conversor\n */\nDateList.prototype.getTimes = function() {\n  var i;\n  var numberList = new NumberList();\n  for(i = 0; this[i] != null; i++) {\n    numberList.push(this[i].getTime());\n  }\n  return numberList;\n};\n\n\nDateList.prototype.toStringList = function() {\n  var stringList = new StringList();\n  for(var i = 0; this[i] != null; i++) {\n    stringList[i] = DateOperators.dateToString(this[i]);\n  }\n  return stringList;\n};\n\nDateList.prototype.getMin = function() {\n  if(this.length === 0) return null;\n  var min = this[0];\n  var i;\n  for(i = 1; this[i] != null; i++) {\n    min = min < this[i] ? min : this[i];\n  }\n  return min;\n};\n\nDateList.prototype.getMax = function() {\n  if(this.length === 0) return null;\n  var max = this[0];\n  var i;\n  for(i = 1; this[i] != null; i++) {\n    max = max > this[i] ? max : this[i];\n  }\n  return max;\n};\n","import DateList from \"src/dataStructures/dates/DateList\";\n\n/**\n * @classdesc Provides a set of tools that work with Dates.\n *\n * @namespace\n * @category dates\n */\nfunction DateOperators() {}\nexport default DateOperators;\n\nDateOperators.millisecondsToHours = 1 / (1000 * 60 * 60);\nDateOperators.millisecondsToDays = 1 / (1000 * 60 * 60 * 24);\nDateOperators.millisecondsToWeeks = 1 / (1000 * 60 * 60 * 24 * 7);\nDateOperators.millisecondsToYears = 0.00000000003169;\n\nDateOperators.MONTH_NAMES = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nDateOperators.MONTH_NAMES_SHORT = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nDateOperators.MONTH_NDAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nDateOperators.WEEK_NAMES = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n/**\n * parses a Date\n * @param  {String} string date in string format\n * @param  {String} formatCase 0: <br>MM-DD-YYYY<br>1: YYYY-MM-DD<br>2: MM-DD-YY<br>3: YY-MM-DD\n * @param  {String} separator\n * @return {Date}\n * tags:decoder\n */\nDateOperators.stringToDate = function(string, formatCase, separator) {\n  separator = separator == null ? \"-\" : separator;\n  formatCase = formatCase == null ? 1 : formatCase;\n\n  if(formatCase == 1) {\n    if(separator != \"-\") string = string.replace(new RegExp(string, \"g\"), \"-\");\n    return new Date(string);\n  }\n\n  var y;\n  var parts = string.split(separator);\n  switch(formatCase) {\n    case 0: //MM-DD-YYYY\n      return new Date(Number(parts[2]), Number(parts[0]) - 1, Number(parts[1]));\n    case 1: //YYYY-MM-DD\n      return new Date(string); //Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\n    case 2: //MM-DD-YY\n      y = Number(parts[2]);\n      y = y >= 0 ? y + 2000 : y + 1900;\n      return new Date(y, Number(parts[0]) - 1, Number(parts[1]));\n    case 3: //YY-MM-DD\n      y = Number(parts[0]);\n      y = y >= 0 ? y + 2000 : y + 1900;\n      return new Date(y, Number(parts[1]) - 1, Number(parts[2]));\n  }\n};\n\n/**\n * format cases\n * 0: MM-DD-YYYY\n * 1: YYYY-MM-DD\n */\nDateOperators.dateToString = function(date, formatCase, separator) {\n  separator = separator == null ? \"-\" : separator;\n  formatCase = formatCase == null ? 0 : formatCase;\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n\n  switch(formatCase) {\n    case 0: //MM-DD-YYYY\n      return month + separator + day + separator + year;\n    case 1: //YYYY-MM-DD\n      return year + separator + month + separator + day;\n  }\n};\n\n/**\n * generates current date Date\n * @return {Date}\n * tags:generate\n */\nDateOperators.currentDate = function() {\n  return new Date();\n};\n\nDateOperators.addDaysToDate = function(date, nDays) {\n  return new Date(date.getTime() + (nDays / DateOperators.millisecondsToDays));\n};\n\nDateOperators.addMillisecondsToDate = function(date, nMilliseconds) {\n  return new Date(date.getTime() + nMilliseconds);\n};\n\n\nDateOperators.parseDate = function(string) {\n  return new Date(Date.parse(string.replace(/\\./g, \"-\")));\n};\n\nDateOperators.parseDates = function(stringList) {\n  var dateList = new DateList();\n  var i;\n  for(i = 0; stringList[i] != null; i++) {\n    dateList.push(this.parseDate(stringList[i]));\n  }\n  return dateList;\n};\n\nDateOperators.getHoursBetweenDates = function(date0, date1) {\n  return(date1.getTime() - date0.getTime()) * DateOperators.millisecondsToHours;\n};\nDateOperators.getDaysBetweenDates = function(date0, date1) {\n  return(date1.getTime() - date0.getTime()) * DateOperators.millisecondsToDays;\n};\nDateOperators.getWeeksBetweenDates = function(date0, date1) {\n  return(date1.getTime() - date0.getTime()) * DateOperators.millisecondsToWeeks;\n};\nDateOperators.getYearsBetweenDates = function(date0, date1) {\n  return(date1.getTime() - date0.getTime()) * DateOperators.millisecondsToYears;\n};\n\nDateOperators.nDayInYear = function(date) {\n  return Math.floor((date.getTime() - new Date(date.getFullYear(), 0, 1).getTime()) * DateOperators.millisecondsToDays);\n};\n\nDateOperators.getDateDaysAgo = function(nDays) {\n  return DateOperators.addDaysToDate(new Date(), -nDays);\n};\n\n\n/**\n * gets the week number within a year (weeks start on Sunday, first week may have less than 7 days if start in a day other than sunday\n * @param {Date} The date whose week you want to retrieve\n * @return {Number} The week number of the date in its year\n * tags:generate\n */\nDateOperators.getWeekInYear = function(date) {\n  var onejan = new Date(date.getFullYear(), 0, 1);\n  return Math.ceil((((date - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n};\n\nDateOperators.getNDaysInMonth = function(month, year) {\n  return new Date(year, month, 0).getDate();\n};\n","import DateOperators from \"src/operators/dates/DateOperators\";\n\n/*\n * All these function are globally available since they are included in the Global class\n */\nexport var TYPES_SHORT_NAMES_DICTIONARY = {\"Null\":\"Ø\",\"Object\":\"{}\",\"Function\":\"F\",\"Boolean\":\"b\",\"Number\":\"#\",\"Interval\":\"##\",\"Array\":\"[]\",\"List\":\"L\",\"Table\":\"T\",\"BooleanList\":\"bL\",\"NumberList\":\"#L\",\"NumberTable\":\"#T\",\"String\":\"s\",\"StringList\":\"sL\",\"StringTable\":\"sT\",\"Date\":\"d\",\"DateInterval\":\"dd\",\"DateList\":\"dL\",\"Point\":\".\",\"Rectangle\":\"t\",\"Polygon\":\".L\",\"RectangleList\":\"tL\",\"MultiPolygon\":\".T\",\"Point3D\":\"3\",\"Polygon3D\":\"3L\",\"MultiPolygon3D\":\"3T\",\"Color\":\"c\",\"ColorScale\":\"cS\",\"ColorList\":\"cL\",\"Image\":\"i\",\"ImageList\":\"iL\",\"Node\":\"n\",\"Relation\":\"r\",\"NodeList\":\"nL\",\"RelationList\":\"rL\",\"Network\":\"Nt\",\"Tree\":\"Tr\"}\nexport var _shortFromTypeDictionary;\nexport var _colorFromTypeDictionary;\nexport var _lightColorFromTypeDictionary;\n\n/*\n * types are:\n * number, string, boolean, date, Array, Object\n * and all data models classes names\n */\n\nexport function typeOf(object) {\n  if(object==null) return null;\n\n  var type = typeof object;\n  if(type !== 'object') return type;\n\n  if(object.type!=null) return object.type;\n\n  if(Object.prototype.toString.call(object) == \"[object Array]\") return \"Array\";\n\n  if(object.getDate != null) return 'date';\n\n  return 'Object';\n}\n\n// TODO remove?\nfunction VOID() {}\n\nexport function instantiate(className, args) {\n  switch(className) {\n    case 'number':\n    case 'string':\n      return window[className](args);\n    case 'date':\n      if(!args || args.length == 0) return new Date();\n      if(args.length == 1) {\n        if(args[0].match(/\\d*.-\\d*.-\\d*\\D\\d*.:\\d*.:\\d*/)) {\n          var dateArray = args[0].split(\" \");\n          dateArray[0] = dateArray[0].split(\"-\");\n          if(dateArray[1]) dateArray[1] = dateArray[1].split(\":\");\n          else dateArray[1] = new Array(0, 0, 0);\n          return new Date(Date.UTC(dateArray[0][0], Number(dateArray[0][1]) - 1, dateArray[0][2], dateArray[1][0], dateArray[1][1], dateArray[1][2]));\n        }\n        //\n        if(Number(args[0]) != \"NaN\") return new Date(Number(args[0]));\n        else return new Date(args[0]);\n      }\n      return new Date(Date.UTC.apply(null, args));\n      //\n    case 'boolean':\n      return window[className]((args == \"false\" || args == \"0\") ? false : true);\n    case 'List':\n    case 'Table':\n    case 'StringList':\n    case 'NumberList':\n    case 'NumberTable':\n    case 'NodeList':\n    case 'RelationList':\n    case 'Polygon':\n    case 'Polygon3D':\n    case 'PolygonList':\n    case 'DateList':\n    case 'ColorList':\n      return window[className].apply(window, args);\n    case null:\n    case undefined:\n    case 'undefined':\n      return null;\n  }\n  //generic instantiation of object:\n  var o, dummyFunction, cl;\n  cl = window[className]; // get reference to class constructor function\n  dummyFunction = function() {}; // dummy function\n  dummyFunction.prototype = cl.prototype; // reference same prototype\n  o = new dummyFunction(); // instantiate dummy function to copy prototype properties\n  cl.apply(o, args); // call class constructor, supplying new object as context\n\n  return o;\n}\n\nexport function _createDataModelsInfoDictionaries(){\n  var i;\n  var type;\n\n  _shortFromTypeDictionary = {};\n  _colorFromTypeDictionary = {};\n  _lightColorFromTypeDictionary = {};\n\n  for(i=0; dataModelsInfo[i]!=null; i++){\n    type = dataModelsInfo[i].type;\n    _shortFromTypeDictionary[type] = dataModelsInfo[i].short;\n    _colorFromTypeDictionary[type] = ColorOperators.interpolateColors(dataModelsInfo[i].color, 'black', 0.3);\n    _lightColorFromTypeDictionary[type] = ColorOperators.interpolateColors(dataModelsInfo[i].color, 'white', 0.3);\n    type = type.toLowerCase();\n    _shortFromTypeDictionary[type] = dataModelsInfo[i].short;\n    _colorFromTypeDictionary[type] = ColorOperators.interpolateColors(dataModelsInfo[i].color, 'black', 0.3);\n    _lightColorFromTypeDictionary[type] = ColorOperators.interpolateColors(dataModelsInfo[i].color, 'white', 0.3);\n  }\n}\n\nexport function getShortNameFromDataModelType(type){\n  if(_shortFromTypeDictionary==null) _createDataModelsInfoDictionaries();\n  return _shortFromTypeDictionary[type];\n}\n\nexport function getColorFromDataModelType(type){\n  if(_shortFromTypeDictionary==null) _createDataModelsInfoDictionaries();\n  return _colorFromTypeDictionary[type];\n}\n\nexport function getLightColorFromDataModelType(type){\n  if(_shortFromTypeDictionary==null) _createDataModelsInfoDictionaries();\n  return _lightColorFromTypeDictionary[type];\n}\n\nexport function getTextFromObject(value, type){\n  if(value == null) return \"Null\";\n  if(value.isList) {\n    if(value.length == 0) return \"[]\";\n    var text = value.toString(); // value.length>6?value.slice(0, 5).forEach(function(v){return getTextFromObject(v, typeOf(v))}).join(','):value.toStringList().join(',').forEach(function(v, typeOf(v)){return getTextFromObject(v, type)});\n    if(text.length > 160) {\n      var i;\n      var subtext;\n      text = \"[\";\n      for(i = 0; (value[i] != null && i < 6); i++) {\n        subtext = getTextFromObject(value[i], typeOf(value[i]));\n        if(subtext.length > 40) subtext = subtext.substr(0, 40) + (value[i].isList ? \"…]\" : \"…\");\n        text += (i != 0 ? \", \" : \"\") + subtext;\n      }\n      if(value.length > 6) text += \",…\";\n      text += \"]\";\n    }\n    return text;\n  }\n\n  switch(type) {\n    case \"date\":\n      return DateOperators.dateToString(value);\n    case \"DateInterval\":\n      return DateOperators.dateToString(value.date0) + \" - \" + DateOperators.dateToString(value.date1);\n    case \"string\":\n      return((value.length > 160) ? value.substr(0, 159) + \"…\" : value).replace(/\\n/g, \"↩\");\n    case \"number\":\n      return String(value);\n    default:\n      return \"{}\"; //value.toString();\n  }\n}\n\nexport function instantiateWithSameType(object, args) {\n  return instantiate(typeOf(object), args);\n}\n\nexport function isArray(obj) {\n  if(obj.constructor.toString().indexOf(\"Array\") == -1)\n    return false;\n  else\n    return true;\n}\n\nDate.prototype.getType = function() {\n  return 'date';\n};\n\n\n\nexport function evalJavaScriptFunction(functionText, args, scope){\n\tif(functionText==null) return;\n\n\tvar res;\n\n\tvar myFunction;\n\n\tvar good = true;\n\tvar message = '';\n\n\tvar realCode;\n\n\tvar lines = functionText.split('\\n');\n\n\tfor(var i=0; lines[i]!=null; i++){\n\t\tlines[i] = lines[i].trim();\n\t\tif(lines[i] === \"\" || lines[i].substr(1)==\"/\"){\n\t\t\tlines.splice(i,1);\n\t\t\ti--;\n\t\t}\n\t}\n\n\tvar isFunction = lines[0].indexOf('function')!=-1;\n\n\tfunctionText = lines.join('\\n');\n\n\tif(isFunction){\n\t\tif(scope){\n\t\t\trealCode = \"scope.myFunction = \" + functionText;\n\t\t} else {\n\t\t\trealCode = \"myFunction = \" + functionText;\n\t\t}\n\t} else {\n\t\tif(scope){\n\t\t\trealCode = \"scope.myVar = \" + functionText;\n\t\t} else {\n\t\t\trealCode = \"myVar = \" + functionText;\n\t\t}\n\t}\n\n\ttry{\n\t\tif(isFunction){\n\t\t\teval(realCode);\n\t\t\tif(scope){\n\t\t\t\tres = scope.myFunction.apply(scope, args);\n\t\t\t} else {\n\t\t\t\tres = myFunction.apply(this, args);\n\t\t\t}\n\t\t} else {\n\t\t\teval(realCode);\n\t\t\tif(scope){\n\t\t\t\tres = scope.myVar;\n\t\t\t} else \t{\n\t\t\t\tres = myVar;\n\t\t\t}\n\t\t}\n\t} catch(err){\n\t\tgood = false;\n\t\tmessage = err.message;\n\t\tres = null;\n\t}\n\n  var resultObject = {\n    result: res,\n    success: good,\n    errorMessage: message\n  };\n\n  return resultObject;\n}\n\nexport function argumentsToArray(args) {\n  return Array.prototype.slice.call(args, 0);\n}\n\nexport function TimeLogger(name) {\n  var scope = this;\n  this.name = name;\n  this.clocks = {};\n\n  this.tic = function(clockName) {\n    scope.clocks[clockName] = new Date().getTime();\n    //c.l( \"TimeLogger '\"+clockName+\"' has been started\");\n  };\n  this.tac = function(clockName) {\n    if(scope.clocks[clockName] == null) {\n      scope.tic(clockName);\n    } else {\n      var now = new Date().getTime();\n      var diff = now - scope.clocks[clockName];\n      console.log(\"TimeLogger '\" + clockName + \"' took \" + diff + \" ms\");\n    }\n  };\n}\nexport var tl = new TimeLogger(\"Global Time Logger\");\n","import List from \"src/dataStructures/lists/List\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\n\nPolygon.prototype = new List();\nPolygon.prototype.constructor = Polygon;\n\n/**\n * @classdesc A Polygon is a shape created from a list of {@link Point|Points}.\n *\n * @description Creates a new Polygon.\n * @constructor\n * @category geometry\n */\nfunction Polygon() {\n  var array = List.apply(this, arguments);\n  array = Polygon.fromArray(array);\n  return array;\n}\nexport default Polygon;\n\nPolygon.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"Polygon\";\n\n  result.getFrame = Polygon.prototype.getFrame;\n  result.getBarycenter = Polygon.prototype.getBarycenter;\n  result.add = Polygon.prototype.add;\n  result.factor = Polygon.prototype.factor;\n  result.getRotated = Polygon.prototype.getRotated;\n  result.getClosestPoint = Polygon.prototype.getClosestPoint;\n  result.toNumberList = Polygon.prototype.toNumberList;\n  result.containsPoint = Polygon.prototype.containsPoint;\n  //transform\n  result.approach = Polygon.prototype.approach;\n  //override\n  result.clone = Polygon.prototype.clone;\n\n  return result;\n};\n\n\nPolygon.prototype.getFrame = function() {\n  if(this.length == 0) return null;\n  var rectangle = new Rectangle(this[0].x, this[0].y, this[0].x, this[0].y);\n  var p;\n  for(var i = 1; this[i] != null; i++) {\n    p = this[i];\n    rectangle.x = Math.min(rectangle.x, p.x);\n    rectangle.y = Math.min(rectangle.y, p.y);\n    rectangle.width = Math.max(rectangle.width, p.x);\n    rectangle.height = Math.max(rectangle.height, p.y);\n  }\n\n  rectangle.width -= rectangle.x;\n  rectangle.height -= rectangle.y;\n\n  return rectangle;\n};\n\nPolygon.prototype.getBarycenter = function(countLastPoint) {\n  var i;\n  countLastPoint = countLastPoint == null ? true : countLastPoint;\n  var cLPN = 1 - Number(countLastPoint);\n  if(this.length == 0) return null;\n  var barycenter = new Point(this[0].x, this[0].y);\n  for(i = 1; this[i + cLPN] != null; i++) {\n    barycenter.x += this[i].x;\n    barycenter.y += this[i].y;\n  }\n  barycenter.x /= this.length;\n  barycenter.y /= this.length;\n  return barycenter;\n};\n\nPolygon.prototype.add = function(object) {\n  var type = typeOf(object);\n  var i;\n  switch(type) {\n    case 'Point':\n      var newPolygon = new Polygon();\n      for(i = 0; this[i] != null; i++) {\n        newPolygon[i] = this[i].add(object);\n      }\n      newPolygon.name = this.name;\n      return newPolygon;\n      break;\n  }\n};\n\n/**\n * scales the polygon by a number or a Point\n * @param  {Object} value number or point\n * @return {Polygon}\n * tags:\n */\nPolygon.prototype.factor = function(value) {\n  var i;\n  var newPolygon = new Polygon();\n  newPolygon.name = this.name;\n\n  if(value >= 0 || value < 0) {\n    for(i = 0; this[i] != null; i++) {\n      newPolygon[i] = new Point(this[i].x * value, this[i].y * value);\n    }\n\n    return newPolygon;\n  } else if(value.type != null && value.type == 'Point') {\n    for(i = 0; this[i] != null; i++) {\n      newPolygon[i] = new Point(this[i].x * value.x, this[i].y * value.y);\n    }\n\n    return newPolygon;\n  }\n\n  return null;\n};\n\n\nPolygon.prototype.getRotated = function(angle, center) {\n  center = center == null ? new Point() : center;\n\n  var newPolygon = new Polygon();\n  for(var i = 0; this[i] != null; i++) {\n    newPolygon[i] = new Point(Math.cos(angle) * (this[i].x - center.x) - Math.sin(angle) * (this[i].y - center.y) + center.x, Math.sin(angle) * (this[i].x - center.x) + Math.cos(angle) * (this[i].y - center.y) + center.y);\n  }\n  newPolygon.name = this.name;\n  return newPolygon;\n};\n\nPolygon.prototype.getClosestPoint = function(point) {\n  var closest = this[0];\n  var d2Min = Math.pow(point.x - closest.x, 2) + Math.pow(point.y - closest.y, 2);\n  var d2;\n\n  for(var i = 1; this[i] != null; i++) {\n    d2 = Math.pow(point.x - this[i].x, 2) + Math.pow(point.y - this[i].y, 2);\n    if(d2 < d2Min) {\n      d2Min = d2;\n      closest = this[i];\n    }\n  }\n  return closest;\n};\n\nPolygon.prototype.toNumberList = function() {\n  var numberList = new NumberList();\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    numberList[i * 2] = this[i].x;\n    numberList[i * 2 + 1] = this[i].y;\n  }\n  return numberList;\n};\n\n/**\n * Thanks http://jsfromhell.com/math/is-point-in-poly AND http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n */\nPolygon.prototype.containsPoint = function(point) {\n  var i;\n  var j;\n  var l;\n  for(var c = false, i = -1, l = this.length, j = l - 1; ++i < l; j = i)\n        ((this[i].y <= point.y && point.y < this[j].y) || (this[j].y <= point.y && point.y < this[i].y))\n        && (point.x < (this[j].x - this[i].x) * (point.y - this[i].y) / (this[j].y - this[i].y) + this[i].x)\n        && (c = !c);\n  return c;\n};\n\n//transform\n\nPolygon.prototype.approach = function(destiny, speed) {\n  speed = speed || 0.5;\n  var antispeed = 1 - speed;\n\n  this.forEach(function(point, i) {\n    point.x = antispeed * point.x + speed * destiny[i].x;\n    point.y = antispeed * point.y + speed * destiny[i].y;\n  });\n};\n\n\nPolygon.prototype.clone = function() {\n  var newPolygon = new Polygon();\n  for(var i = 0; this[i] != null; i++) {\n    newPolygon[i] = this[i].clone();\n  }\n  newPolygon.name = this.name;\n  return newPolygon;\n};\n","import List from \"src/dataStructures/lists/List\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\nimport { cX, cY } from \"src/Global\";\n\nNodeList.prototype = new List();\nNodeList.prototype.constructor = NodeList;\n\n/**\n * @classdesc A sub-class of {@link List} for storing {@link Node|Nodes}.\n *\n * @description create a new NodeList.\n * @constructor\n * @category networks\n */\nfunction NodeList() {\n  //var array=List.apply(this, arguments);\n\n  //if(arguments && arguments.length>0) {c.l('UEUEUEUE, arguments.length', arguments.length); var a; a.push(0)};\n\n  var array = NodeList.fromArray([]);\n\n  if(arguments && arguments.length > 0) {\n    var args = Array.prototype.slice.call(arguments);\n\n    args.forEach(function(arg) {\n      array.addNode(arg);\n    });\n  }\n\n  return array;\n}\nexport default NodeList;\n\n/**\n * Creates NodeList from raw Array.\n *\n * @param {Node[] | String[]} array Array to convert to\n * @param {Boolean} forceToNode If true, and input array is an array of Strings,\n * convert strings to Node instances with the strings used as the Node's id and name.\n * @return {NodeList}\n */\nNodeList.fromArray = function(array, forceToNode) {\n  forceToNode = forceToNode == null ? false : forceToNode;\n\n  var result = List.fromArray(array);\n\n  if(forceToNode) {\n    for(var i = 0; i < result.length; i++) {\n      result[i] = typeOf(result[i]) == \"Node\" ? result[i] : (new Node(String(result[i]), String(result[i])));\n    }\n  }\n\n  // TODO: Remove duplicate line?\n  var result = List.fromArray(array);\n  result.type = \"NodeList\";\n  result.ids = {};\n  // TODO: Fix\n  Array(); //????\n\n  //assign methods to array:\n  result.deleteNodes = NodeList.prototype.deleteNodes;\n  result.addNode = NodeList.prototype.addNode;\n  result.addNodes = NodeList.prototype.addNodes;\n  result.removeNode = NodeList.prototype.removeNode;\n  result.removeNodeAtIndex = NodeList.prototype.removeNodeAtIndex;\n  result.getNodeByName = NodeList.prototype.getNodeByName;\n  result.getNodeById = NodeList.prototype.getNodeById;\n  result.getNodesByIds = NodeList.prototype.getNodesByIds;\n  result.getNewId = NodeList.prototype.getNewId;\n  result.normalizeWeights = NodeList.prototype.normalizeWeights;\n  result.getWeights = NodeList.prototype.getWeights;\n  result.getIds = NodeList.prototype.getIds;\n  result.getDegrees = NodeList.prototype.getDegrees;\n  result.getPolygon = NodeList.prototype.getPolygon;\n\n  result._push = Array.prototype.push;\n  result.push = function(a) {\n    console.log('with nodeList, use addNode instead of push');\n    var k;\n    k.push(a);\n  };\n\n  //overriden\n  result.getWithoutRepetitions = NodeList.prototype.getWithoutRepetitions;\n  result.clone = NodeList.prototype.clone;\n\n  return result;\n};\n\n/**\n * Clears NodeList.\n *\n */\nNodeList.prototype.removeNodes = function() {\n  for(var i = 0; i < this.length; i++) {\n    this.ids[this[i].id] = null;\n    this.removeElement(this[i]);\n  }\n};\n\n/**\n * Adds given Node to NodeList.\n *\n * @param {Node} node Node to add\n */\nNodeList.prototype.addNode = function(node) {\n  this.ids[node.id] = node;\n  this._push(node);\n};\n\n/**\n * Adds all Nodes from another NodeList to this NodeList.\n *\n * @param {NodeList} nodes Nodes to add.\n */\nNodeList.prototype.addNodes = function(nodes) {\n  var i;\n  for(i = 0; nodes[i] != null; i++) {\n    this.addNode(nodes[i]);\n  }\n};\n\n/**\n * Removes a given node from the list.\n *\n * @param {Node} node Node to remove.\n */\nNodeList.prototype.removeNode = function(node) {\n  this.ids[node.id] = null;\n  this.removeElement(node);\n};\n\n/**\n * Removes a Node at a particular index of the NodeList\n *\n * @param {Number} index The index of the Node to remove.\n */\nNodeList.prototype.removeNodeAtIndex = function(index) {\n  this.ids[this[index].id] = null;\n  this.splice(index, 1);\n};\n\n/**\n * Normalizes all weights associated with Nodes in NodeList\n * to a value between 0 and 1. Works under the assumption that weights are >= 0.\n */\nNodeList.prototype.normalizeWeights = function() {\n  var i;\n  var max = -9999999;\n  for(i = 0; this[i] != null; i++) {\n    max = Math.max(this[i].weight, max);\n  }\n  for(i = 0; this[i] != null; i++) {\n    this[i].weight /= max;\n  }\n};\n\n\n/**\n * Returns Node with given name if present in the NodeList.\n * Very inefficient method. Use {@link .getNodeById} when possible\n *\n * @return {Node} Node with name matching input name. Null if no such Node.\n */\nNodeList.prototype.getNodeByName = function(name) {\n  var i;\n  for(i = 0; i < this.length; i++) {\n    if(this[i].name == name) {\n      return this[i];\n    }\n  }\n  return null;\n};\n\n/**\n * Returns Node in NodeList with given Id.\n *\n * @param  {String} id Id of Node to return.\n * @return {Node}\n * tags:search\n */\nNodeList.prototype.getNodeById = function(id) {\n  return this.ids[id];\n};\n\n/**\n * Returns a new NodeList with all nodes in this\n * NodeList with Id's found in the given {@link NumberList}\n * of ids.\n *\n * @param {NumberList} ids Ids of Nodes to extract.\n * @return {NodeList}\n */\nNodeList.prototype.getNodesByIds = function(ids) {\n  var newNodelist = new NodeList();\n  var node;\n  for(var i = 0; ids[i] != null; i++) {\n    node = this.ids[ids[i]];\n    if(node != null) newNodelist[i] = node;\n  }\n  return newNodelist;\n};\n\n/**\n * Returns a {@link NumberList} of the weights associated\n * with each Node in the NodeList.\n *\n * @return {NumberList}\n * tags:\n */\nNodeList.prototype.getWeights = function() {\n  var numberList = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    numberList[i] = this[i].weight;\n  }\n  return numberList;\n};\n\n/**\n * Returns a {@link StringList} of all the Ids\n * of the Nodes in the NodeList.\n *\n * @return {StringList}\n * tags:\n */\nNodeList.prototype.getIds = function() {\n  var list = new StringList();\n  for(var i = 0; this[i] != null; i++) {\n    list[i] = this[i].id;\n  }\n  return list;\n};\n\n/**\n * Returns a {@link NumberList} with a count of directly\n * connected Relations a Node has for each Node.\n *\n *\n * @return {NumberList} List containing the number\n * of Relations each Node has.\n */\nNodeList.prototype.getDegrees = function() {\n  var numberList = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    numberList[i] = this[i].nodeList.length;\n  }\n  return numberList;\n};\n\n\n/**\n * Returns a {@link Polygon} constructed from all Nodes in\n * the NodeList by using the\n * <strong>x</strong> and <strong>y</strong> attributes of\n * the Nodes.\n *\n * @return {Polygon}\n */\nNodeList.prototype.getPolygon = function() {\n  var polygon = new Polygon();\n  for(var i = 0; this[i] != null; i++) {\n    polygon[i] = new Point(this[i].x + cX, this[i].y + cY);\n  }\n  return polygon;\n};\n\nNodeList.prototype.getNewId = function() {\n  var n = this.length + 1;\n  for(var i = 0; i < n; i++) {\n    if(this.getNodeById(String(i)) == null) return String(i);\n  }\n};\n\n/**\n * Returns a copy of this NodeList.\n *\n * @return {NodeList}\n */\nNodeList.prototype.clone = function() {\n  var newNodeList = new NodeList();\n  this.forEach(function(node) {\n    newNodeList.addNode(node);\n  });\n  newNodeList.name = this.name;\n  return newNodeList;\n};\n\n\n//methods overriden\n\n/**\n * getWithoutRepetitions\n *\n * @return {undefined}\n * @ignore\n */\nNodeList.prototype.getWithoutRepetitions = function() {\n  var newList = new NodeList();\n  newList.name = this.name;\n  for(var i = 0; this[i] != null; i++) {\n    if(newList.getNodeById(this[i].id) == null) newList.addNode(this[i]);\n  }\n  return newList;\n};\n","import NodeList from 'src/dataStructures/structures/lists/NodeList';\n\nRelationList.prototype = new NodeList();\nRelationList.prototype.constructor = RelationList;\n/**\n * RelationList\n * @constructor\n */\n\n/**\n * @classdesc A sub-class of {@link List} for storing {@link Relations|Relation}.\n *\n * @description create a new RelationList.\n * @constructor\n * @category networks\n */\nfunction RelationList() {\n  var array = NodeList.apply(this, arguments);\n  array.name = \"\";\n  //assign methods to array:\n  array = RelationList.fromArray(array);\n  //\n  return array;\n}\nexport default RelationList;\n\n/**\n * Convert raw array of Relations into a RelationList.\n *\n * @param {Relation[]} array Array to convert to a RelationList.\n * @return {RelationList}\n */\nRelationList.fromArray = function(array) {\n  var result = NodeList.fromArray(array);\n  result.type = \"RelationList\";\n  //assign methods to array:\n  result.addRelation = RelationList.prototype.addRelation;\n  result.addRelationIfNew = RelationList.prototype.addRelationIfNew;\n  result.removeRelation = RelationList.prototype.removeRelation;\n  result.getRelationsWithNode = RelationList.prototype.getRelationsWithNode;\n  result.getFirstRelationBetweenNodes = RelationList.prototype.getFirstRelationBetweenNodes;\n  result.getFirstRelationByIds = RelationList.prototype.getFirstRelationByIds;\n  result.getAllRelationsBetweenNodes = RelationList.prototype.getAllRelationsBetweenNodes;\n  result.getRelatedNodesToNode = RelationList.prototype.getRelatedNodesToNode;\n  result.nodesAreConnected = RelationList.prototype.nodesAreConnected;\n\n  return result;\n};\n\n/**\n * Add new Relation to the list.\n *\n * @param {Relation} relation Relation to add.\n */\n//TODO:remove?\nRelationList.prototype.addRelation = function(relation) {\n  this.addNode(relation);\n};\n\n/**\n * Removes Relation from the list.\n *\n * @param {Relation} relation Relation to remove.\n */\nRelationList.prototype.removeRelation = function(relation) {\n    this.removeNode(relation);\n};\n\n/**\n * Returns all relations that are directly connected to the given Node.\n *\n * @param {Node} node Node to search\n * @return {Relation[]} Containing Relations that contain node.\n */\nRelationList.prototype.getRelationsWithNode = function(node) {\n  var i;\n  var filteredRelations = [];\n  for(i = 0; this[i] != null; i++) {\n    var relation = this[i];\n    if(relation.node0 == node || relation.node1 == node) {\n      filteredRelations.push(relation);\n    }\n  }\n\n  // TODO: convert to RelationList?\n  return filteredRelations;\n};\n\n/**\n * Returns all Nodes related to a given Node.\n *\n * @param {Node} node\n * @return a RelationList with relations that contain node\n */\nRelationList.prototype.getRelatedNodesToNode = function(node) {\n  var i;\n  var relatedNodes = new NodeList();\n  for(i = 0; i < this.length; i++) {\n    var relation = this[i];\n    if(relation.node0.id == node.id) {\n      relatedNodes.push(relation.node1);\n    }\n    if(relation.node1.id == node.id) {\n      relatedNodes.push(relation.node0);\n    }\n  }\n  return relatedNodes;\n};\n\n\n\n/**\n * Returns all Relations between two Nodes.\n *\n * @param {Node} node0 Source Node.\n * @param {Node} node1 Destination Node.\n * @param {Boolean} directed Consider Relation directional in nature (default: false).\n * @return {Relation[]} With Relations that contain node0 and node1.\n * tags:\n */\nRelationList.prototype.getAllRelationsBetweenNodes = function(node0, node1, directed) {\n  //TODO: to be improved (check node1 on node0.relationList) (see: nodesAreConnected)\n  var i;\n  directed = directed == null ? false : directed;\n  var filteredRelations = [];\n  for(i = 0; this[i] != null; i++) {\n    var relation = this[i];\n    if((relation.node0 == node0 && relation.node1 == node1) || (!directed && relation.node0 == node1 && relation.node1 == node0)) {\n      filteredRelations.push(relation);\n    }\n  }\n  // TODO: convert to RelationList ?\n  return filteredRelations;\n};\n\n\n/**\n * Checks if two nodes are related, returns a boolean\n *\n * @param  {Node} node0\n * @param  {Node} node1\n * @param  {Boolean} directed true if relation must be directed\n * @return {Boolean}\n * tags:\n */\nRelationList.prototype.nodesAreConnected = function(node0, node1, directed) {\n  if(node0.toNodeList.getNodeById(node1.id) != null) return true;\n  return !directed && node1.toNodeList.getNodeById(node0.id) != null;\n};\n\n\n/**\n * Returns the first Relation between two Nodes.\n *\n * @param {Node} node0 Source Node.\n * @param {Node} node1 Destination Node.\n * @param {Boolean} directed consider relation direction (default: false).\n * @return {Relation[]} With Relations that contain node0 and node1.\n * tags:\n */\nRelationList.prototype.getFirstRelationBetweenNodes = function(node0, node1, directed) { //TODO: to be improved (check node1 on node0.relationList) (see: nodesAreConnected) //TODO: make it work with ids\n  directed = directed == null ? false : directed;\n\n  for(var i = 0; this[i] != null; i++) {\n    if((this[i].node0.id == node0.id && this[i].node1.id == node1.id) || (!directed && this[i].node1.id == node0.id && this[i].node0.id == node1.id)) return this[i];\n  }\n  return null;\n};\n\n\n/**\n * Returns first relations between two Nodes.\n *\n * @param {String} id0 Id of the source Node.\n * @param {String} id1 Id of the destination Node.\n * @param {Boolean} directed Consider relation directional (default: false).\n * @return {Relation[]} With Relations that contain node0 and node1 (with node0.id = id0 and node1.id = id1).\n */\nRelationList.prototype.getFirstRelationByIds = function(id0, id1, directed) {\n  //TODO: to be improved (check node1 on node0.relationList) (see: nodesAreConnected)\n  //TODO: make it work with ids\n  var i;\n  var _directed = directed || false;\n  var relation;\n  for(i = 0; this[i] != null; i++) {\n    relation = this[i];\n    if(relation.node0.id == id0 && relation.node1.id == id1) {\n      return relation;\n    }\n  }\n  if(_directed) return null;\n  //c.log(\"<->\");\n  for(i = 0; this[i] != null; i++) {\n    relation = this[i];\n    if(relation.node0.id == id1 && relation.node1.id == id0) {\n      //c.log(\"<--- \", relation.node0.name, relation.node1.name);\n      // TODO: convert to RelationList ?\n      return relation;\n    }\n  }\n  return null;\n};\n\n","LoadEvent.prototype = {};\nLoadEvent.prototype.constructor = LoadEvent;\n\n/**\n * LoadEvent\n * @constructor\n * @category misc\n */\nfunction LoadEvent() {\n  Object.apply(this);\n  this.result = null;\n  this.errorType = 0;\n  this.errorMessage = \"\";\n  this.url;\n}\nexport default LoadEvent;\n","import LoadEvent from \"src/tools/loaders/LoadEvent\";\n\nfunction Loader() {}\nexport default Loader;\n\nLoader.proxy = \"\"; //TODO:install proxy created by Mig at moebio.com\nLoader.cacheActive = false; //TODO: fix!\nLoader.associativeByUrls = {};\nLoader.REPORT_LOADING = false;\nLoader.n_loading = 0;\nLoader.LOCAL_STORAGE_ENABLED = false;\n\nLoader.PHPurl = \"http://intuitionanalytics.com/tests/proxy.php?url=\";\n\n\n/**\n * loads string data from server. The defined Loader.proxy will be used.\n * @param {String} url the URL of the file to be loaded\n * @param {Function} onLoadData a function that will be called when complete. The function must receive a LoadEvent\n * @param {callee} the Object containing the onLoadData function to be called\n * @para, {Object} optional parameter that will be stored in the LoadEvent instance\n */\nLoader.loadData = function(url, onLoadData, callee, param, send_object_json) {\n  if(Loader.REPORT_LOADING) console.log('load data:', url);\n  Loader.n_loading++;\n\n  if(Loader.LOCAL_STORAGE_ENABLED) {\n    // TODO track down LocalStorage. localStorage is a thing though (lowercase l);\n    var result = LocalStorage.getItem(url);\n    if(result) {\n      var e = new LoadEvent();\n      e.url = url;\n      e.param = param;\n      e.result = result;\n\n      onLoadData.call(target, e);\n    }\n  }\n\n\n\n  if(Loader.REPORT_LOADING) console.log(\"Loader.loadData | url:\", url);\n\n  var useProxy = String(url).substr(0, 4) == \"http\";\n\n  var req = new XMLHttpRequest();\n\n  var target = callee ? callee : arguments.callee;\n  var onLoadComplete = function() {\n    if(Loader.REPORT_LOADING) console.log('Loader.loadData | onLoadComplete'); //, req.responseText:', req.responseText);\n    if(req.readyState == 4) {\n      Loader.n_loading--;\n\n      var e = new LoadEvent();\n      e.url = url;\n      e.param = param;\n      //if (req.status == 200) { //MIG\n      if(req.status == 200 || (req.status == 0 && req.responseText != null)) {\n        e.result = req.responseText;\n        onLoadData.call(target, e);\n      } else {\n        if(Loader.REPORT_LOADING) console.log(\"[!] There was a problem retrieving the data [\" + req.status + \"]:\\n\" + req.statusText);\n        e.errorType = req.status;\n        e.errorMessage = \"[!] There was a problem retrieving the data [\" + req.status + \"]:\" + req.statusText;\n        onLoadData.call(target, e);\n      }\n    }\n  };\n\n  // branch for native XMLHttpRequest object\n  if(window.XMLHttpRequest && !(window.ActiveXObject)) {\n    try {\n      req = new XMLHttpRequest();\n    } catch(e) {\n      req = false;\n    }\n    // branch for IE/Windows ActiveX version\n  } else if(window.ActiveXObject) {\n    try {\n      req = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n    } catch(e) {\n      try {\n        req = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n      } catch(e) {\n        try {\n          req = new ActiveXObject(\"Msxml2.XMLHTTP\");\n        } catch(e) {\n          try {\n            req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n          } catch(e) {\n            req = false;\n          }\n        }\n      }\n    }\n  }\n  if(req) {\n    req.onreadystatechange = onLoadComplete; //processReqChange;\n    if(useProxy) {\n      req.open(\"GET\", Loader.proxy + url, true);\n    } else {\n      req.open(\"GET\", url, true);\n    }\n\n    send_object_json = send_object_json || \"\";\n    req.send(send_object_json);\n  }\n};\n\n\n//TODO this method isn't reference by anything else.\nfunction LoaderRequest(url, method, data) {\n  this.url = url;\n  this.method = method ? method : \"GET\";\n  this.data = data;\n}\n\nLoader.loadImage = function(url, onComplete, callee, param) {\n  Loader.n_loading++;\n\n  if(Loader.REPORT_LOADING) console.log(\"Loader.loadImage | url:\", url);\n\n  var target = callee ? callee : arguments.callee;\n  var img = document.createElement('img');\n\n  if(this.cacheActive) {\n    if(this.associativeByUrls[url] != null) {\n      Loader.n_loading--;\n      //console.log('=====>>>>+==>>>+====>>=====>>>+==>> in cache:', url);\n      var e = new LoadEvent();\n      e.result = this.associativeByUrls[url];\n      e.url = url;\n      e.param = param;\n      onComplete.call(target, e);\n    } else {\n      var cache = true;\n      var associative = this.associativeByUrls;\n    }\n  }\n\n  img.onload = function() {\n    Loader.n_loading--;\n    var e = new LoadEvent();\n    e.result = img;\n    e.url = url;\n    e.param = param;\n    if(cache) associative[url] = img;\n    onComplete.call(target, e);\n  };\n\n  img.onerror = function() {\n    Loader.n_loading--;\n    var e = new LoadEvent();\n    e.result = null;\n    e.errorType = 1; //TODO: set an error type!\n    e.errorMessage = \"There was a problem retrieving the image [\" + img.src + \"]:\";\n    e.url = url;\n    e.param = param;\n    onComplete.call(target, e);\n  };\n\n  img.src = Loader.proxy + url;\n};\n\n\n\n// Loader.loadJSON = function(url, onLoadComplete) {\n//   Loader.n_loading++;\n\n//   Loader.loadData(url, function(data) {\n//     Loader.n_loading--;\n//     onLoadComplete.call(arguments.callee, jQuery.parseJSON(data));\n//   });\n// };\n\n\n/**\nLoader.callIndex = 0;\nLoader.loadJSONP = function(url, onLoadComplete, callee) {\n  Loader.n_loading++;\n\n  Loader.callIndex = Loader.callIndex + 1;\n  var index = Loader.callIndex;\n\n  var newUrl = url + \"&callback=JSONcallback\" + index;\n  //var newUrl=url+\"?callback=JSONcallback\"+index; //   <----  WFP suggestion\n\n  var target = callee ? callee : arguments.callee;\n\n  //console.log('Loader.loadJSONP, newUrl:', newUrl);\n\n  $.ajax({\n    url: newUrl,\n    type: 'GET',\n    data: {},\n    dataType: 'jsonp',\n    contentType: \"application/json\",\n    jsonp: 'jsonp',\n    jsonpCallback: 'JSONcallback' + index,\n    success: function(data) {\n      Loader.n_loading--;\n      var e = new LoadEvent();\n      e.result = data;\n      onLoadComplete.call(target, e);\n    },\n    error: function(data) {\n      Loader.n_loading--;\n      console.log(\"Loader.loadJSONP | error, data:\", data);\n\n      var e = new LoadEvent();\n      e.errorType = 1;\n      onLoadComplete.call(target, e);\n    }\n  }); //.error(function(e){\n  // console.log('---> (((error))) B');\n  //\n  // var e=new LoadEvent();\n  // e.errorType=1;\n  // onLoadComplete.call(target, e);\n  // });\n};\n**/\n\n\n\n\n//FIX THESE METHODS:\n\nLoader.loadXML = function(url, onLoadData) {\n  Loader.n_loading++;\n\n  var req = new XMLHttpRequest();\n  var onLoadComplete = onLoadData;\n\n  if(Loader.REPORT_LOADING) console.log('loadXML, url:', url);\n\n  // branch for native XMLHttpRequest object\n  if(window.XMLHttpRequest && !(window.ActiveXObject)) {\n    try {\n      req = new XMLHttpRequest();\n    } catch(e) {\n      req = false;\n    }\n    // branch for IE/Windows ActiveX version\n  } else if(window.ActiveXObject) {\n    try {\n      req = new ActiveXObject(\"Msxml2.XMLHTTP\");\n    } catch(e) {\n      try {\n        req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      } catch(e) {\n        req = false;\n      }\n    }\n  }\n  if(req) {\n    req.onreadystatechange = processReqChange;\n    req.open(\"GET\", url, true);\n    req.send(\"\");\n  }\n\n  function processReqChange() {\n    Loader.n_loading--;\n    // only if req shows \"loaded\"\n    if(req.readyState == 4) {\n      // only if \"OK\"\n      if(req.status == 200 || req.status == 0) {\n        onLoadComplete(req.responseXML);\n\n      } else {\n        console.log(\"There was a problem retrieving the XML data:\\n\" +\n          req.statusText);\n      }\n    }\n  }\n};\n\n\n///////////////PHP\n\nLoader.sendContentToVariableToPhp = function(url, varName, value, onLoadData, callee, param) {\n  var data = varName + \"=\" + encodeURIComponent(value);\n  Loader.sendDataToPhp(url, data, onLoadData, callee, param);\n};\n\nLoader.sendContentsToVariablesToPhp = function(url, varNames, values, onLoadData, callee, param) {\n  var data = varNames[0] + \"=\" + encodeURIComponent(values[0]);\n  for(var i = 1; varNames[i] != null; i++) {\n    data += \"&\" + varNames[i] + \"=\" + encodeURIComponent(values[i]);\n  }\n  Loader.sendDataToPhp(url, data, onLoadData, callee, param);\n};\n\nLoader.sendDataToPhp = function(url, data, onLoadData, callee, param) {\n  var req = new XMLHttpRequest();\n\n  req.open(\"POST\", url, true);\n  req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  req.send(data);\n\n  var target = callee ? callee : arguments.callee;\n\n  var onLoadComplete = function() {\n    if(Loader.REPORT_LOADING) console.log('Loader.loadData | onLoadComplete, req.responseText:', req.responseText);\n    if(req.readyState == 4) {\n      Loader.n_loading--;\n\n      var e = new LoadEvent();\n      e.url = url;\n      e.param = param;\n\n      if(req.status == 200 || (req.status == 0 && req.responseText != null)) {\n        e.result = req.responseText;\n        onLoadData.call(target, e);\n      } else {\n        if(Loader.REPORT_LOADING) console.log(\"[!] There was a problem retrieving the data [\" + req.status + \"]:\\n\" + req.statusText);\n        e.errorType = req.status;\n        e.errorMessage = \"[!] There was a problem retrieving the data [\" + req.status + \"]:\" + req.statusText;\n        onLoadData.call(target, e);\n      }\n    }\n  };\n\n  req.onreadystatechange = onLoadComplete;\n};","import DataModel from \"src/dataStructures/DataModel\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport RelationList from \"src/dataStructures/structures/lists/RelationList\";\nimport Loader from \"src/tools/loaders/Loader\";\n\nNode.prototype = new DataModel();\nNode.prototype.constructor = Node;\n\n/**\n * @classdesc Represents a single node element in a Network. Can have both an id as well\n * as a name.\n *\n * @description Create a new Node.\n * @param {String} id ID of the Node\n * @param {String} name string (label) name to be assigned to node\n * @constructor\n * @category networks\n */\nfunction Node(id, name) {\n  this.id = id == null ? '' : id;\n  this.name = name != null ? name : '';\n  this.type = \"Node\";\n\n  this.nodeType;\n\n  this.x = 0;\n  this.y = 0;\n  this.z = 0;\n\n  this.nodeList = new NodeList();\n  this.relationList = new RelationList();\n\n  this.toNodeList = new NodeList();\n  this.toRelationList = new RelationList();\n\n  this.fromNodeList = new NodeList();\n  this.fromRelationList = new RelationList();\n\n  this.weight = 1;\n  this.descentWeight = 1;\n\n  //tree\n  this.level = 0;\n  this.parent = null;\n\n  //physics:\n  this.vx = 0;\n  this.vy = 0;\n  this.vz = 0;\n  this.ax = 0;\n  this.ay = 0;\n  this.az = 0;\n}\nexport default Node;\n\n/**\n * Removes all Relations and connected Nodes from\n * the current Node.\n */\nNode.prototype.cleanRelations = function() {\n  this.nodeList = new NodeList();\n  this.relationList = new RelationList();\n\n  this.toNodeList = new NodeList();\n  this.toRelationList = new RelationList();\n\n  this.fromNodeList = new NodeList();\n  this.fromRelationList = new RelationList();\n};\n\n//TODO: complete with all properties\nNode.prototype.destroy = function() {\n  DataModel.prototype.destroy.call(this);\n  delete this.id;\n  delete this.name;\n  delete this.nodeType;\n  delete this.x;\n  delete this.y;\n  delete this.z;\n  delete this.nodeList;\n  delete this.relationList;\n  delete this.toNodeList;\n  delete this.toNodeList;\n  delete this.fromNodeList;\n  delete this.fromRelationList;\n  delete this.parent;\n  delete this.weight;\n  delete this.descentWeight;\n  delete this.level;\n  delete this.vx;\n  delete this.vy;\n  delete this.vz;\n  delete this.ax;\n  delete this.ay;\n  delete this.az;\n};\n\n/**\n * Returns the number of Relations connected to this Node.\n *\n * @return {Number} Number of Relations (edges) connecting to this Node instance.\n */\nNode.prototype.getDegree = function() {\n  return this.relationList.length;\n};\n\n//treeProperties:\n\n\n/**\n * Returns the parent Node of this Node if it is part of a {@link Tree}.\n *\n * @return {Node} Parent Node of this Node.\n */\nNode.prototype.getParent = function() {\n  return this.parent;\n};\n\n/**\n * Returns the leaves under a node in a Tree,\n *\n * <strong>Warning:</strong> If this Node is part of a Network that is not a tree, this method could run an infinite loop.\n * @return {NodeList} Leaf Nodes of this Node.\n * tags:\n */\nNode.prototype.getLeaves = function() {\n    var leaves = new NodeList();\n    var addLeaves = function(node) {\n      if(node.toNodeList.length === 0) {\n        leaves.addNode(node);\n        return;\n      }\n      node.toNodeList.forEach(addLeaves);\n    };\n    addLeaves(this);\n    return leaves;\n  };\n\n\n/**\n * Uses an image as a visual representation to this Node.\n *\n * @param {String} urlImage The URL of the image to load.\n */\nNode.prototype.loadImage = function(urlImage) {\n  Loader.loadImage(urlImage, function(e) {\n    this.image = e.result;\n  }, this);\n};\n\n\n/**\n * Makes a copy of this Node.\n *\n * @return {Node} New Node that is a copy of this Node.\n */\nNode.prototype.clone = function() {\n  var newNode = new Node(this.id, this.name);\n\n  newNode.x = this.x;\n  newNode.y = this.y;\n  newNode.z = this.z;\n\n  newNode.nodeType = this.nodeType;\n\n  newNode.weight = this.weight;\n  newNode.descentWeight = this.descentWeight;\n\n  return newNode;\n};\n","export var version = \"0.2.13\";\n","/**\n * @classdesc Provides a set of tools that work with Colors.\n *\n * @namespace\n * @category colors\n */\nfunction ColorOperators() {}\nexport default ColorOperators;\n// TODO: create Color struture to be used instead of arrays [255, 100,0] ?\n\n\n\n/**\n * return a color between color0 and color1\n * 0 -> color0\n * 1 -> color1\n * @param {String} color0\n * @param {String} color1\n * @param value between 0 and 1 (to obtain color between color0 and color1)\n * @return {String} interpolated color\n *\n */\nColorOperators.interpolateColors = function(color0, color1, value) {\n  var resultArray = ColorOperators.interpolateColorsRGB(ColorOperators.colorStringToRGB(color0), ColorOperators.colorStringToRGB(color1), value);\n  return ColorOperators.RGBtoHEX(resultArray[0], resultArray[1], resultArray[2]);\n};\n\n\n/**\n * return a color between color0 and color1\n * 0 -> color0\n * 1 -> color1\n * @param {Array} color0 RGB\n * @param {Array} color1 RGB\n * @param value between 0 and 1 (to obtain values between color0 and color1)\n * @return {Array} interpolated RGB color\n *\n */\nColorOperators.interpolateColorsRGB = function(color0, color1, value) {\n  var s = 1 - value;\n  return [Math.floor(s * color0[0] + value * color1[0]), Math.floor(s * color0[1] + value * color1[1]), Math.floor(s * color0[2] + value * color1[2])];\n};\n\n/**\n * converts an hexadecimal color to RGB\n * @param {String} an hexadecimal color string\n * @return {Array} returns an RGB color Array\n *\n */\nColorOperators.HEXtoRGB = function(hexColor) {\n  return [parseInt(hexColor.substr(1, 2), 16), parseInt(hexColor.substr(3, 2), 16), parseInt(hexColor.substr(5, 2), 16)];\n};\n\n\nColorOperators.RGBtoHEX = function(red, green, blue) {\n  return \"#\" + ColorOperators.toHex(red) + ColorOperators.toHex(green) + ColorOperators.toHex(blue);\n};\n\nColorOperators.RGBArrayToString = function(array) {\n  return 'rgb(' + array[0] + ',' + array[1] + ',' + array[2] + ')';\n};\n\n\n\n\n\n\nColorOperators.colorStringToHEX = function(color_string) {\n  var rgb = ColorOperators.colorStringToRGB(color_string);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\n\nColorOperators.numberToHex = function(number) {\n  var hex = number.toString(16);\n  while(hex.length < 2) hex = \"0\" + hex;\n  return hex;\n};\n\n\nColorOperators.uinttoRGB = function(color) {\n  var rgbColor = new Array(color >> 16, (color >> 8) - ((color >> 16) << 8), color - ((color >> 8) << 8));\n  return rgbColor;\n};\nColorOperators.uinttoHEX = function(color) {\n  var rgbColor = ColorOperators.uinttoRGB(color);\n  var hexColor = ColorOperators.RGBToHEX(rgbColor[0], rgbColor[1], rgbColor[2]);\n  return hexColor;\n};\n\n\nColorOperators.RGBtouint = function(red, green, blue) {\n  return Number(red) << 16 | Number(green) << 8 | Number(blue);\n};\n\nColorOperators.HEXtouint = function(hexColor) {\n  var colorArray = ColorOperators.HEXtoRGB(hexColor);\n  var color = ColorOperators.RGBtouint(colorArray[0], colorArray[1], colorArray[2]);\n  return color;\n};\n\nColorOperators.grayByLevel = function(level) {\n  level = Math.floor(level * 255);\n  return 'rgb(' + level + ',' + level + ',' + level + ')';\n};\n\n\n\n/**\n * converts an hexadecimal color to HSV\n * @param {String} an hexadecimal color string\n * @return {Array} returns an HSV color Array\n *\n */\nColorOperators.HEXtoHSV = function(hexColor) {\n  var rgb = ColorOperators.HEXtoRGB(hexColor);\n  return ColorOperators.RGBtoHSV(rgb[0], rgb[1], rgb[2]);\n};\n\n\nColorOperators.HSVtoHEX = function(hue, saturation, value) {\n  var rgb = ColorOperators.HSVtoRGB(hue, saturation, value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorOperators.HSLtoHEX = function(hue, saturation, light) {\n  var rgb = ColorOperators.HSLtoRGB(hue, saturation, light);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\n\n\n/**\n * converts an RGB color to HSV\n * @param {Array} a RGB color array\n * @return {Array} returns a HSV color array\n * H in [0,360], S in [0,1], V in [0,1]\n */\nColorOperators.RGBtoHSV = function(r, g, b) {\n    var h;\n    var s;\n    var v;\n    var min = Math.min(Math.min(r, g), b);\n    var max = Math.max(Math.max(r, g), b);\n    v = max / 255;\n    var delta = max - min;\n    if(delta == 0) return new Array(0, 0, r / 255);\n    if(max != 0) {\n      s = delta / max;\n    } else {\n      s = 0;\n      h = -1;\n      return new Array(h, s, v);\n    }\n    if(r == max) {\n      h = (g - b) / delta;\n    } else if(g == max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if(h < 0) h += 360;\n    return new Array(h, s, v);\n  };\n\n/**\n * converts an HSV color to RGB\n * @param {Array} a HSV color array\n * @return {Array} returns a RGB color array\n */\nColorOperators.HSVtoRGB = function(hue, saturation, value) {\n  hue = hue ? hue : 0;\n  saturation = saturation ? saturation : 0;\n  value = value ? value : 0;\n  var r;\n  var g;\n  var b;\n  //\n  var i;\n  var f;\n  var p;\n  var q;\n  var t;\n  if(saturation == 0) {\n    r = g = b = value;\n    return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n  }\n  hue /= 60;\n  i = Math.floor(hue);\n  f = hue - i;\n  p = value * (1 - saturation);\n  q = value * (1 - saturation * f);\n  t = value * (1 - saturation * (1 - f));\n  switch(i) {\n    case 0:\n      r = value;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = value;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = value;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = value;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = value;\n      break;\n    default:\n      r = value;\n      g = p;\n      b = q;\n      break;\n  }\n  return new Array(Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255));\n};\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes hue is contained in the interval [0,360) and saturation and l are contained in the set [0, 1]\n */\nColorOperators.HSLtoRGB = function(hue, saturation, light) {\n  var r, g, b;\n\n  if(saturation == 0) {\n    r = g = b = light; // achromatic\n  } else {\n    function hue2rgb(p, q, t) {\n      if(t < 0) t += 1;\n      if(t > 1) t -= 1;\n      if(t < 1 / 6) return p + (q - p) * 6 * t;\n      if(t < 1 / 2) return q;\n      if(t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    var q = light < 0.5 ? light * (1 + saturation) : light + saturation - light * saturation;\n    var p = 2 * light - q;\n    r = hue2rgb(p, q, (hue / 360) + 1 / 3);\n    g = hue2rgb(p, q, hue / 360);\n    b = hue2rgb(p, q, (hue / 360) - 1 / 3);\n  }\n\n  return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n};\n\n\nColorOperators.invertColorRGB = function(r, g, b) {\n  return [255 - r, 255 - g, 255 - b];\n};\n\nColorOperators.addAlpha = function(color, alpha) {\n  //var rgb = color.substr(0,3)=='rgb'?ColorOperators.colorStringToRGB(color):ColorOperators.HEXtoRGB(color);\n  var rgb = ColorOperators.colorStringToRGB(color);\n  if(rgb == null) return 'black';\n  return 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + alpha + ')';\n};\n\nColorOperators.invertColor = function(color) {\n  var rgb = ColorOperators.colorStringToRGB(color);\n  rgb = ColorOperators.invertColorRGB(rgb[0], rgb[1], rgb[2]);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\n\n\nColorOperators.toHex = function(number) {\n  var hex = number.toString(16);\n  while(hex.length < 2) hex = \"0\" + hex;\n  return hex;\n};\n\n\nColorOperators.getRandomColor = function() {\n  return 'rgb(' + String(Math.floor(Math.random() * 256)) + ',' + String(Math.floor(Math.random() * 256)) + ',' + String(Math.floor(Math.random() * 256)) + ')';\n};\n\n\n/////// Universal matching\n\n\n\n/**\n * This method was partially obtained (and simplified) from a Class by Stoyan Stefanov: \"A class to parse color values / @author Stoyan Stefanov <sstoo@gmail.com> / @link   http://www.phpied.com/rgb-color-parser-in-javascript/ / @license Use it if you like it\"\n * @param {String} color_string color as a string (e.g. \"red\", \"#0044ff\", \"rgb(130,20,100)\")\n * @return {Array} rgb array\n * tags:\n */\nColorOperators.colorStringToRGB = function(color_string) {\n  //c.log('color_string:['+color_string+']');\n  var ok = false;\n\n  // strip any leading #\n  if(color_string.charAt(0) == '#') { // remove # if any\n    color_string = color_string.substr(1, 6);\n    //c.log('-> color_string:['+color_string+']');\n  }\n\n  color_string = color_string.replace(/ /g, '');\n  color_string = color_string.toLowerCase();\n\n  // before getting into regexps, try simple matches\n  // and overwrite the input\n  var simple_colors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '00ffff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000000',\n    blanchedalmond: 'ffebcd',\n    blue: '0000ff',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '00ffff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dodgerblue: '1e90ff',\n    feldspar: 'd19275',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'ff00ff',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslateblue: '8470ff',\n    lightslategray: '778899',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '00ff00',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'ff00ff',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    red: 'ff0000',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    violetred: 'd02090',\n    wheat: 'f5deb3',\n    white: 'ffffff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ffff00',\n    yellowgreen: '9acd32'\n  };\n\n  if(simple_colors[color_string] != null) color_string = simple_colors[color_string];\n\n\n  // array of color definition objects\n  var color_defs = [\n  {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    //example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process: function(bits) {\n      return [\n        parseInt(bits[1]),\n        parseInt(bits[2]),\n        parseInt(bits[3])\n      ];\n    }\n  },\n  {\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),[\\.0123456789]+\\)$/,\n    //example: ['rgb(123, 234, 45)', 'rgb(255,234,245)', 'rgba(200,100,120,0.3)'],\n    process: function(bits) {\n      return [\n        parseInt(bits[1]),\n        parseInt(bits[2]),\n        parseInt(bits[3])\n      ];\n    }\n  },\n  {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    //example: ['#00ff00', '336699'],\n    process: function(bits) {\n      return [\n        parseInt(bits[1], 16),\n        parseInt(bits[2], 16),\n        parseInt(bits[3], 16)\n      ];\n    }\n  },\n  {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    //example: ['#fb0', 'f0f'],\n    process: function(bits) {\n      return [\n        parseInt(bits[1] + bits[1], 16),\n        parseInt(bits[2] + bits[2], 16),\n        parseInt(bits[3] + bits[3], 16)\n      ];\n    }\n  }];\n\n  // search through the definitions to find a match\n  for(var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n    if(bits) {\n      return processor(bits);\n    }\n\n  }\n\n  return null;\n};\n","/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\n//var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n//var b64pad  = \"\";  /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n\nfunction MD5(){}\nexport default MD5;\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nMD5.hex_md5 = function(s)    { return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s))); };\nMD5.b64_md5 = function(s)    { return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s))); };\nMD5.any_md5 = function(s, e) { return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)), e); };\nMD5.hex_hmac_md5 = function(k, d)\n  { return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); };\nMD5.b64_hmac_md5 = function(k, d)\n  { return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); };\nMD5.any_hmac_md5 = function(k, d, e)\n  { return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e); };\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nMD5.md5_vm_test = function()\n{\n  return this.hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\n};\n\n/*\n * Calculate the MD5 of a raw string\n */\nMD5.rstr_md5 = function(s)\n{\n  return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n};\n\n/*\n * Calculate the HMAC-MD5, of a key and some data (raw strings)\n */\nMD5.rstr_hmac_md5 = function(key, data)\n{\n  var bkey = this.rstr2binl(key);\n  if(bkey.length > 16) bkey = this.binl_md5(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n  return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n};\n\n/*\n * Convert a raw string to a hex string\n */\nMD5.rstr2hex = function(input)\n{\n\tvar hexcase = 0;\n  try { hexcase; } catch(e) { hexcase=0; }\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n};\n\n/*\n * Convert a raw string to a base-64 string\n */\nMD5.rstr2b64 = function(input)\n{\n\tvar b64pad  = \"\";\n  try { b64pad; } catch(e) { b64pad=''; }\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n};\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nMD5.rstr2any = function(input, encoding)\n{\n  var divisor = encoding.length;\n  var i, j, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. All remainders are stored for later\n   * use.\n   */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)));\n  var remainders = Array(full_length);\n  for(j = 0; j < full_length; j++)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[j] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  return output;\n};\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nMD5.str2rstr_utf8 = function(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n};\n\n/*\n * Encode a string as utf-16\n */\nMD5.str2rstr_utf16le = function(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\n  return output;\n};\n\nMD5.str2rstr_utf16be = function(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                   input.charCodeAt(i)        & 0xFF);\n  return output;\n};\n\n/*\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nMD5.rstr2binl = function(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (i%32);\n  return output;\n};\n\n/*\n * Convert an array of little-endian words to a string\n */\nMD5.binl2rstr = function(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (i % 32)) & 0xFF);\n  return output;\n};\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\nMD5.binl_md5 = function(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = this.md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = this.md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = this.md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = this.md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = this.md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = this.md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = this.md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = this.md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = this.md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = this.md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = this.md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = this.md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = this.md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = this.md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = this.md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = this.md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = this.md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = this.md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = this.md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = this.md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = this.safe_add(a, olda);\n    b = this.safe_add(b, oldb);\n    c = this.safe_add(c, oldc);\n    d = this.safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n};\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nMD5.md5_cmn = function(q, a, b, x, s, t)\n{\n  return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);\n};\nMD5.md5_ff = function(a, b, c, d, x, s, t)\n{\n  return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n};\nMD5.md5_gg = function(a, b, c, d, x, s, t)\n{\n  return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n};\nMD5.md5_hh = function(a, b, c, d, x, s, t)\n{\n  return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n};\nMD5.md5_ii = function(a, b, c, d, x, s, t)\n{\n  return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n};\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nMD5.safe_add = function(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n};\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nMD5.bit_rol = function(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n};","import { version } from \"src/Version\";\nimport Point from 'src/dataStructures/geometry/Point';\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport MD5 from \"src/tools/utils/strings/MD5\";\nimport NetworkEncodings from \"src/operators/structures/NetworkEncodings\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\n// TODO possibly remove this. it comes from simplegraphics\nfunction setCursor(name) {\n  name = name == null ? 'default' : name;\n  canvas.style.cursor = name;\n}\n\n\n/**\n *Static class that:\n * -includes all the data models (by including the class IncludeDataModels.js)\n * -includes information about all those data models (on dataModelsInfo variable)\n * -includes class utils (that contains methods such as instantiate)\n * -contains the global variables (such as userAgent, canvas, nF, mX…), global\n * -contains the listener methods\n * -triggers de init, update and draw in Global class\n * @namespace\n * @category basics\n */\nexport function Global(){}\n\nGlobal.userAgent=\"unknown\";\n\nwindow.init = function(){\n  //console.log(\"init must be overriden!\");\n}\n\nwindow.cycle = function(){\n  //console.log(\"cycle must be overriden!\");\n}\n\nwindow.resizeWindow = function(){\n  //console.log(\"resizeWindow must be overriden!\");\n}\n\nwindow.lastCycle = function(){\n  //override\n}\n\nexport var listenerArray  = [];\nexport var canvas;\nexport var userAgent=\"none\";\nexport var userAgentVersion;\nexport var canvasResizeable=true;\n\n//data models info\nexport var dataModelsInfo = [\n  {\n    type:\"Null\",\n    short:\"Ø\",\n    category:\"object\",\n    level:\"0\",\n    write:\"true\",\n    inherits:null,\n    color:\"#ffffff\"\n  },\n  {\n    type:\"Object\",\n    short:\"{}\",\n    category:\"object\",\n    level:\"0\",\n    write:\"true\",\n    inherits:null,\n    to:\"String\",\n    color:\"#C0BFBF\"\n  },\n  {\n    type:\"Function\",\n    short:\"F\",\n    category:\"object\",\n    level:\"0\",\n    inherits:null,\n    color:\"#C0BFBF\"\n  },  {\n    type:\"Boolean\",\n    short:\"b\",\n    category:\"boolean\",\n    level:\"0\",\n    write:\"true\",\n    inherits:null,\n    to:\"Number\",\n    color:\"#4F60AB\"\n  },\n  {\n    type:\"Number\",\n    short:\"#\",\n    category:\"number\",\n    level:\"0\",\n    write:\"true\",\n    inherits:null,\n    to:\"String\",\n    color:\"#5DA1D8\"\n  },\n  {\n    type:\"Interval\",\n    short:\"##\",\n    category:\"number\",\n    level:\"0.5\",\n    write:\"true\",\n    inherits:null,\n    to:\"Point\",\n    contains:\"Number\",\n    color:\"#386080\"\n  },\n  {\n    type:\"Array\",\n    short:\"[]\",\n    category:\"object\",\n    level:\"1\",\n    inherits:null,\n    to:\"List\",\n    contains:\"Object,Null\",\n    color:\"#80807F\"\n  },\n  {\n    type:\"List\",\n    short:\"L\",\n    category:\"object\",\n    level:\"1\",\n    inherits:\"Array\",\n    contains:\"Object\",\n    comments:\"A List is an Array that doesn't contain nulls, and with enhanced functionalities\",\n    color:\"#80807F\"\n  },\n  {\n    type:\"Table\",\n    short:\"T\",\n    category:\"object\",\n    level:\"2\",\n    inherits:\"List\",\n    contains:\"List\",\n    comments:\"A Table is a List of Lists\",\n    color:\"#80807F\"\n  },\n  {\n    type:\"BooleanList\",\n    short:\"bL\",\n    category:\"boolean\",\n    level:\"1\",\n    inherits:\"List\",\n    to:\"NumberList\",\n    contains:\"Boolean\",\n    color:\"#3A4780\"\n  },\n  {\n    type:\"NumberList\",\n    short:\"#L\",\n    category:\"number\",\n    level:\"1\",\n    write:\"true\",\n    inherits:\"List\",\n    to:\"StringList\",\n    contains:\"Number\",\n    color:\"#386080\"\n  },\n  {\n    type:\"NumberTable\",\n    short:\"#T\",\n    category:\"number\",\n    level:\"2\",\n    write:\"true\",\n    inherits:\"Table\",\n    to:\"Network\",\n    contains:\"NumberList\",\n    color:\"#386080\"\n  },\n  {\n    type:\"String\",\n    short:\"s\",\n    category:\"string\",\n    level:\"0\",\n    write:\"true\",\n    inherits:null,\n    color:\"#8BC63F\"\n  },\n  {\n    type:\"StringList\",\n    short:\"sL\",\n    category:\"string\",\n    level:\"1\",\n    write:\"true\",\n    inherits:\"List\",\n    contains:\"String\",\n    color:\"#5A8039\"\n  },\n  {\n    type:\"StringTable\",\n    short:\"sT\",\n    category:\"string\",\n    level:\"2\",\n    inherits:\"Table\",\n    contains:\"StringList\",\n    color:\"#5A8039\"\n  },\n  {\n    type:\"Date\",\n    short:\"d\",\n    category:\"date\",\n    level:\"0.5\",\n    write:\"true\",\n    inherits:null,\n    to:\"Number,String\",\n    color:\"#7AC8A3\"\n  },\n  {\n    type:\"DateInterval\",\n    short:\"dd\",\n    category:\"date\",\n    level:\"0.75\",\n    inherits:null,\n    to:\"Interval\",\n    contains:\"Date\",\n    color:\"#218052\"\n  },\n  {\n    type:\"DateList\",\n    short:\"dL\",\n    category:\"date\",\n    level:\"1.5\",\n    inherits:\"List\",\n    to:\"NumberList,StringList\",\n    contains:\"Date\",\n    color:\"#218052\"\n  },\n  {\n    type:\"Point\",\n    short:\".\",\n    category:\"geometry\",\n    level:\"0.5\",\n    write:\"true\",\n    inherits:null,\n    to:\"Interval\",\n    contains:\"Number\",\n    color:\"#9D59A4\"\n  },\n  {\n    type:\"Rectangle\",\n    short:\"t\",\n    category:\"geometry\",\n    level:\"0.5\",\n    inherits:null,\n    to:\"Polygon\",\n    contains:\"Number\",\n    color:\"#9D59A4\"\n  },\n  {\n    type:\"Polygon\",\n    short:\".L\",\n    category:\"geometry\",\n    level:\"1.5\",\n    inherits:\"List\",\n    to:\"NumberTable\",\n    contains:\"Point\",\n    comments:\"A Polygon is a List of Points\",\n    color:\"#76297F\"\n  },\n  {\n    type:\"RectangleList\",\n    short:\"tL\",\n    category:\"geometry\",\n    level:\"1.5\",\n    inherits:null,\n    to:\"MultiPolygon\",\n    contains:\"Rectangle\",\n    color:\"#76297F\"\n  },\n  {\n    type:\"MultiPolygon\",\n    short:\".T\",\n    category:\"geometry\",\n    level:\"2.5\",\n    inherits:\"Table\",\n    contains:\"Polygon\",\n    comments:\"A MultiPolygon is a List of Polygons\",\n    color:\"#76297F\"\n  },\n  {\n    type:\"Point3D\",\n    short:\"3\",\n    category:\"geometry\",\n    level:\"0.5\",\n    write:\"true\",\n    inherits:\"Point\",\n    to:\"NumberList\",\n    contains:\"Number\",\n    color:\"#9D59A4\"\n  },\n  {\n    type:\"Polygon3D\",\n    short:\"3L\",\n    category:\"geometry\",\n    level:\"1.5\",\n    inherits:\"List\",\n    to:\"NumberTable\",\n    contains:\"Point3D\",\n    color:\"#76297F\"\n  },\n  {\n    type:\"MultiPolygon3D\",\n    short:\"3T\",\n    category:\"geometry\",\n    level:\"2.5\",\n    inherits:\"Table\",\n    contains:\"Polygon3D\",\n    color:\"#76297F\"\n  },\n  {\n    type:\"Color\",\n    short:\"c\",\n    category:\"color\",\n    level:\"0\",\n    inherits:null,\n    to:\"String\",\n    comments:\"a Color is just a string that can be interpreted as color\",\n    color:\"#EE4488\"\n  },\n  {\n    type:\"ColorScale\",\n    short:\"cS\",\n    category:\"color\",\n    level:\"0\",\n    write:\"true\",\n    inherits:\"Function\",\n    color:\"#802046\"\n  },\n  {\n    type:\"ColorList\",\n    short:\"cL\",\n    category:\"color\",\n    level:\"1\",\n    write:\"true\",\n    inherits:\"List\",\n    to:\"StringList\",\n    contains:\"Color\",\n    color:\"#802046\"\n  },\n  {\n    type:\"Image\",\n    short:\"i\",\n    category:\"graphic\",\n    level:\"0\",\n    inherits:null,\n    color:\"#802046\"\n  },\n  {\n    type:\"ImageList\",\n    short:\"iL\",\n    category:\"graphic\",\n    level:\"1\",\n    inherits:\"List\",\n    contains:\"Image\",\n    color:\"#802046\"\n  },\n  {\n    type:\"Node\",\n    short:\"n\",\n    category:\"structure\",\n    level:\"0\",\n    inherits:null,\n    color:\"#FAA542\"\n  },\n  {\n    type:\"Relation\",\n    short:\"r\",\n    category:\"structure\",\n    level:\"0.5\",\n    inherits:\"Node\",\n    contains:\"Node\",\n    color:\"#FAA542\"\n  },\n  {\n    type:\"NodeList\",\n    short:\"nL\",\n    category:\"structure\",\n    level:\"1\",\n    inherits:\"List\",\n    contains:\"Node\",\n    color:\"#805522\"\n  },\n  {\n    type:\"RelationList\",\n    short:\"rL\",\n    category:\"structure\",\n    level:\"1.5\",\n    inherits:\"NodeList\",\n    contains:\"Relation\",\n    color:\"#805522\"\n  },\n  {\n    type:\"Network\",\n    short:\"Nt\",\n    category:\"structure\",\n    level:\"2\",\n    inherits:null,\n    to:\"Table\",\n    contains:\"NodeList,RelationList\",\n    color:\"#805522\"\n  },\n  {\n    type:\"Tree\",\n    short:\"Tr\",\n    category:\"structure\",\n    level:\"2\",\n    inherits:\"Network\",\n    to:\"Table\",\n    contains:\"NodeList,RelationList\",\n    color:\"#805522\"\n  }\n];\n\n\n//global useful vars\nexport var cW = 1; // canvas width\nexport var cH = 1; // canvas height\nexport var cX = 1; // canvas center x\nexport var cY = 1; // canvas center y\nexport var mX = 0; // cursor x\nexport var mY = 0; // cursor y\nexport var mP = new Point(0, 0); // cursor point\nexport var nF = 0; // number of current frame since first cycle\n\nexport var MOUSE_DOWN=false; //true on the frame of mousedown event\nexport var MOUSE_UP=false; //true on the frame of mouseup event\nexport var MOUSE_UP_FAST=false; //true on the frame of mouseup event\nexport var WHEEL_CHANGE=0; //differnt from 0 if mousewheel (or pad) moves / STATE\nexport var NF_DOWN; //number of frame of last mousedown event\nexport var NF_UP; //number of frame of last mouseup event\nexport var MOUSE_PRESSED; //true if mouse pressed / STATE\nexport var MOUSE_IN_DOCUMENT = true; //true if cursor is inside document / STATE\nexport var mX_DOWN; // cursor x position on last mousedown event\nexport var mY_DOWN; // cursor x position on last mousedown event\nexport var mX_UP; // cursor x position on last mousedown event\nexport var mY_UP; // cursor y position on last mousedown event\nexport var PREV_mX=0; // cursor x position previous frame\nexport var PREV_mY=0; // cursor y position previous frame\nexport var DX_MOUSE=0; //horizontal movement of cursor in last frame\nexport var DY_MOUSE=0; //vertical movement of cursor in last frame\nexport var MOUSE_MOVED = false; //boolean that indicates wether the mouse moved in the last frame / STATE\nexport var T_MOUSE_PRESSED = 0; //time in milliseconds of mouse being pressed, useful for sutained pressure detection\n\n//var deltaWheel = 0;\nexport var cursorStyle = 'auto';\nexport var backGroundColor = 'white';\nexport var backGroundColorRGB = [255,255,255];\nexport var cycleActive;\n\n//global constants\nexport var context;\nexport var TwoPi = 2*Math.PI;\nexport var HalfPi = 0.5*Math.PI;\nexport var radToGrad = 180/Math.PI;\nexport var gradToRad = Math.PI/180;\nexport var c = console;\nc.l = c.log; //use c.l instead of console.log\n\n//private\nvar _wheelActivated = false;\nvar _keyboardActivated = false;\n\nvar _prevMouseX = 0;\nvar _prevMouseY = 0;\nvar _setIntervalId;\nvar _setTimeOutId;\nexport var _cycleOnMouseMovement = false;\nvar _interactionCancelledFrame;\nvar _tLastMouseDown;\n\nvar _alphaRefresh=0;//if _alphaRefresh>0 instead of clearing the canvas each frame, a transparent rectangle will be drawn\n\nvar END_CYCLE_DELAY = 3000; //time in milliseconds, from last mouse movement to the last cycle to be executed in case cycleOnMouseMovement has been activated\n\nArray.prototype.last = function(){\n  return this[this.length-1];\n};\n\nwindow.addEventListener('load', function(){\n\n  if (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)){ //test for MSIE x.x;\n    userAgent='IE';\n    userAgentVersion=Number(RegExp.$1); // capture x.x portion and store as a number\n    if(userAgentVersion<9) return null;\n  } else if (/Firefox[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)){ //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);\n    userAgent='FIREFOX';\n    userAgentVersion=Number(RegExp.$1); // capture x.x portion and store as a number\n  } else if (navigator.userAgent.match(/Chrome/) != null){ //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);\n    userAgent='CHROME';\n    userAgentVersion=Number(RegExp.$1); // capture x.x portion and store as a number\n  } else if (/Mozilla[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent) || navigator.userAgent.match(/Mozilla/) != null){ //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);\n    userAgent='MOZILLA';\n    userAgentVersion=Number(RegExp.$1); // capture x.x portion and store as a number\n  } else if (navigator.userAgent.match(/Safari/) != null){ //test for MSIE x.x;\n    userAgent='Safari';\n    userAgentVersion=Number(RegExp.$1); // capture x.x portion and store as a number\n  } else if(navigator.userAgent.match(/iPad/i) != null){\n    userAgent='IOS';\n  } else if(navigator.userAgent.match(/iPhone/i) != null){\n    userAgent='IOS';\n  }\n\n\n  Global.userAgent=userAgent;\n  Global._frameRate=30;\n\n  canvas = document.getElementById('main');\n\n  if(canvas!=null){\n    context = canvas.getContext('2d');\n\n    _adjustCanvas();\n\n    canvas.addEventListener(\"mousemove\", _onMouse, false);\n    canvas.addEventListener(\"mousedown\", _onMouse, false);\n    canvas.addEventListener(\"mouseup\", _onMouse, false);\n    canvas.addEventListener(\"mouseenter\", _onMouse, false);\n    canvas.addEventListener(\"mouseleave\", _onMouse, false);\n\n\n    activateWheel();\n\n    window.addEventListener(\"resize\", onResize, false);\n\n    startCycle();\n    window.init();\n  }\n\n  c.l('Moebio Framework v' + version + ' | user agent: '+userAgent+' | user agent version: '+userAgentVersion+' | canvas detected: '+(canvas!=null));\n\n}, false);\n\nexport function _onMouse(e) {\n\n  switch(e.type){\n    case \"mousemove\":\n      PREV_mX=mX;\n      PREV_mY=mY;\n\n      if(e.clientX){\n        mX = e.clientX;\n            mY = e.clientY;\n      } else if(e.offsetX) {\n            mX = e.offsetX;\n            mY = e.offsetY;\n        } else if(e.layerX) {\n            mX = e.layerX;\n            mY = e.layerY;\n        }\n        mP.x = mX;\n        mP.y = mY;\n        MOUSE_IN_DOCUMENT = true;\n        break;\n    case \"mousedown\":\n      NF_DOWN = nF;\n      MOUSE_PRESSED = true;\n      T_MOUSE_PRESSED = 0;\n      _tLastMouseDown = new Date().getTime();\n      mX_DOWN = mX;\n      mY_DOWN = mY;\n      MOUSE_IN_DOCUMENT = true;\n      break;\n    case \"mouseup\":\n      NF_UP = nF;\n      MOUSE_PRESSED = false;\n      T_MOUSE_PRESSED = 0;\n      mX_UP = mX;\n      mY_UP = mY;\n      MOUSE_IN_DOCUMENT = true;\n      break;\n    case \"mouseenter\":\n      MOUSE_IN_DOCUMENT = true;\n      break;\n    case \"mouseleave\":\n      MOUSE_IN_DOCUMENT = false;\n      break;\n  }\n}\n\n\nexport function onResize(e){\n  _adjustCanvas();\n  window.resizeWindow();\n}\n\nfunction _adjustCanvas(){\n  if(canvasResizeable==false) return;\n\n  cW = getDocWidth();\n  cH = getDocHeight();\n\n  canvas.setAttribute('width', cW);\n  canvas.setAttribute('height', cH);\n\n  cX = Math.floor(cW*0.5);\n  cY = Math.floor(cH*0.5);\n}\n\n\nexport function clearContext(){\n  context.clearRect(0, 0, cW, cH);\n}\n\nexport function cycleOnMouseMovement(value, time){\n  if(time!=null) END_CYCLE_DELAY = time;\n\n  if(value){\n    context.canvas.addEventListener('mousemove', onMoveCycle, false);\n    addInteractionEventListener('mousewheel', onMoveCycle, this);\n    _cycleOnMouseMovement = true;\n    stopCycle();\n  } else {\n    context.canvas.removeEventListener('mousemove', onMoveCycle, false);\n    removeInteractionEventListener('mousewheel', onMoveCycle, this);\n    _cycleOnMouseMovement = false;\n    startCycle();\n  }\n}\n\nexport function setFrameRate(fr){\n  fr = fr||30;\n  Global._frameRate = fr;\n\n  if(cycleActive) startCycle();\n}\n\nexport function enterFrame(){\n  if(_alphaRefresh==0){\n      context.clearRect(0, 0, cW, cH);\n  } else {\n    context.fillStyle = 'rgba('+backGroundColorRGB[0]+','+backGroundColorRGB[1]+','+backGroundColorRGB[2]+','+_alphaRefresh+')';\n    context.fillRect(0, 0, cW, cH);\n  }\n\n    setCursor('default');\n\n    MOUSE_DOWN = NF_DOWN==nF;\n  MOUSE_UP = NF_UP==nF;\n  MOUSE_UP_FAST = MOUSE_UP && (nF-NF_DOWN)<9;\n\n  DX_MOUSE = mX-PREV_mX;\n  DY_MOUSE = mY-PREV_mY;\n  MOUSE_MOVED = DX_MOUSE!=0 || DY_MOUSE!=0;\n\n  if(MOUSE_PRESSED) T_MOUSE_PRESSED = new Date().getTime() - _tLastMouseDown;\n\n    window.cycle();\n\n    WHEEL_CHANGE = 0;\n\n    PREV_mX=mX;\n  PREV_mY=mY;\n\n    nF++;\n}\n\nexport function startCycle(){\n  clearTimeout(_setTimeOutId);\n  clearInterval(_setIntervalId);\n  _setIntervalId = setInterval(enterFrame, Global._frameRate);\n  cycleActive = true;\n}\n\n\nexport function stopCycle(){\n  clearInterval(_setIntervalId);\n  cycleActive = false;\n\n  window.lastCycle();\n}\n\n\n\n\nexport function onMoveCycle(e){\n  if(e.type=='mousemove' && _prevMouseX==mX && _prevMouseY==mY) return;\n  reStartCycle();\n}\n\nexport function reStartCycle(){\n  _prevMouseX=mX;\n  _prevMouseY=mY;\n\n  if(!cycleActive){\n    _setIntervalId = setInterval(enterFrame, Global._frameRate);\n    cycleActive = true;\n  }\n\n  clearTimeout(_setTimeOutId);\n  _setTimeOutId = setTimeout(stopCycle, END_CYCLE_DELAY);\n}\n\n//interaction events\nexport function addInteractionEventListener(eventType, onFunction, target){//TODO: listenerArray contains objects instead of arrays\n  listenerArray.push(new Array(eventType, onFunction, target));\n  switch(eventType){\n    case 'mousedown':\n    case 'mouseup':\n    case 'click':\n    case 'mousemove':\n      context.canvas.addEventListener(eventType, onCanvasEvent, false);\n      break;\n    case 'mousewheel':\n      if(!_wheelActivated) activateWheel();\n      break;\n    case 'keydown':\n    case 'keyup':\n      if(!_keyboardActivated) activateKeyboard();\n      break;\n  }\n}\n\nexport function onCanvasEvent(e){\n  var i;\n  for(i=0; listenerArray[i]!=null; i++){\n    if(listenerArray[i][0]==e.type.replace('DOMMouseScroll', 'mousewheel')){\n      if(_interactionCancelledFrame==nF) return;\n      listenerArray[i][1].call(listenerArray[i][2], e);\n    }\n  }\n}\n\nexport function removeInteractionEventListener(eventType, onFunction, target){ //TODO: finish this (requires single element removing method solved first)\n  for(var i=0; listenerArray[i]!=null; i++){\n    if(listenerArray[i][0]==eventType && listenerArray[i][1]==onFunction && listenerArray[i][2]==target){\n      delete listenerArray[i];\n      listenerArray.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function cancelAllInteractions(){\n  c.log(\"cancelAllInteractions, _interactionCancelledFrame:\", nF);\n  _interactionCancelledFrame = nF;\n}\n\nexport function setBackgroundColor(color){\n  if(typeof color == \"number\"){\n    if(arguments.length>3){\n      color = 'rgba('+arguments[0]+','+arguments[1]+','+arguments[2]+','+arguments[3]+')';\n    } else {\n      color = 'rgb('+arguments[0]+','+arguments[1]+','+arguments[2]+')';\n    }\n  } else if(Array.isArray(color)){\n    color = ColorOperators.RGBtoHEX(color[0], color[1], color[2]);\n  }\n  backGroundColor = color;\n\n  backGroundColorRGB = ColorOperators.colorStringToRGB(backGroundColor);\n\n  var body = document.getElementById('index');\n  body.setAttribute('bgcolor', backGroundColor);\n}\n\nfunction setDivPosition(div, x, y){\n  div.setAttribute('style', 'position:absolute;left:'+String(x)+'px;top:'+String(y)+'px;');\n}\n\n\n/////////////////////////////////// keyboard and wheel\n\nexport function activateKeyboard(){\n  _keyboardActivated = true;\n  document.onkeydown = onKey;\n  document.onkeyup = onKey;\n}\n\nexport function onKey(e){\n  onCanvasEvent(e);\n}\n\n/*\n * thanks http://www.adomas.org/javascript-mouse-wheel\n */\nexport function activateWheel(){\n  _wheelActivated = true;\n\n  if (window.addEventListener){\n    window.addEventListener('DOMMouseScroll', _onWheel, false);\n    //window.addEventListener(\"mousewheel\", _onWheel, false); // testing\n  }\n  window.onmousewheel = document.onmousewheel = _onWheel;\n\n}\nfunction _onWheel(e) {\n  //c.l('_onWheel, e:', e);\n\n    if (!e) e = window.event; //IE\n\n    if (e.wheelDelta){\n      WHEEL_CHANGE = e.wheelDelta/120;\n    } else if (e.detail) { /** Mozilla case. */\n        WHEEL_CHANGE = -e.detail/3;\n    }\n    e.value = WHEEL_CHANGE;\n    // e.type = \"mousewheel\"; //why this doesn't work?\n\n  onCanvasEvent(e);\n}\n\n\n\n////structures local storage\n\nexport function setStructureLocalStorageWithSeed(object, seed, comments){\n  setStructureLocalStorage(object, MD5.hex_md5(seed), comments);\n};\n\nexport function setStructureLocalStorage(object, id, comments){\n  var type = typeOf(object);\n  var code;\n\n  switch(type){\n    case 'string':\n      code = object;\n      break;\n    case 'Network':\n      code = NetworkEncodings.encodeGDF(network);\n      break;\n    default:\n      type = 'object';\n      code = JSON.stringify(object);\n      break;\n  }\n\n  var storageObject = {\n    id:id,\n    type:type,\n    comments:comments,\n    date:new Date(),\n    code:code\n  };\n\n  var storageString = JSON.stringify(storageObject);\n\n  // c.l('storageObject', storageObject);\n  // c.l('id:['+id+']');\n  // c.l('code.length:', code.length);\n\n  localStorage.setItem(id, storageString);\n};\n\nexport function getStructureLocalStorageFromSeed(seed, returnStorageObject){\n  return getStructureLocalStorage(MD5.hex_md5(seed), returnStorageObject);\n};\n\nexport function getStructureLocalStorage(id, returnStorageObject){\n  returnStorageObject = returnStorageObject||false;\n\n  var item = localStorage.getItem(id);\n\n  if(item==null) return null;\n\n\n  try{\n    var storageObject = JSON.parse(item);\n  } catch(err){\n    return null;\n  }\n\n  if(storageObject.type==null && storageObject.code==null) return null;\n\n  var type = storageObject.type;\n  var code = storageObject.code;\n  var object;\n\n  switch(type){\n    case 'string':\n      object = code;\n      break;\n    case 'Network':\n      object = NetworkEncodings.decodeGDF(code);\n      break;\n    case 'object':\n      object = JSON.parse(code);\n      break;\n  }\n\n  if(returnStorageObject){\n    storageObject.object = object;\n    storageObject.size = storageObject.code.length;\n    storageObject.date = new Date(storageObject.date);\n\n    return storageObject;\n  }\n\n  return object;\n};\n\nexport function getDocWidth() {\n    var D = document;\n    return Math.max(\n        D.body.offsetWidth, D.documentElement.offsetWidth,\n        D.body.clientWidth, D.documentElement.clientWidth\n    );\n}\n\nexport function getDocHeight() {\n    var D = document;\n    return Math.max(\n        D.body.offsetHeight, D.documentElement.offsetHeight,\n        D.body.clientHeight, D.documentElement.clientHeight\n    );\n}\n","import Node from \"src/dataStructures/structures/elements/Node\";\n\nRelation.prototype = new Node();\nRelation.prototype.constructor = Relation;\n\n/**\n * Relation\n * @classdesc Relations represent the edges that connect Nodes\n * in a Network DataType.\n *\n * @description create a new Relation.\n * @constructor\n * @param {String} id ID of the Relation.\n * @param {String} name Name of the Relation.\n * @param {Node} node0 Source of the Relation.\n * @param {Node} node1 Destination of the Relation.\n * @param {Number} weight Edge weight associated with Relation.\n * Defaults to 1.\n * @param {String} content Other data to associate with this Relation.\n * @category networks\n */\nfunction Relation(id, name, node0, node1, weight, content) {\n  Node.apply(this, [id, name]);\n  this.type = \"Relation\";\n\n  this.node0 = node0;\n  this.node1 = node1;\n  this.weight = weight == null ? 1 : weight;\n  this.content = content == null ? \"\" : content;\n}\nexport default Relation;\n\nRelation.prototype.destroy = function() {\n  Node.prototype.destroy.call(this);\n  delete this.node0;\n  delete this.node1;\n  delete this.content;\n};\n\nRelation.prototype.getOther = function(node) {\n  return node == this.node0 ? this.node1 : this.node0;\n};\n\nRelation.prototype.clone = function() {\n  var relation = new Relation(this.id, this.name, this.node0, this.node1);\n\n  relation.x = this.x;\n  relation.y = this.y;\n  relation.z = this.z;\n\n  relation.nodeType = this.nodeType;\n\n  relation.weight = this.weight;\n  relation.descentWeight = this.descentWeight;\n\n  return relation;\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport RelationList from \"src/dataStructures/structures/lists/RelationList\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\n\nNetwork.prototype = new DataModel();\nNetwork.prototype.constructor = Network;\n\n/**\n * @classdesc Networks are a DataType to store network data.\n *\n * Networks have nodes stored in a NodeList,\n * and relations (edges) stored in a RelationList.\n * @description Create a new Network instance.\n * @constructor\n * @category networks\n */\nfunction Network() {\n  this.type = \"Network\";\n\n  this.nodeList = new NodeList();\n  this.relationList = new RelationList();\n}\nexport default Network;\n\n/**\n * Get Nodes of the Network as a NodeList\n * @return {NodeList}\n * tags:\n */\nNetwork.prototype.getNodes = function() {\n  return this.nodeList;\n};\n\n/**\n * Get Relations (edges) of the Network as\n * a RelationList.\n * @return {RelationList}\n * tags:\n */\nNetwork.prototype.getRelations = function() {\n  return this.relationList;\n};\n\n/**\n * get nodes ids property\n * @return {StringList}\n * tags:\n */\nNetwork.prototype.getNodesIds = function() {\n  return this.nodeList.getIds();\n};\n\n\n\n/*\n * building methods\n */\n\n/**\n * Add a node to the network\n * @param {Node} node A new node that will be added to the network.\n */\nNetwork.prototype.addNode = function(node) {\n  this.nodeList.addNode(node);\n};\n\n/**\n * Retrieve a node from the nodeList of the Network with the given name (label).\n * @param {String} name The name of the node to retrieve from the Network.\n * @return {Node} The node with the given name. Null if no node with that name\n * can be found in the Network.\n */\nNetwork.prototype.getNodeWithName = function(name) {\n  return this.nodeList.getNodeWithName(name);\n};\n\n/**\n * Retrieve node from Network with the given id.\n * @param {String} id ID of the node to retrieve\n * @return {Node} The node with the given id. Null if a node with this id is not\n * in the Network.\n */\nNetwork.prototype.getNodeWithId = function(id) {\n  return this.nodeList.getNodeWithId(id);\n};\n\n/**\n * Add a new Relation (edge) to the Network between two nodes.\n * @param {Node} node0 The source of the relation.\n * @param {Node} node1 The destination of the relation.\n * @param {String} id The id of the relation.\n * @param {Number} weight A numerical weight associated with the relation (edge).\n * \n * @param {String} content Information associated with the relation.\n */\nNetwork.prototype.createRelation = function(node0, node1, id, weight, content) {\n  this.addRelation(new Relation(id, id, node0, node1, weight, content));\n};\n\n/**\n * Add an existing Relation (edge) to the Network.\n * @param {Relation} relation The relation to add to the network.\n */\nNetwork.prototype.addRelation = function(relation) {\n  this.relationList.addNode(relation);\n  relation.node0.nodeList.addNode(relation.node1);\n  relation.node0.relationList.addNode(relation);\n  relation.node0.toNodeList.addNode(relation.node1);\n  relation.node0.toRelationList.addNode(relation);\n  relation.node1.nodeList.addNode(relation.node0);\n  relation.node1.relationList.addNode(relation);\n  relation.node1.fromNodeList.addNode(relation.node0);\n  relation.node1.fromRelationList.addNode(relation);\n};\n\n/**\n * Create a new Relation between two nodes in the network\n * @param {Node} node0 The source of the relation.\n * @param {Node} node1 The destination of the relation.\n * @param {String} id The id of the relation. If missing, an id will be generated\n * based on the id's of node0 and node1.\n * @param {Number} weight=1 A numerical weight associated with the relation (edge).\n * @param {String} content Information associated with the relation.\n * @return {Relation} The new relation added to the Network.\n */\nNetwork.prototype.connect = function(node0, node1, id, weight, content) {\n  id = id || (node0.id + \"_\" + node1.id);\n  weight = weight || 1;\n  var relation = new Relation(id, id, node0, node1, weight);\n  this.addRelation(relation);\n  relation.content = content;\n  return relation;\n};\n\n\n\n/*\n * removing methods\n */\n\n/**\n * Remove a node from the Network\n * @param {Node} node The node to remove.\n */\nNetwork.prototype.removeNode = function(node) {\n  this.removeNodeRelations(node);\n  this.nodeList.removeNode(node);\n};\n\n/**\n * Remove all Relations connected to the node from the Network.\n * @param {Node} node Node who's relations will be removed.\n */\nNetwork.prototype.removeNodeRelations = function(node) {\n  for(var i = 0; node.relationList[i] != null; i++) {\n    this.removeRelation(node.relationList[i]);\n    i--;\n  }\n};\n\n/**\n * Remove all Nodes from the Network.\n */\nNetwork.prototype.removeNodes = function() {\n  this.nodeList.deleteNodes();\n  this.relationList.deleteNodes();\n};\n\nNetwork.prototype.removeRelation = function(relation) {\n  this.relationList.removeElement(relation);\n  relation.node0.nodeList.removeNode(relation.node1);\n  relation.node0.relationList.removeRelation(relation);\n  relation.node0.toNodeList.removeNode(relation.node1);\n  relation.node0.toRelationList.removeRelation(relation);\n  relation.node1.nodeList.removeNode(relation.node0);\n  relation.node1.relationList.removeRelation(relation);\n  relation.node1.fromNodeList.removeNode(relation.node0);\n  relation.node1.fromRelationList.removeRelation(relation);\n};\n\n/**\n * Transformative method, removes nodes without a minimal number of connections\n * @param  {Number} minDegree minimal degree\n * @return {Number} number of nodes removed\n * tags:transform\n */\nNetwork.prototype.removeIsolatedNodes = function(minDegree) {\n  var i;\n  var nRemoved = 0;\n  minDegree = minDegree == null ? 1 : minDegree;\n\n  for(i = 0; this.nodeList[i] != null; i++) {\n    if(this.nodeList[i].getDegree() < minDegree) {\n      this.nodeList[i]._toRemove = true;\n    }\n  }\n\n  for(i = 0; this.nodeList[i] != null; i++) {\n    if(this.nodeList[i]._toRemove) {\n      this.removeNode(this.nodeList[i]);\n      nRemoved++;\n      i--;\n    }\n  }\n\n  return nRemoved;\n};\n\n\n/**\n * Clones the network\n * \n * @param  {StringList} nodePropertiesNames list of preoperties names to be copied from old nodes into new nodes\n * @param  {StringList} relationPropertiesNames\n * \n * @param  {String} idsSubfix optional sufix to be added to ids\n * @param  {String} namesSubfix optional sufix to be added to names\n * @return {Networked} network with exact structure than original\n * tags:\n */\nNetwork.prototype.clone = function(nodePropertiesNames, relationPropertiesNames, idsSubfix, namesSubfix) {\n  var newNetwork = new Network();\n  var newNode, newRelation;\n  var i;\n\n  idsSubfix = idsSubfix == null ? '' : String(idsSubfix);\n  namesSubfix = namesSubfix == null ? '' : String(namesSubfix);\n\n  this.nodeList.forEach(function(node) {\n    newNode = new Node(idsSubfix + node.id, namesSubfix + node.name);\n    if(idsSubfix != '') newNode.basicId = node.id;\n    if(namesSubfix != '') newNode.basicName = node.name;\n    if(nodePropertiesNames) {\n      nodePropertiesNames.forEach(function(propName) {\n        if(node[propName] != null) newNode[propName] = node[propName];\n      });\n    }\n    newNetwork.addNode(newNode);\n  });\n\n  this.relationList.forEach(function(relation) {\n    newRelation = new Relation(idsSubfix + relation.id, namesSubfix + relation.name, newNetwork.nodeList.getNodeById(idsSubfix + relation.node0.id), newNetwork.nodeList.getNodeById(idsSubfix + relation.node1.id));\n    if(idsSubfix != '') newRelation.basicId = relation.id;\n    if(namesSubfix != '') newRelation.basicName = relation.name;\n    if(relationPropertiesNames) {\n      relationPropertiesNames.forEach(function(propName) {\n        if(relation[propName] != null) newRelation[propName] = relation[propName];\n      });\n    }\n    newNetwork.addRelation(newRelation);\n  });\n\n  return newNetwork;\n};\n\n\nNetwork.prototype.getReport = function() {\n  return \"network contains \" + this.nodeList.length + \" nodes and \" + this.relationList.length + \" relations\";\n};\n\nNetwork.prototype.destroy = function() {\n  delete this.type;\n  this.nodeList.destroy();\n  this.relationList.destroy();\n  delete this.nodeList;\n  delete this.relationList;\n};\n","import StringList from \"src/dataStructures/strings/StringList\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\nimport Table from \"src/dataStructures/lists/Table\";\n\n/**\n * @classdesc Serializes and deserializes {@link Network|Networks} using into\n * a number of text based formats.\n *\n * @namespace\n * @category networks\n */\nfunction NetworkEncodings() {}\nexport default NetworkEncodings;\n\n\n//////////////NoteWork\n\nNetworkEncodings.nodeNameSeparators = ['|', ':', ' is ', ' are ', '.', ','];\n\n/**\n * Converts a String in NoteWork format into a network\n *\n * @param  {String} code\n * @return {Network}\n * tags:decoding\n */\nNetworkEncodings.decodeNoteWork = function(code) {\n  if(code == null) return;\n  if(code == \"\") return new Network();\n\n  console.log('\\n\\n*************////////// decodeNoteWork //////////*************');\n  //code = \"\\n\"+code;\n\n  var i, j;\n  var paragraph, line, simpleLine;\n  var id, id2;\n  var name;\n  var index, index2, minIndex;\n  var lines;\n  var node, otherNode;\n  var supNode = null;\n  var relation;\n  var prevLine;\n  var sep;\n  var colorLinesRelations = []; //for relations\n  var colorLinesGroups = [];\n  var colorSegments = [];\n  var linesInfo = [];\n  var simpleLine;\n  var regex;\n  var iEnd;\n  var propertyName;\n  var propertyValue;\n  var network = new Network();\n  var paragraphs = new StringList();\n  var content;\n\n  network.nodesPropertiesNames = new StringList();\n  network.relationsPropertiesNames = new StringList();\n\n  lines = code.split(/\\n/g);\n  lines.forEach(function(line, i) {\n    lines[i] = line.trim();\n  });\n\n  code = lines.join('\\n');\n\n\n  var nLineParagraph = 0;\n  while(code.charAt(0) == '\\n') {\n    code = code.substr(1);\n    nLineParagraph++;\n  }\n\n\n  var left = code;\n\n  index = left.search(/\\n\\n./g);\n\n  while(index != -1) {\n    paragraphs.push(left.substr(0, index));\n    left = left.substr(index + 2);\n    index = left.search(/\\n\\n./g);\n  }\n\n  paragraphs.push(left);\n\n  var firstLine;\n\n\n  paragraphs.forEach(function(paragraph, i) {\n\n    if(paragraph.indexOf('\\n') == -1) {\n      line = paragraph;\n      lines = null;\n    } else {\n      lines = paragraph.split(/\\n/g);\n      line = lines[0];\n    }\n\n    firstLine = line;\n\n    //console.log('firstLine: ['+firstLine+']');\n\n    if(line == '\\n' || line == '' || line == ' ' || line == '  ') { //use regex here\n\n    } else if(line.indexOf('//') == 0) {\n\n      if(colorSegments[nLineParagraph] == null) colorSegments[nLineParagraph] = [];\n\n      colorSegments[nLineParagraph].push({\n        type: 'comment',\n        iStart: 0,\n        iEnd: line.length\n      });\n\n    } else if(line == \"relations colors:\" || line == \"groups colors:\" || line == \"categories colors:\") { //line.indexOf(':')!=-1 && ColorOperators.colorStringToRGB(line.split(':')[1])!=null){ // color in relations or groups\n      // colorLinesRelations.push(line);\n\n      // if(colorSegments[nLineParagraph]==null) colorSegments[nLineParagraph]=[];\n\n      // colorSegments[nLineParagraph].push({\n      // \ttype:'relation_color',\n      // \tiStart:0,\n      // \tiEnd:line.length\n      // });\n\n      if(lines) {\n        lines.slice(1).forEach(function(line, i) {\n\n          index = line.indexOf(':');\n          if(firstLine == \"relations colors:\" && index != -1 && ColorOperators.colorStringToRGB(line.split(':')[1]) != null) {\n            //console.log('  more colors!');\n\n            colorLinesRelations.push(line);\n\n            if(colorSegments[nLineParagraph + i] == null) colorSegments[nLineParagraph + i] = [];\n\n            colorSegments[nLineParagraph + i].push({\n              type: 'relation_color',\n              iStart: 0,\n              iEnd: line.length\n            });\n\n          }\n\n          if((firstLine == \"groups colors:\" || firstLine == \"categories colors:\") && index != -1 && ColorOperators.colorStringToRGB(line.split(':')[1]) != null) {\n            //console.log(line)\n            //console.log('  color to group!');\n\n            colorLinesGroups.push(line);\n\n            if(colorSegments[nLineParagraph + i] == null) colorSegments[nLineParagraph + i] = [];\n\n            colorSegments[nLineParagraph + i].push({\n              type: 'relation_color',\n              iStart: 0,\n              iEnd: line.length\n            });\n\n          }\n        });\n      }\n\n    } else { //node\n\n      minIndex = 99999999;\n\n      index = line.indexOf(NetworkEncodings.nodeNameSeparators[0]);\n\n      if(index != -1) {\n        minIndex = index;\n        sep = NetworkEncodings.nodeNameSeparators[0];\n      }\n\n      j = 1;\n\n      while(j < NetworkEncodings.nodeNameSeparators.length) {\n        index = line.indexOf(NetworkEncodings.nodeNameSeparators[j]);\n        if(index != -1) {\n          minIndex = Math.min(index, minIndex);\n          sep = NetworkEncodings.nodeNameSeparators[j];\n        }\n        j++;\n      }\n\n\n      index = minIndex == 99999999 ? -1 : minIndex;\n\n      name = index == -1 ? line : line.substr(0, index);\n      name = name.trim();\n\n      if(name != \"\") {\n        id = NetworkEncodings._simplifyForNoteWork(name);\n\n        node = network.nodeList.getNodeById(id);\n\n        iEnd = index == -1 ? line.length : index;\n\n        if(node == null) {\n\n          node = new Node(id, name);\n          node._nLine = nLineParagraph;\n          network.addNode(node);\n          node.content = index != -1 ? line.substr(index + sep.length).trim() : \"\";\n\n          node._lines = lines ? lines.slice(1) : new StringList();\n\n          node.position = network.nodeList.length - 1;\n\n          if(colorSegments[nLineParagraph] == null) colorSegments[nLineParagraph] = [];\n\n          colorSegments[nLineParagraph].push({\n            type: 'node_name',\n            iStart: 0,\n            iEnd: iEnd\n          });\n\n        } else {\n          if(lines != null) node._lines = node._lines.concat(lines.slice(1));\n\n          node.content += index != -1 ? (\" | \" + line.substr(index + sep.length).trim()) : \"\";\n\n          if(colorSegments[nLineParagraph] == null) colorSegments[nLineParagraph] = [];\n\n          colorSegments[nLineParagraph].push({\n            type: 'node_name_repeated',\n            iStart: 0,\n            iEnd: iEnd\n          });\n        }\n      } else {\n\n      }\n    }\n\n    nLineParagraph += (lines ? lines.length : 1) + 1;\n  });\n\n\n  //find equalities (synonyms)\n\n  var foundEquivalences = true;\n\n  while(foundEquivalences) {\n    foundEquivalences = false;\n\n    loop: for(i = 0; network.nodeList[i] != null; i++) {\n      node = network.nodeList[i];\n\n      loop2: for(j = 0; node._lines[j] != null; j++) {\n        line = node._lines[j];\n\n        if(line.indexOf('=') == 0) {\n\n          id2 = NetworkEncodings._simplifyForNoteWork(line.substr(1));\n          otherNode = network.nodeList.getNodeById(id2);\n\n          if(otherNode && node != otherNode) {\n\n            foundEquivalences = true;\n\n            node._lines = otherNode._lines.concat(otherNode._lines);\n\n            network.nodeList.removeNode(otherNode);\n            network.nodeList.ids[otherNode.id] = node;\n\n            break loop;\n            break loop2;\n          } else {\n            network.nodeList.ids[id2] = otherNode;\n          }\n\n          if(!node._otherIds) node._otherIds = [];\n          node._otherIds.push(id2);\n        }\n      }\n    }\n  }\n\n\n  //build relations and nodes properties\n\n  network.nodeList.forEach(function(node) {\n\n    nLineParagraph = node._nLine;\n\n    //console.log('node.nLineWeight', node.nLineWeight);\n\n    node._lines.forEach(function(line, i) {\n\n      if(line.indexOf('=') != -1) {\n\n      } else if(line.indexOf(':') > 0) {\n\n        simpleLine = line.trim();\n\n        propertyName = removeAccentsAndDiacritics(simpleLine.split(':')[0]).replace(/\\s/g, \"_\");\n\n        propertyValue = line.split(':')[1].trim();\n        if(propertyValue == String(Number(propertyValue))) propertyValue = Number(propertyValue);\n\n        if(propertyValue != null) {\n          node[propertyName] = propertyValue;\n          if(network.nodesPropertiesNames.indexOf(propertyName) == -1) network.nodesPropertiesNames.push(propertyName);\n        }\n\n      } else {\n        simpleLine = line;\n\n        network.nodeList.forEach(function(otherNode) {\n          regex = NetworkEncodings._regexWordForNoteWork(otherNode.id);\n          index = simpleLine.search(regex);\n\n          if(index == -1 && otherNode._otherIds) {\n            for(j = 0; otherNode._otherIds[j] != null; j++) {\n              regex = NetworkEncodings._regexWordForNoteWork(otherNode._otherIds[j]);\n              index = simpleLine.search(regex);\n              if(index != -1) break;\n            }\n          }\n\n          if(index != -1) {\n            iEnd = index + simpleLine.substr(index).match(regex)[0].length;\n\n            relation = network.relationList.getFirstRelationBetweenNodes(node, otherNode, true);\n\n\n            if(relation != null) {\n\n              content = relation.node0.name + \" \" + line;\n\n              relation.content += \" | \" + content;\n\n              if(colorSegments[nLineParagraph + i + 1] == null) colorSegments[nLineParagraph + i + 1] = [];\n\n              colorSegments[nLineParagraph + i + 1].push({\n                type: 'node_name_in_repeated_relation',\n                iStart: index,\n                iEnd: iEnd\n              });\n\n            } else {\n              relation = network.relationList.getFirstRelationBetweenNodes(otherNode, node, true);\n\n              if(relation == null || relation.content != content) {\n\n                var relationName = line;\n\n                var regex = NetworkEncodings._regexWordForNoteWork(node.id);\n                index = relationName.search(regex);\n\n                if(index != -1) {\n                  relationName = relationName.substr(index);\n                  relationName = relationName.replace(regex, \"\").trim();\n                }\n\n                //console.log(node.id, \"*\", line, \"*\", index, \"*\", line.substr(index));\n\n                //line = line.replace(regex, \"\").trim();\n\n                regex = NetworkEncodings._regexWordForNoteWork(otherNode.id);\n                index = relationName.search(regex);\n                relationName = \"… \" + relationName.substr(0, index).trim() + \" …\";\n\n                id = line;\n                relation = new Relation(line, relationName, node, otherNode);\n\n                content = relation.node0.name + \" \" + line;\n\n                relation.content = content; //.substr(0,index);\n                network.addRelation(relation);\n\n                if(colorSegments[nLineParagraph + i + 1] == null) colorSegments[nLineParagraph + i + 1] = [];\n\n                colorSegments[nLineParagraph + i + 1].push({\n                  type: 'node_name_in_relation',\n                  iStart: index,\n                  iEnd: iEnd\n                });\n\n              }\n            }\n          }\n        });\n      }\n    });\n\n    node.positionWeight = Math.pow(network.nodeList.length - node.position - 1 / network.nodeList.length, 2);\n    node.combinedWeight = node.positionWeight + node.nodeList.length * 0.1;\n\n  });\n\n\n  //colors in relations and groups\n\n  colorLinesRelations.forEach(function(line) {\n    index = line.indexOf(':');\n    var texts = line.substr(0, index).split(',');\n    texts.forEach(function(text) {\n      var color = line.substr(index + 1);\n      network.relationList.forEach(function(relation) {\n        if(relation.name.indexOf(text) != -1) relation.color = color;\n      });\n    });\n  });\n\n  colorLinesGroups.forEach(function(line) {\n    index = line.indexOf(':');\n    var texts = line.substr(0, index).split(',');\n    texts.forEach(function(text) {\n      var color = line.substr(index + 1);\n      network.nodeList.forEach(function(node) {\n        if(node.group == text) node.color = color;\n        if(node.category == text) node.color = color;\n      });\n    });\n  });\n\n  network.colorSegments = colorSegments;\n\n  return network;\n};\n\n/**\n * @ignore\n */\nNetworkEncodings._simplifyForNoteWork = function(name) {\n  name = name.toLowerCase();\n  if(name.substr(name.length - 2) == 'es') {\n    name = name.substr(0, name.length - 1);\n  } else if(name.charAt(name.length - 1) == 's') name = name.substr(0, name.length - 1);\n  return name.trim();\n};\n\n/**\n * _regexWordForNoteWork\n *\n * @param word\n * @param global\n * @return {undefined}\n * @ignore\n */\nNetworkEncodings._regexWordForNoteWork = function(word, global) {\n  global = global == null ? true : global;\n  try {\n    return new RegExp(\"(\\\\b)(\" + word + \"|\" + word + \"s|\" + word + \"es)(\\\\b)\", global ? \"gi\" : \"i\");\n  } catch(err) {\n    return null;\n  }\n};\n\n/**\n * Encodes a network into NoteWork notes.\n *\n * @param  {Network} network Network to encode.\n * @param  {String} nodeContentSeparator Separator between node name and content. Uses comma if not defined.\n * @param  {StringList} nodesPropertyNames Node properties to be encoded.\n * If not defined, no Node properties are encoded.\n * @param  {StringList} relationsPropertyNames Relations properties to be encoded.\n * If not defined, no Relation properties are encoded.\n * @return {String} NoteWork based representation of Network.\n * tags:encoding\n */\nNetworkEncodings.encodeNoteWork = function(network, nodeContentSeparator, nodesPropertyNames, relationsPropertyNames) {\n  if(network == null) return;\n\n  var node, relation, other;\n  var propName;\n  var code = \"\";\n  var simpNodeName;\n  var regex, lineRelation;\n\n  var codedRelationsContents;\n\n  nodeContentSeparator = nodeContentSeparator || ', ';\n  nodesPropertyNames = nodesPropertyNames || [];\n  relationsPropertyNames = relationsPropertyNames || [];\n\n  network.nodeList.forEach(function(node) {\n    code += node.name;\n    if(node.content && node.content != \"\") code += nodeContentSeparator + node.content;\n    code += \"\\n\";\n\n    nodesPropertyNames.forEach(function(propName) {\n      if(node[propName] != null) code += propName + \":\" + String(node[propName]) + \"\\n\";\n    });\n\n    codedRelationsContents = new StringList();\n\n    node.toRelationList.forEach(function(relation) {\n\n      var content = ((relation.content == null ||  relation.content == \"\") && relation.description) ? relation.description : relation.content;\n\n      if(content && content != \"\") {\n        regex = NetworkEncodings._regexWordForNoteWork(relation.node1.name);\n        lineRelation = content + ((regex != null && content.search(regex) == -1) ? (\" \" + relation.node1.name) : \"\");\n      } else {\n        lineRelation = \"connected with \" + relation.node1.name;\n      }\n\n      if(codedRelationsContents.indexOf(lineRelation) == -1) {\n        code += lineRelation;\n        code += \"\\n\";\n        codedRelationsContents.push(lineRelation);\n      }\n\n    });\n\n    code += \"\\n\";\n\n  });\n\n  return code;\n};\n\n\n\n\n\n//////////////GDF\n\n/**\n * Creates Network from a GDF string representation.\n *\n * @param  {String} gdfCode GDF serialized Network representation.\n * @return {Network}\n * tags:decoder\n */\nNetworkEncodings.decodeGDF = function(gdfCode) {\n  if(gdfCode == null || gdfCode == \"\") return;\n\n  var network = new Network();\n  var lines = gdfCode.split(\"\\n\"); //TODO: split by ENTERS OUTSIDE QUOTEMARKS\n  if(lines.length == 0) return null;\n  var line;\n  var i;\n  var j;\n  var parts;\n\n  var nodesPropertiesNames = lines[0].substr(8).split(\",\");\n\n  var iEdges;\n\n  for(i = 1; lines[i] != null; i++) {\n    line = lines[i];\n    if(line.substr(0, 8) == \"edgedef>\") {\n      iEdges = i + 1;\n      break;\n    }\n    line = NetworkEncodings.replaceChomasInLine(line);\n    parts = line.split(\",\");\n    var node = new Node(String(parts[0]), String(parts[1]));\n    for(j = 0; (nodesPropertiesNames[j] != null && parts[j] != null); j++) {\n      if(nodesPropertiesNames[j] == \"weight\") {\n        node.weight = Number(parts[j]);\n      } else if(nodesPropertiesNames[j] == \"x\") {\n        node.x = Number(parts[j]);\n      } else if(nodesPropertiesNames[j] == \"y\") {\n        node.y = Number(parts[j]);\n      } else {\n        node[nodesPropertiesNames[j]] = parts[j].replace(/\\*CHOMA\\*/g, \",\");\n      }\n    }\n    network.addNode(node);\n  }\n\n  var relationsPropertiesNames = lines[iEdges - 1].substr(8).split(\",\");\n\n  for(i = iEdges; lines[i] != null; i++) {\n    line = lines[i];\n    line = NetworkEncodings.replaceChomasInLine(line);\n    parts = line.split(\",\");\n    if(parts.length >= 2) {\n      var node0 = network.nodeList.getNodeById(String(parts[0]));\n      var node1 = network.nodeList.getNodeById(String(parts[1]));\n      if(node0 == null || node1 == null) {\n        console.log(\"NetworkEncodings.decodeGDF | [!] problems with nodes ids:\", parts[0], parts[1], \"at line\", i);\n      } else {\n        var id = node0.id + \"_\" + node1.id + \"_\" + Math.floor(Math.random() * 999999);\n        var relation = new Relation(id, id, node0, node1);\n        for(j = 2; (relationsPropertiesNames[j] != null && parts[j] != null); j++) {\n          if(relationsPropertiesNames[j] == \"weight\") {\n            relation.weight = Number(parts[j]);\n          } else {\n            relation[relationsPropertiesNames[j]] = parts[j].replace(/\\*CHOMA\\*/g, \",\");\n          }\n        }\n        network.addRelation(relation);\n      }\n    }\n\n  }\n\n  return network;\n};\n\n/**\n * Encodes a network in GDF Format, more info on GDF\n * format can be found from\n * {@link https://gephi.org/users/supported-graph-formats/gml-format/|Gephi}.\n *\n * @param  {Network} network Network to encode.\n * @param  {StringList} nodesPropertiesNames Names of nodes properties to be encoded.\n * @param  {StringList} relationsPropertiesNames Names of relations properties to be encoded\n * @return {String} GDF encoding of Network.\n * tags:encoder\n */\nNetworkEncodings.encodeGDF = function(network, nodesPropertiesNames, relationsPropertiesNames) {\n  if(network == null) return;\n\n  nodesPropertiesNames = nodesPropertiesNames == null ? new StringList() : nodesPropertiesNames;\n  relationsPropertiesNames = relationsPropertiesNames == null ? new StringList() : relationsPropertiesNames;\n\n  var code = \"nodedef>id\" + (nodesPropertiesNames.length > 0 ? \",\" : \"\") + nodesPropertiesNames.join(\",\");\n  var i;\n  var j;\n  var node;\n  for(i = 0; network.nodeList[i] != null; i++) {\n    node = network.nodeList[i];\n    code += \"\\n\" + node.id;\n    for(j = 0; nodesPropertiesNames[j] != null; j++) {\n\n      if(typeof node[nodesPropertiesNames[j]] == 'string') {\n        code += \",\\\"\" + node[nodesPropertiesNames[j]] + \"\\\"\";\n      } else {\n        code += \",\" + node[nodesPropertiesNames[j]];\n      }\n    }\n  }\n\n  code += \"\\nedgedef>id0,id1\" + (relationsPropertiesNames.length > 0 ? \",\" : \"\") + relationsPropertiesNames.join(\",\");\n  var relation;\n  for(i = 0; network.relationList[i] != null; i++) {\n    relation = network.relationList[i];\n    code += \"\\n\" + relation.node0.id + \",\" + relation.node1.id;\n    for(j = 0; relationsPropertiesNames[j] != null; j++) {\n\n      if(typeof relation[relationsPropertiesNames[j]] == 'string') {\n        code += \",\\\"\" + relation[relationsPropertiesNames[j]] + \"\\\"\";\n      } else {\n        code += \",\" + relation[relationsPropertiesNames[j]];\n      }\n    }\n  }\n\n  return code;\n};\n\n\n//////////////GML\n\n/**\n * Decodes a GML file into a new Network.\n *\n * @param  {String} gmlCode GML based representation of Network.\n * @return {Network}\n * tags:decoder\n */\nNetworkEncodings.decodeGML = function(gmlCode) {\n  if(gmlCode == null) return null;\n\n  gmlCode = gmlCode.substr(gmlCode.indexOf(\"[\") + 1);\n\n  var network = new Network();\n\n  var firstEdgeIndex = gmlCode.search(/\\bedge\\b/);\n\n  var nodesPart = gmlCode.substr(0, firstEdgeIndex);\n  var edgesPart = gmlCode.substr(firstEdgeIndex);\n\n  var part = nodesPart;\n\n  var blocks = StringOperators.getParenthesisContents(part, true);\n\n  //console.log('blocks.length', blocks.length);\n\n  var graphicsBlock;\n  var lines;\n  var lineParts;\n\n  var indexG0;\n  var indexG1;\n\n  var node;\n\n  for(var i = 0; blocks[i] != null; i++) {\n    blocks[i] = StringOperators.removeInitialRepeatedCharacter(blocks[i], \"\\n\");\n    blocks[i] = StringOperators.removeInitialRepeatedCharacter(blocks[i], \"\\r\");\n\n    indexG0 = blocks[i].indexOf('graphics');\n    if(indexG0 != -1) {\n      indexG1 = blocks[i].indexOf(']');\n      graphicsBlock = blocks[i].substring(indexG0, indexG1 + 1);\n      blocks[i] = blocks[i].substr(0, indexG0) + blocks[i].substr(indexG1 + 1);\n\n      graphicsBlock = StringOperators.getFirstParenthesisContent(graphicsBlock, true);\n      blocks[i] = blocks[i] + graphicsBlock;\n    }\n\n    lines = blocks[i].split('\\n');\n\n    lines[0] = NetworkEncodings._cleanLineBeginning(lines[0]);\n\n    lineParts = lines[0].split(\" \");\n\n    node = new Node(StringOperators.removeQuotes(lineParts[1]), StringOperators.removeQuotes(lineParts[1]));\n\n    network.addNode(node);\n\n    for(var j = 1; lines[j] != null; j++) {\n      lines[j] = NetworkEncodings._cleanLineBeginning(lines[j]);\n      lines[j] = NetworkEncodings._replaceSpacesInLine(lines[j]);\n      if(lines[j] != \"\") {\n        lineParts = lines[j].split(\" \");\n        if(lineParts[0] == 'label') lineParts[0] = 'name';\n        node[lineParts[0]] = (lineParts[1].charAt(0) == \"\\\"\") ? StringOperators.removeQuotes(lineParts[1]).replace(/\\*SPACE\\*/g, \" \") : Number(lineParts[1]);\n      }\n    }\n  }\n\n  part = edgesPart;\n  blocks = StringOperators.getParenthesisContents(part, true);\n\n  var id0;\n  var id1;\n  var node0;\n  var node1;\n  var relation;\n  var nodes = network.nodeList;\n\n\n  for(i = 0; blocks[i] != null; i++) {\n    blocks[i] = StringOperators.removeInitialRepeatedCharacter(blocks[i], \"\\n\");\n    blocks[i] = StringOperators.removeInitialRepeatedCharacter(blocks[i], \"\\r\");\n\n    lines = blocks[i].split('\\n');\n\n    id0 = null;\n    id1 = null;\n    relation = null;\n\n    for(j = 0; lines[j] != null; j++) {\n      lines[j] = NetworkEncodings._cleanLineBeginning(lines[j]);\n      if(lines[j] != \"\") {\n        lineParts = lines[j].split(\" \");\n        if(lineParts[0] == 'source') id0 = StringOperators.removeQuotes(lineParts[1]);\n        if(lineParts[0] == 'target') id1 = StringOperators.removeQuotes(lineParts[1]);\n\n        if(relation == null) {\n          if(id0 != null && id1 != null) {\n            node0 = nodes.getNodeById(id0);\n            node1 = nodes.getNodeById(id1);\n            if(node0 != null && node1 != null) {\n              relation = new Relation(id0 + \" \" + id1, '', node0, node1);\n              network.addRelation(relation);\n            }\n          }\n        } else {\n          if(lineParts[0] == 'value') lineParts[0] = 'weight';\n          relation[lineParts[0]] = (lineParts[1].charAt(0) == \"\\\"\") ? StringOperators.removeQuotes(lineParts[1]) : Number(lineParts[1]);\n        }\n      }\n\n    }\n\n  }\n\n  return network;\n};\n\n/**\n * _cleanLineBeginning\n *\n * @param string\n * @ignore\n */\nNetworkEncodings._cleanLineBeginning = function(string) {\n  string = StringOperators.removeInitialRepeatedCharacter(string, \"\\n\");\n  string = StringOperators.removeInitialRepeatedCharacter(string, \"\\r\");\n  string = StringOperators.removeInitialRepeatedCharacter(string, \" \");\n  string = StringOperators.removeInitialRepeatedCharacter(string, \"\t\");\n  return string;\n};\n\n\n/**\n * Encodes a network into GDF format.\n *\n * @param  {Network} network The Network to encode.\n *\n * @param  {StringList} nodesPropertiesNames Names of Node properties to encode.\n * @param  {StringList} relationsPropertiesNames Names of Relation properties to encode.\n * @param {Boolean} idsAsInts If true, then the index of the Node is used as an ID.\n * GDF strong specification requires ids for nodes being int numbers.\n * @return {String} GDF string.\n * tags:encoder\n */\nNetworkEncodings.encodeGML = function(network, nodesPropertiesNames, relationsPropertiesNames, idsAsInts) {\n  if(network == null) return;\n\n  idsAsInts = idsAsInts == null ? true : idsAsInts;\n\n  nodesPropertiesNames = nodesPropertiesNames == null ? new StringList() : nodesPropertiesNames;\n  relationsPropertiesNames = relationsPropertiesNames == null ? new StringList() : relationsPropertiesNames;\n\n  var code = \"graph\\n[\";\n  var ident = \"\t\";\n  var i;\n  var j;\n  var node;\n  var isString;\n  var value;\n  for(i = 0; network.nodeList[i] != null; i++) {\n    node = network.nodeList[i];\n    code += \"\\n\" + ident + \"node\\n\" + ident + \"[\";\n    ident = \"\t\t\";\n    if(idsAsInts) {\n      code += \"\\n\" + ident + \"id \" + i;\n    } else {\n      code += \"\\n\" + ident + \"id \\\"\" + node.id + \"\\\"\";\n    }\n    if(node.name != '') code += \"\\n\" + ident + \"label \\\"\" + node.name + \"\\\"\";\n    for(j = 0; nodesPropertiesNames[j] != null; j++) {\n      value = node[nodesPropertiesNames[j]];\n      if(value == null) continue;\n      if(value.getMonth) value = DateOperators.dateToString(value);\n      isString = (typeof value == 'string');\n      if(isString) value = value.replace(/\\n/g, \"\\\\n\").replace(/\\\"/g, \"'\");\n      code += \"\\n\" + ident + nodesPropertiesNames[j] + \" \" + (isString ? \"\\\"\" + value + \"\\\"\" : value);\n    }\n    ident = \"\t\";\n    code += \"\\n\" + ident + \"]\";\n  }\n\n  var relation;\n  for(i = 0; network.relationList[i] != null; i++) {\n    relation = network.relationList[i];\n    code += \"\\n\" + ident + \"edge\\n\" + ident + \"[\";\n    ident = \"\t\t\";\n    if(idsAsInts) {\n      code += \"\\n\" + ident + \"source \" + network.nodeList.indexOf(relation.node0);\n      code += \"\\n\" + ident + \"target \" + network.nodeList.indexOf(relation.node1);\n    } else {\n      code += \"\\n\" + ident + \"source \\\"\" + relation.node0.id + \"\\\"\";\n      code += \"\\n\" + ident + \"target \\\"\" + relation.node1.id + \"\\\"\";\n    }\n    for(j = 0; relationsPropertiesNames[j] != null; j++) {\n      value = relation[relationsPropertiesNames[j]];\n      if(value == null) continue;\n      if(value.getMonth) value = DateOperators.dateToString(value);\n      isString = (typeof value == 'string');\n      if(isString) value = value.replace(/\\n/g, \"\\\\n\").replace(/\\\"|“|”/g, \"'\");\n      code += \"\\n\" + ident + relationsPropertiesNames[j] + \" \" + (isString ? \"\\\"\" + value + \"\\\"\" : value);\n    }\n    ident = \"\t\";\n    code += \"\\n\" + ident + \"]\";\n  }\n\n  code += \"\\n]\";\n  return code;\n};\n\n\n\n\n\n//////////////SYM\n\n/**\n * decodeSYM\n *\n * @param symCode\n * @return {Network}\n */\nNetworkEncodings.decodeSYM = function(symCode) {\n  //console.log(\"/////// decodeSYM\\n\"+symCode+\"\\n/////////\");\n  var i;\n  var j;\n\n  var lines = StringOperators.splitByEnter(symCode);\n  lines = lines == null ? [] : lines;\n\n  var objectPattern = /((?:NODE|RELATION)|GROUP)\\s*([A-Za-z0-9_,\\s]*)/;\n\n  var network = new Network();\n  var groups = new Table();\n  var name;\n  var id;\n  var node;\n  var node1;\n  var relation;\n  var group;\n  var groupName;\n  var parts;\n  var propName;\n  var propCont;\n\n  var nodePropertiesNames = [];\n  var relationPropertiesNames = [];\n  var groupsPropertiesNames = [];\n\n  for(i = 0; lines[i] != null; i++) {\n    var bits = objectPattern.exec(lines[i]);\n    if(bits != null) {\n      switch(bits[1]) {\n        case \"NODE\":\n          id = bits[2];\n          name = lines[i + 1].substr(0, 5) == \"name:\" ? lines[i + 1].substr(5).trim() : \"\";\n          name = name.replace(/\\\\n/g, '\\n').replace(/\\\\'/g, \"'\");\n          node = new Node(id, name);\n          network.addNode(node);\n          j = i + 1;\n          while(j < lines.length && lines[j].indexOf(\":\") != -1) {\n            parts = lines[j].split(\":\");\n            propName = parts[0];\n            propCont = parts.slice(1).join(\":\");\n            if(propName != \"name\") {\n              propCont = propCont.trim();\n              node[propName] = String(Number(propCont)) == propCont ? Number(propCont) : propCont;\n              if(typeof node[propName] == \"string\") node[propName] = node[propName].replace(/\\\\n/g, '\\n').replace(/\\\\'/g, \"'\");\n              if(nodePropertiesNames.indexOf(propName) == -1) nodePropertiesNames.push(propName);\n            }\n            j++;\n          }\n          if(node.color != null) {\n            if(/.+,.+,.+/.test(node.color)) node.color = 'rgb(' + node.color + ')';\n          }\n          if(node.group != null) {\n            group = groups.getFirstElementByPropertyValue(\"name\", node.group);\n            if(group == null) {\n              console.log(\"NODES new group:[\" + node.group + \"]\");\n              group = new NodeList();\n              group.name = node.group;\n              group.name = group.name.replace(/\\\\n/g, '\\n').replace(/\\\\'/g, \"'\");\n              groups.push(group);\n            }\n            group.addNode(node);\n            //node.group = group;\n          }\n          break;\n        case \"RELATION\":\n          var ids = bits[2].replace(/\\s/g, \"\").split(\",\");\n          //var ids = bits[2].split(\",\");\n          node = network.nodeList.getNodeById(ids[0]);\n          node1 = network.nodeList.getNodeById(ids[1]);\n          if(node != null && node1 != null) {\n            relation = new Relation(node.id + \"_\" + node1.id, node.id + \"_\" + node1.id, node, node1);\n            network.addRelation(relation);\n            j = i + 1;\n            while(j < lines.length && lines[j].indexOf(\":\") != -1) {\n              parts = lines[j].split(\":\");\n              propName = parts[0];\n              propCont = parts.slice(1).join(\":\").trim();\n              if(propName != \"name\") {\n                propCont = propCont.trim();\n                relation[propName] = String(Number(propCont)) == propCont ? Number(propCont) : propCont;\n                if(typeof relation[propName] == \"string\") relation[propName] = relation[propName].replace(/\\\\n/g, '\\n').replace(/\\\\'/g, \"'\");\n                if(relationPropertiesNames.indexOf(propName) == -1) relationPropertiesNames.push(propName);\n              }\n              j++;\n            }\n          }\n          if(relation != null && relation.color != null) {\n            relation.color = 'rgb(' + relation.color + ')';\n          }\n          break;\n        case \"GROUP\":\n          groupName = lines[i].substr(5).trim();\n\n          group = groups.getFirstElementByPropertyValue(\"name\", groupName);\n          if(group == null) {\n            group = new NodeList();\n            group.name = groupName;\n            groups.push(group);\n          }\n          j = i + 1;\n          while(j < lines.length && lines[j].indexOf(\":\") != -1) {\n            parts = lines[j].split(\":\");\n            if(parts[0] != \"name\") {\n              parts[1] = parts[1].trim();\n              group[parts[0]] = String(Number(parts[1])) == parts[1] ? Number(parts[1]) : parts[1];\n              if(groupsPropertiesNames.indexOf(parts[0]) == -1) groupsPropertiesNames.push(parts[0]);\n            }\n            j++;\n          }\n\n          if(/.+,.+,.+/.test(group.color)) group.color = 'rgb(' + group.color + ')';\n\n          break;\n      }\n    }\n  }\n\n  for(i = 0; groups[i] != null; i++) {\n    group = groups[i];\n    if(group.color == null) group.color = CATEGORICAL_COLORS[i % CATEGORICAL_COLORS.length];\n    for(j = 0; group[j] != null; j++) {\n      node = group[j];\n      if(node.color == null) node.color = group.color;\n    }\n  }\n\n  network.groups = groups;\n\n\n\n  network.nodePropertiesNames = nodePropertiesNames;\n  network.relationPropertiesNames = relationPropertiesNames;\n  network.groupsPropertiesNames = groupsPropertiesNames;\n\n  return network;\n};\n\n/**\n * encodeSYM\n *\n * @param network\n * @param groups\n * @param nodesPropertiesNames\n * @param relationsPropertiesNames\n * @param groupsPropertiesNames\n * @return {String}\n */\nNetworkEncodings.encodeSYM = function(network, groups, nodesPropertiesNames, relationsPropertiesNames, groupsPropertiesNames) {\n  nodesPropertiesNames = nodesPropertiesNames == null ? new StringList() : nodesPropertiesNames;\n  relationsPropertiesNames = relationsPropertiesNames == null ? new StringList() : relationsPropertiesNames;\n\n  var code = \"\";\n  var i;\n  var j;\n  var node;\n  var propertyName;\n  for(i = 0; network.nodeList[i] != null; i++) {\n    node = network.nodeList[i];\n    code += (i == 0 ? \"\" : \"\\n\\n\") + \"NODE \" + node.id;\n    if(node.name != \"\") code += \"\\nname:\" + (node.name).replace(/\\n/g, \"\\\\n\");\n    for(j = 0; nodesPropertiesNames[j] != null; j++) {\n      propertyName = nodesPropertiesNames[j];\n      if(node[propertyName] != null) code += \"\\n\" + propertyName + \":\" + _processProperty(propertyName, node[propertyName]);\n    }\n  }\n\n  var relation;\n  for(i = 0; network.relationList[i] != null; i++) {\n    relation = network.relationList[i];\n    code += \"\\n\\nRELATION \" + relation.node0.id + \", \" + relation.node1.id;\n    for(j = 0; relationsPropertiesNames[j] != null; j++) {\n      propertyName = relationsPropertiesNames[j];\n      if(relation[propertyName] != null) code += \"\\n\" + propertyName + \":\" + _processProperty(propertyName, relation[propertyName]);\n    }\n  }\n\n  if(groups == null) return code;\n\n  var group;\n  for(i = 0; groups[i] != null; i++) {\n    group = groups[i];\n    code += \"\\n\\nGROUP \" + group.name;\n    for(j = 0; groupsPropertiesNames[j] != null; j++) {\n      propertyName = groupsPropertiesNames[j];\n      if(group[propertyName] != null) code += \"\\n\" + propertyName + \":\" + _processProperty(propertyName, group[propertyName]);\n    }\n  }\n\n  //console.log(\"/////// encodeSYM\\n\"+code+\"\\n/////////\");\n\n  return code;\n};\n\nfunction _processProperty(propName, propValue) { //TODO: use this in other encoders\n  switch(propName) {\n    case \"color\":\n      if(propValue.substr(0, 3) == \"rgb\") {\n        var rgb = ColorOperators.colorStringToRGB(propValue);\n        return rgb.join(',');\n      }\n      return propValue;\n      break;\n  }\n  propValue = String(propValue).replace(/\\n/g, \"\\\\n\");\n  return propValue;\n};\n\n\n\n\n\n/////////////////\n\n//Also used by CSVToTable\n\n/**\n * replaceChomasInLine\n *\n * @param line\n * @return {undefined}\n * @ignore\n */\nNetworkEncodings.replaceChomasInLine = function(line) {\n  var quoteBlocks = line.split(\"\\\"\");\n  if(quoteBlocks.length < 2) return line;\n  var insideQuote;\n  var i;\n  for(i = 0; quoteBlocks[i] != null; i++) {\n    insideQuote = i * 0.5 != Math.floor(i * 0.5);\n    if(insideQuote) {\n      quoteBlocks[i] = quoteBlocks[i].replace(/,/g, \"*CHOMA*\");\n    }\n  }\n  line = StringList.fromArray(quoteBlocks).getConcatenated(\"\");\n  return line;\n};\n\n/**\n * _replaceSpacesInLine\n *\n * @param line\n * @return {undefined}\n * @ignore\n */\nNetworkEncodings._replaceSpacesInLine = function(line) {\n  var quoteBlocks = line.split(\"\\\"\");\n  if(quoteBlocks.length < 2) return line;\n  var insideQuote;\n  var i;\n  for(i = 0; quoteBlocks[i] != null; i++) {\n    insideQuote = i * 0.5 != Math.floor(i * 0.5);\n    if(insideQuote) {\n      quoteBlocks[i] = quoteBlocks[i].replace(/ /g, \"*SPACE*\");\n    }\n  }\n  line = StringList.fromArray(quoteBlocks).getConcatenated(\"\\\"\");\n  return line;\n};\n","import List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport NetworkEncodings from \"src/operators/structures/NetworkEncodings\";\nimport ListGenerators from \"src/operators/lists/ListGenerators\";\n\nfunction TableEncodings() {}\nexport default TableEncodings;\n\nTableEncodings.ENTER = String.fromCharCode(13);\nTableEncodings.ENTER2 = String.fromCharCode(10);\nTableEncodings.ENTER3 = String.fromCharCode(8232);\n\nTableEncodings.SPACE = String.fromCharCode(32);\nTableEncodings.SPACE2 = String.fromCharCode(160);\n\nTableEncodings.TAB = \"\t\";\nTableEncodings.TAB2 = String.fromCharCode(9);\n\n\n/**\n * Decode a String in format CSV into a Table\n * @param {String} csv CSV formatted text\n *\n * @param {Boolean} first_row_header first row is header (default: false)\n * @param {String} separator separator character (default: \",\")\n * @param {Object} value_for_nulls Object to be placed instead of null values\n * @param {Boolean} listsToStringList if true (default value), converts lists that are not StringLists, NumberLists… (probably because they contain strings and numbers) into StringLists\n * @return {Table} resulting Table\n * tags:decoder\n */\nTableEncodings.CSVtoTable = function(csvString, firstRowIsHeader, separator, valueForNulls, listsToStringList) {\n  if(csvString==null) return null;\n  valueForNulls = valueForNulls == null ? 0 : valueForNulls;\n  listsToStringList = listsToStringList==null?true:listsToStringList;\n\n  var i, j;\n  var _firstRowIsHeader = firstRowIsHeader == null ? false : firstRowIsHeader;\n\n  if(csvString == null) return null;\n  if(csvString == \"\") return new Table();\n\n  csvString = csvString.replace(/\\$/g, \"\");\n\n  var blocks = csvString.split(\"\\\"\");\n  for(i = 1; blocks[i] != null; i += 2) {\n    blocks[i] = blocks[i].replace(/\\n/g, \"*ENTER*\");\n  }\n  csvString = blocks.join(\"\\\"\"); //TODO: create a general method for replacements inside \"\", apply it to chomas\n\n  var enterChar = TableEncodings.ENTER2;\n  var lines = csvString.split(enterChar);\n  if(lines.length == 1) {\n    enterChar = TableEncodings.ENTER;\n    lines = csvString.split(enterChar);\n    if(lines.length == 1) {\n      enterChar = TableEncodings.ENTER3;\n      lines = csvString.split(enterChar);\n    }\n  }\n\n  var table = new Table();\n  var comaCharacter = separator != undefined ? separator : \",\";\n\n  if(csvString == null || csvString == \"\" || csvString == \" \" || lines.length == 0) return null;\n\n  var startIndex = 0;\n  if(_firstRowIsHeader) {\n    startIndex = 1;\n    var headerContent = lines[0].split(comaCharacter);\n  }\n\n  var element;\n  var cellContent;\n  var numberCandidate;\n  for(i = startIndex; i < lines.length; i++) {\n    if(lines[i].length < 2) continue;\n\n    var cellContents = NetworkEncodings.replaceChomasInLine(lines[i]).split(comaCharacter); //TODO: will be obsolete (see previous TODO)\n\n    for(j = 0; j < cellContents.length; j++) {\n      table[j] = table[j] == null ? new List() : table[j];\n      if(_firstRowIsHeader && i == 1) {\n        table[j].name = ( headerContent[j] == null ? \"\" : TableEncodings._removeQuotes(headerContent[j]) ).trim();\n      }\n      var actualIndex = _firstRowIsHeader ? (i - 1) : i;\n\n      cellContent = cellContents[j].replace(/\\*CHOMA\\*/g, \",\").replace(/\\*ENTER\\*/g, \"\\n\");\n\n      cellContent = cellContent == '' ? valueForNulls : cellContent;\n\n      cellContent = String(cellContent);\n\n      numberCandidate = Number(cellContent.replace(',', '.'));\n\n      element = (numberCandidate || (numberCandidate == 0 && cellContent != '')) ? numberCandidate : cellContent;\n\n      if(typeof element == 'string') element = TableEncodings._removeQuotes(element);\n\n      table[j][actualIndex] = element;\n    }\n  }\n\n  for(i = 0; table[i] != null; i++) {\n    table[i] = table[i].getImproved();\n    if(listsToStringList && table[i].type==\"List\") table[i] = table[i].toStringList();\n  }\n\n  table = table.getImproved();\n\n  return table;\n};\n\nTableEncodings._removeQuotes = function(string) {\n  if(string.length == 0) return string;\n  if((string.charAt(0) == \"\\\"\" || string.charAt(0) == \"'\") && (string.charAt(string.length - 1) == \"\\\"\" || string.charAt(string.length - 1) == \"'\")) string = string.substr(1, string.length - 2);\n  return string;\n};\n\n\n/**\n * Encode a Table into a String in format CSV\n * @param {Table} Table to be enconded\n *\n * @param {String} separator character (default: \",\")\n * @param {Boolean} first row as List names (default: false)\n * @return {String} resulting String in CSV format\n * tags:encoder\n */\nTableEncodings.TableToCSV = function(table, separator, namesAsHeaders) {\n  separator = separator || \",\";\n  var i;\n  var j;\n  var list;\n  var type;\n  var lines = ListGenerators.createListWithSameElement(table[0].length, \"\");\n  var addSeparator;\n  for(i = 0; table[i] != null; i++) {\n    list = table[i];\n    type = list.type;\n    addSeparator = i != table.length - 1;\n    for(j = 0; list[j] != null; j++) {\n      switch(type) {\n        case 'NumberList':\n          lines[j] += list[j];\n          break;\n        default:\n          lines[j] += \"\\\"\" + list[j] + \"\\\"\";\n          break;\n      }\n      if(addSeparator) lines[j] += separator;\n    }\n  }\n\n  var headers = '';\n  if(namesAsHeaders) {\n    for(i = 0; table[i] != null; i++) {\n      list = table[i];\n      headers += \"\\\"\" + list.name + \"\\\"\";\n      if(i != table.length - 1) headers += separator;\n    }\n    headers += '\\n';\n  }\n\n  return headers + lines.getConcatenated(\"\\n\");\n};","/* global console */\n\nimport List from \"src/dataStructures/lists/List\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport TableEncodings from \"src/operators/lists/TableEncodings\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport {\n  instantiate,\n  instantiateWithSameType,\n  TYPES_SHORT_NAMES_DICTIONARY,\n  typeOf\n  } from \"src/tools/utils/code/ClassUtils\";\n//\n\nTable.prototype = new List();\nTable.prototype.constructor = Table;\n\n/**\n * @classdesc A sub-class of {@link List}, Table provides a 2D array-like structure.\n *\n * Each column is stored as its own {@link List}, making it a List of Lists.\n * Cells in the table can be accessed using table[column][row].\n *\n * @description Creates a new Table.\n * Input arguments are treated as the inital column values\n * of the Table.\n * @constructor\n * @category basics\n */\nfunction Table() {\n  var args = [];\n  var i;\n  for(i = 0; i < arguments.length; i++) {\n    args[i] = new List(arguments[i]);\n  }\n\n  var array = List.apply(this, args);\n  array = Table.fromArray(array);\n\n  return array;\n}\nexport default Table;\n\n/**\n * Creates a new Table from an array\n * @param {Number[]} array\n * @return {Table}\n */\nTable.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"Table\";\n  //assign methods to array:\n  result.applyFunction = Table.prototype.applyFunction;\n  result.getRow = Table.prototype.getRow;\n  result.getRows = Table.prototype.getRows;\n  result.getLengths = Table.prototype.getLengths;\n  result.getListLength = Table.prototype.getListLength;\n  result.sliceRows = Table.prototype.sliceRows;\n  result.getSubListsByIndexes = Table.prototype.getSubListsByIndexes;\n  result.getWithoutRow = Table.prototype.getWithoutRow;\n  result.getWithoutRows = Table.prototype.getWithoutRows;\n  result.getTransposed = Table.prototype.getTransposed;\n  result.getListsSortedByList = Table.prototype.getListsSortedByList;\n  result.sortListsByList = Table.prototype.sortListsByList;\n  result.getReport = Table.prototype.getReport;\n  result.clone = Table.prototype.clone;\n  result.print = Table.prototype.print;\n\n  //transformative\n  result.removeRow = Table.prototype.removeRow;\n\n  //overiden\n  result.destroy = Table.prototype.destroy;\n\n  result.isTable = true;\n\n  return result;\n};\n\n/**\n * Executes a given function on all the columns\n * in the Table, returning a new Table with the\n * resulting values.\n * @param {Function} func Function to apply to each\n * column in the table. Columns are {@link List|Lists}.\n * @return {Table} Table of values from applying function.\n */\nTable.prototype.applyFunction = function(func) {\n  //TODO: to be tested!\n  var i;\n  var newTable = new Table();\n\n  newTable.name = this.name;\n\n  for(i = 0; this[i] != null; i++) {\n    newTable[i] = this[i].applyFunction(func);\n  }\n  return newTable.getImproved();\n};\n\n/**\n * Returns a {@link List} with all the elements of a row.\n * @param  {Number} index Index of the row to get.\n * @return {List}\n * tags:filter\n */\nTable.prototype.getRow = function(index) {\n  var list = new List();\n  var i;\n  for(i = 0; i < this.length; i++) {\n    list[i] = this[i][index];\n  }\n  return list.getImproved();\n};\n\n/**\n * Returns the length a column of the Table.\n * @param  {Number} index The Column to return its length.\n * Defaults to 0.\n * @return {Number} Length of column at given index.\n * tags:\n */\nTable.prototype.getListLength = function(index) {\n  return this[index || 0].length;\n};\n\n/**\n * Returns the lengths of all the columns of the Table.\n * @return {NumberList} Lengths of all columns in Table.\n */\nTable.prototype.getLengths = function() {\n  var lengths = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    lengths[i] = this[i].length;\n  }\n  return lengths;\n};\n\n/**\n * Filters a Table by selecting a section of rows, elements with last index included.\n * @param  {Number} startIndex Index of first element in all lists of the table.\n * @param  {Number} endIndex Index of last elements in all lists of the table.\n * @return {Table}\n * tags:filter\n */\nTable.prototype.sliceRows = function(startIndex, endIndex) {\n  endIndex = endIndex == null ? (this[0].length - 1) : endIndex;\n\n  var i;\n  var newTable = new Table();\n  var newList;\n\n  newTable.name = this.name;\n  for(i = 0; this[i] != null; i++) {\n    newList = this[i].getSubList(startIndex, endIndex);\n    newList.name = this[i].name;\n    newTable.push(newList);\n  }\n  return newTable.getImproved();\n};\n\n/**\n * Filters the lists of the table by indexes.\n * @param  {NumberList} indexes\n * @return {Table}\n * tags:filter\n */\nTable.prototype.getSubListsByIndexes = function(indexes) {\n  var newTable = new Table();\n  this.forEach(function(list) {\n    newTable.push(list.getSubListByIndexes(indexes));\n  });\n  return newTable.getImproved();\n};\n\n\n//deprecated\n/**\n * @ignore\n */\nTable.prototype.getRows = function(indexes) {\n  return Table.prototype.getSubListsByIndexes(indexes);\n};\n\n/**\n * Returns a new Table with the row at the given index removed.\n * @param {Number} rowIndex Row to remove\n * @return {Table} New Table.\n */\nTable.prototype.getWithoutRow = function(rowIndex) {\n  var newTable = new Table();\n  newTable.name = this.name;\n  for(var i = 0; this[i] != null; i++) {\n    newTable[i] = List.fromArray(this[i].slice(0, rowIndex).concat(this[i].slice(rowIndex + 1))).getImproved();\n    newTable[i].name = this[i].name;\n  }\n  return newTable.getImproved();\n};\n\n/**\n * Returns a new Table with the rows listed in the given array removed.\n * @param {Number[]} rowsIndexes Array of row indecies to remove.\n * @return {undefined}\n */\nTable.prototype.getWithoutRows = function(rowsIndexes) {\n  var newTable = new Table();\n  newTable.name = this.name;\n  for(var i = 0; this[i] != null; i++) {\n    newTable[i] = new List();\n    for(var j = 0; this[i][j] != null; j++) {\n      if(rowsIndexes.indexOf(j) == -1) newTable[i].push(this[i][j]);\n    }\n    newTable[i].name = this[i].name;\n  }\n  return newTable.getImproved();\n};\n\n/**\n * Sort Table's lists by a list\n * @param  {List|Number} listOrIndex List used to sort, or index of list in the table\n *\n * @param  {Boolean} ascending (true by default)\n * @return {Table} table (of the same type)\n * tags:sort\n */\nTable.prototype.getListsSortedByList = function(listOrIndex, ascending) { //depracated: use sortListsByList\n  if(listOrIndex == null) return;\n  var newTable = instantiateWithSameType(this);\n  var sortinglist = listOrIndex.isList ? listOrIndex.clone() : this[listOrIndex];\n\n  this.forEach(function(list) {\n    newTable.push(list.getSortedByList(sortinglist, ascending));\n  });\n\n  return newTable;\n};\n\n/**\n * Transposes Table.\n * @param firstListAsHeaders\n * @return {Table}\n */\nTable.prototype.getTransposed = function(firstListAsHeaders) {\n\n  var tableToTranspose = firstListAsHeaders ? this.getSubList(1) : this;\n\n  var table = instantiate(typeOf(tableToTranspose));\n  if(tableToTranspose.length === 0) return table;\n  var i;\n  var j;\n  var list;\n\n  for(i = 0; tableToTranspose[i] != null; i++) {\n    list = tableToTranspose[i];\n    for(j = 0; list[j] != null; j++) {\n      if(i === 0) table[j] = new List();\n      table[j][i] = tableToTranspose[i][j];\n    }\n  }\n  for(j = 0; tableToTranspose[0][j] != null; j++) {\n    table[j] = table[j].getImproved();\n  }\n\n  if(firstListAsHeaders) {\n    this[0].forEach(function(name, i) {\n      table[i].name = String(name);\n    });\n  }\n\n  return table;\n};\n\n/**\n * Generates a string containing details about the current state\n * of the Table. Useful for outputing to the console for debugging.\n * @param {Number} level If greater then zero, will indent to that number of spaces.\n * @return {String} Description String.\n */\nTable.prototype.getReport = function(level) {\n  var ident = \"\\n\" + (level > 0 ? StringOperators.repeatString(\"  \", level) : \"\");\n  var lengths = this.getLengths();\n  var minLength = lengths.getMin();\n  var maxLength = lengths.getMax();\n  var averageLength = (minLength + maxLength) * 0.5;\n  var sameLengths = minLength == maxLength;\n\n  var text = level > 0 ? (ident + \"////report of instance of Table////\") : \"///////////report of instance of Table//////////\";\n\n  if(this.length === 0) {\n    text += ident + \"this table has no lists\";\n    return text;\n  }\n\n  text += ident + \"name: \" + this.name;\n  text += ident + \"type: \" + this.type;\n  text += ident + \"number of lists: \" + this.length;\n\n  text += ident + \"all lists have same length: \" + (sameLengths ? \"true\" : \"false\");\n\n  if(sameLengths) {\n    text += ident + \"lists length: \" + this[0].length;\n  } else {\n    text += ident + \"min length: \" + minLength;\n    text += ident + \"max length: \" + maxLength;\n    text += ident + \"average length: \" + averageLength;\n    text += ident + \"all lengths: \" + lengths.join(\", \");\n  }\n\n  var names = this.getNames();\n  var types = this.getTypes();\n\n  text += ident + \"--\";\n  names.forEach(function(name, i){\n    text += ident + i + \": \" + name + \" [\"+TYPES_SHORT_NAMES_DICTIONARY[types[i]]+\"]\";\n  });\n  text += ident + \"--\";\n\n  var sameTypes = types.allElementsEqual();\n  if(sameTypes) {\n    text += ident + \"types of all lists: \" + types[0];\n  } else {\n    text += ident + \"types: \" + types.join(\", \");\n  }\n  text += ident + \"names: \" + names.join(\", \");\n\n  if(this.length < 101) {\n    text += ident + ident + \"--------lists reports---------\";\n\n    var i;\n    for(i = 0; this[i] != null; i++) {\n      text += \"\\n\" + ident + (\"(\" + (i) + \"/0-\" + (this.length - 1) + \")\");\n      try{\n         text += this[i].getReport(1);\n      } catch(err){\n        text += ident + \"[!] something wrong with list \" + err;\n      }\n    }\n  }\n\n  if(this.length == 2) {\n    text += ident + ident + \"--------lists comparisons---------\";\n    if(this[0].type==\"NumberList\" && this[1].type==\"NumberList\"){\n      text += ident + \"covariance:\" + NumberListOperators.covariance(this[0], this[1]);\n      text += ident + \"Pearson product moment correlation: \" + NumberListOperators.pearsonProductMomentCorrelation(this[0], this[1]);\n    } else if(this[0].type!=\"NumberList\" && this[1].type!=\"NumberList\"){\n      var nUnion = ListOperators.union(this[0], this[1]).length;\n      text += ident + \"union size: \" + nUnion;\n      var intersected = ListOperators.intersection(this[0], this[1]);\n      var nIntersection = intersected.length;\n      text += ident + \"intersection size: \" + nIntersection;\n\n      if(this[0]._freqTable[0].length == nUnion && this[1]._freqTable[0].length == nUnion){\n        text += ident + \"[!] both lists contain the same non repeated elements\";\n      } else {\n        if(this[0]._freqTable[0].length == nIntersection) text += ident + \"[!] all elements in first list also occur on second list\";\n        if(this[1]._freqTable[0].length == nIntersection) text += ident + \"[!] all elements in second list also occur on first list\";\n      }\n      text += ident + \"Jaccard distance: \" + (1 - (nIntersection/nUnion));\n    }\n    //check for 1-1 matches, number of pairs, categorical, sub-categorical\n    var subCategoryCase = ListOperators.subCategoricalAnalysis(this[0], this[1]);\n\n    switch(subCategoryCase){\n      case 0:\n        text += ident + \"no categorical relation found among lists\";\n        break;\n      case 1:\n        text += ident + \"[!] both lists are categorical identical\";\n        break;\n      case 2:\n        text += ident + \"[!] first list is subcategorical to second list\";\n        break;\n      case 3:\n        text += ident + \"[!] second list is subcategorical to first list\";\n        break;\n    }\n\n    if(subCategoryCase!=1){\n      text += ident + \"information gain when segmenting first list by the second: \"+ListOperators.getInformationGain(this[0], this[1]);\n      text += ident + \"information gain when segmenting second list by the first: \"+ListOperators.getInformationGain(this[1], this[0]);\n    }\n  }\n\n  ///add ideas to: analyze, visualize\n\n  return text;\n};\n\nTable.prototype.getReportHtml = function() {}; //TODO\n\nTable.prototype.getReportObject = function() {}; //TODO\n\n/**\n * removes a row from the table.\n * @param {Number} index The row to remove.\n * @return {undefined}\n */\nTable.prototype.removeRow = function(index) {\n  for(var i = 0; this[i] != null; i++) {\n    this[i].splice(index, 1);\n  }\n};\n\n/**\n * makes a copy of the Table.\n * @return {Table} Copy of table.\n */\nTable.prototype.clone = function() {\n  var clonedTable = instantiateWithSameType(this);\n  clonedTable.name = this.name;\n  for(var i = 0; this[i] != null; i++) {\n    clonedTable.push(this[i].clone());\n  }\n  return clonedTable;\n};\n\n/**\n * Removes all contents of the Table.\n */\nTable.prototype.destroy = function() {\n  for(var i = 0; this[i] != null; i++) {\n    this[i].destroy();\n    delete this[i];\n  }\n};\n\n/**\n * Prints contents of Table to console.log.\n */\n\n\n\nTable.prototype.print = function() {\n  console.log(\"///////////// <\" + this.name + \"////////////////////////////////////////////////////\");\n  console.log(TableEncodings.TableToCSV(this, null, true));\n  console.log(\"/////////////\" + this.name + \"> ////////////////////////////////////////////////////\");\n};\n","import Table from \"src/dataStructures/lists/Table\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\nNumberTable.prototype = new Table();\nNumberTable.prototype.constructor = NumberTable;\n\n/**\n * @classdesc {@link Table} to store numbers.\n *\n * @constructor\n * @description Creates a new NumberTable.\n * @category numbers\n */\nfunction NumberTable() {\n  var args = [];\n  var newNumberList;\n  var array;\n\n  if(arguments.length > 0 && Number(arguments[0]) == arguments[0]) {\n    array = [];\n    var i;\n    for(i = 0; i < arguments[0]; i++) {\n      array.push(new NumberList());\n    }\n  } else {\n    for(i = 0; arguments[i] != null; i++) {\n      newNumberList = NumberList.fromArray(arguments[i]);\n      newNumberList.name = arguments[i].name;\n      arguments[i] = newNumberList;\n    }\n    array = Table.apply(this, arguments);\n  }\n  array = NumberTable.fromArray(array);\n  return array;\n}\nexport default NumberTable;\n\nNumberTable.fromArray = function(array) {\n  var result = Table.fromArray(array);\n  result.type = \"NumberTable\";\n\n  result.getNumberListsNormalized = NumberTable.prototype.getNumberListsNormalized;\n  result.getNormalizedToMax = NumberTable.prototype.getNormalizedToMax;\n  result.getNumberListsNormalizedToMax = NumberTable.prototype.getNumberListsNormalizedToMax;\n  result.getNumberListsNormalizedToSum = NumberTable.prototype.getNumberListsNormalizedToSum;\n  result.getSums = NumberTable.prototype.getSums;\n  result.getRowsSums = NumberTable.prototype.getRowsSums;\n  result.getAverages = NumberTable.prototype.getAverages;\n  result.getRowsAverages = NumberTable.prototype.getRowsAverages;\n  result.factor = NumberTable.prototype.factor;\n  result.add = NumberTable.prototype.add;\n  result.getMax = NumberTable.prototype.getMax;\n  result.getMin = NumberTable.prototype.getMin;\n  result.getMinMaxInterval = NumberTable.prototype.getMinMaxInterval;\n  result.getCovarianceMatrix = NumberTable.prototype.getCovarianceMatrix;\n\n  return result;\n};\n\n/**\n * returns a table with having normalized all the numberLists\n *\n * @param  {factor} factor optional factor\n * @return {NumberTable}\n * tags:normalization\n */\nNumberTable.prototype.getNumberListsNormalized = function(factor) {\n  factor = factor == null ? 1 : factor;\n\n  var newTable = new NumberTable();\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    var numberList = this[i];\n    newTable[i] = numberList.getNormalized(factor);\n  }\n  newTable.name = this.name;\n  return newTable;\n};\n\n/**\n * normalizes the table to its maximal value\n *\n * @param  {factor} factor optional factor\n * @return {NumberTable}\n * tags:normalization\n */\nNumberTable.prototype.getNormalizedToMax = function(factor) {\n  factor = factor == null ? 1 : factor;\n\n  var newTable = new NumberTable();\n  var i;\n  var antimax = factor / this.getMax();\n  for(i = 0; this[i] != null; i++) {\n    newTable[i] = this[i].factor(antimax);\n  }\n  newTable.name = this.name;\n  return newTable;\n};\n\nNumberTable.prototype.getNumberListsNormalizedToMax = function(factorValue) {\n  var newTable = new NumberTable();\n  for(var i = 0; this[i] != null; i++) {\n    var numberList = this[i];\n    newTable[i] = numberList.getNormalizedToMax(factorValue);\n  }\n  newTable.name = this.name;\n  return newTable;\n};\n\nNumberTable.prototype.getNumberListsNormalizedToSum = function() {\n  var newTable = new NumberTable();\n  for(var i = 0; this[i] != null; i++) {\n    var numberList = this[i];\n    newTable[i] = numberList.getNormalizedToSum();\n  }\n  newTable.name = this.name;\n  return newTable;\n};\n\n\nNumberTable.prototype.getMax = function() {\n  if(this.length == 0) return null;\n\n  var max = this[0].getMax();\n  var i;\n\n  for(i = 1; this[i] != null; i++) {\n    max = Math.max(this[i].getMax(), max);\n  }\n  return max;\n};\n\nNumberTable.prototype.getMin = function() {\n  if(this.length == 0) return null;\n\n  var min = this[0].getMin();\n  var i;\n\n  for(i = 1; this[i] != null; i++) {\n    min = Math.min(this[i].getMin(), min);\n  }\n  return min;\n};\n\nNumberTable.prototype.getMinMaxInterval = function() {\n  if(this.length == 0) return null;\n  var rangeInterval = (this[0]).getMinMaxInterval();\n  for(var i = 1; this[i] != null; i++) {\n    var newRange = (this[i]).getMinMaxInterval();\n    rangeInterval.x = Math.min(rangeInterval.x, newRange.x);\n    rangeInterval.y = Math.max(rangeInterval.y, newRange.y);\n  }\n  return rangeInterval;\n};\n\n/**\n * returns a numberList with values from numberlists added\n * @return {Numberlist}\n * tags:\n */\nNumberTable.prototype.getSums = function() {\n  var numberList = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    numberList[i] = this[i].getSum();\n  }\n  return numberList;\n};\n\n/**\n * returns a numberList with all values fro rows added\n * @return {NumberList}\n * tags:\n */\nNumberTable.prototype.getRowsSums = function() {\n  var sums = this[0].clone();\n  var numberList;\n  for(var i = 1; this[i] != null; i++) {\n    numberList = this[i];\n    for(var j = 0; numberList[j] != null; j++) {\n      sums[j] += numberList[j];\n    }\n  }\n  return sums;\n};\n\nNumberTable.prototype.getAverages = function() {\n  var numberList = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    numberList[i] = this[i].getAverage();\n  }\n  return numberList;\n};\n\nNumberTable.prototype.getRowsAverages = function() {\n  var nLists = this.length;\n  var averages = this[0].clone().factor(1 / nLists);\n  var numberList;\n  var i;\n  var j;\n  for(i = 1; this[i] != null; i++) {\n    numberList = this[i];\n    for(j = 0; numberList[j] != null; j++) {\n      averages[j] += numberList[j] / nLists;\n    }\n  }\n  return averages;\n};\n\nNumberTable.prototype.factor = function(value) {\n  var newTable = new NumberTable();\n  var i;\n  var numberList;\n\n  switch(typeOf(value)) {\n    case 'number':\n      for(i = 0; this[i] != null; i++) {\n        numberList = this[i];\n        newTable[i] = numberList.factor(value);\n      }\n      break;\n    case 'NumberList':\n      for(i = 0; this[i] != null; i++) {\n        numberList = this[i];\n        newTable[i] = numberList.factor(value[i]);\n      }\n      break;\n\n  }\n\n  newTable.name = this.name;\n  return newTable;\n};\n\nNumberTable.prototype.add = function(value) {\n  var newTable = new NumberTable();\n  var numberList;\n  var i;\n\n  for(i = 0; this[i] != null; i++) {\n    numberList = this[i];\n    newTable[i] = numberList.add(value);\n  }\n\n  newTable.name = this.name;\n  return newTable;\n};\n\n\nNumberTable.prototype.getCovarianceMatrix = function(){\n  var newTable = new NumberTable();\n  var i;\n  for(i = 0; this[i] != null; i++) {\n\n  }\n\n}\n\n","import List from \"src/dataStructures/lists/List\";\n\nRectangleList.prototype = new List();\nRectangleList.prototype.constructor = RectangleList;\n/**\n * @classdesc A {@link List} structure for storing {@link Rectangle} instances.\n *\n * @description Creates a new RectangleList.\n * @constructor\n * @category geometry\n */\nfunction RectangleList() {\n  var array = List.apply(this, arguments);\n  array = RectangleList.fromArray(array);\n  return array;\n}\nexport default RectangleList;\n\nRectangleList.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"RectangleList\";\n\n  result.getFrame = RectangleList.prototype.getFrame;\n  result.add = RectangleList.prototype.add;\n  result.factor = RectangleList.prototype.factor;\n  result.getAddedArea = RectangleList.prototype.getAddedArea;\n  result.getIntersectionArea = RectangleList.prototype.getIntersectionArea;\n\n  return result;\n};\n\n//TODO:finish RectangleList methods\n\nRectangleList.prototype.getFrame = function() {\n  if(this.length == 0) return null;\n  var frame = this[0];\n  frame.width = frame.getRight();\n  frame.height = frame.getBottom();\n  for(var i = 1; this[i] != null; i++) {\n    frame.x = Math.min(frame.x, this[i].x);\n    frame.y = Math.min(frame.y, this[i].y);\n\n    frame.width = Math.max(this[i].getRight(), frame.width);\n    frame.height = Math.max(this[i].getBottom(), frame.height);\n  }\n\n  frame.width -= frame.x;\n  frame.height -= frame.y;\n\n  return frame;\n};\n\nRectangleList.prototype.add = function() {\n\n};\n\nRectangleList.prototype.factor = function() {\n\n};\n\nRectangleList.prototype.getAddedArea = function() {};\n\nRectangleList.prototype.getIntersectionArea = function() {\n  var rect0;\n  var rect1;\n  var intersectionArea = 0;\n  var intersection;\n  for(var i = 0; this[i + 1] != null; i++) {\n    rect0 = this[i];\n    for(var j = i + 1; this[j] != null; j++) {\n      rect1 = this[j];\n      intersection = rect0.getIntersection(rect1);\n      intersectionArea += intersection == null ? 0 : intersection.getArea();\n    }\n  }\n\n  return intersectionArea;\n};\n","import NumberList from \"src/dataStructures/numeric/NumberList\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport List from \"src/dataStructures/lists/List\";\nimport RectangleList from \"src/dataStructures/geometry/RectangleList\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\n/**\n * @classdesc Create default lists\n *\n * @namespace\n * @category basics\n */\nfunction ListGenerators() {}\nexport default ListGenerators;\n\n\n/**\n * Generates a List made of several copies of same element (returned List is improved)\n * @param {Object} nValues length of the List\n * @param {Object} element object to be placed in all positions\n * @return {List} generated List\n * tags:generator\n */\nListGenerators.createListWithSameElement = function(nValues, element) {\n  var list;\n  switch(typeOf(element)) {\n    case 'number':\n      list = new NumberList();\n      break;\n    case 'List':\n      list = new Table();\n      break;\n    case 'NumberList':\n      list = new NumberTable();\n      break;\n    case 'Rectangle':\n      list = new RectangleList();\n      break;\n    case 'string':\n      list = new StringList();\n      break;\n    case 'boolean':\n      list = new List(); //TODO:update once BooleanList exists\n      break;\n    default:\n      list = new List();\n  }\n\n  for(var i = 0; i < nValues; i++) {\n    list[i] = element;\n  }\n  return list;\n};\n\n/**\n * Generates a List built froma seed element and a function that will be applied iteratively\n * @param {Object} nValues length of the List\n * @param {Object} firstElement first element\n * @param {Object} dynamicFunction sequence generator function, elementN+1 =  dynamicFunction(elementN)\n * @return {List} generated List\n */\nListGenerators.createIterationSequence = function(nValues, firstElement, dynamicFunction) {\n  var list = ListGenerators.createListWithSameElement(1, firstElement);\n  for(var i = 1; i < nValues; i++) {\n    list[i] = dynamicFunction(list[i - 1]);\n  }\n  return list;\n};\n","import List from \"src/dataStructures/lists/List\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport ListGenerators from \"src/operators/lists/ListGenerators\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\nNumberList.prototype = new List();\nNumberList.prototype.constructor = NumberList;\n\n/**\n * @classdesc List structure for Numbers.\n *\n * @constructor\n * @description Creates a new NumberList.\n * @category numbers\n */\nfunction NumberList() {\n  var args = [];\n\n  for(var i = 0; i < arguments.length; i++) {\n    args[i] = Number(arguments[i]);\n  }\n  var array = List.apply(this, args);\n  array = NumberList.fromArray(array);\n  return array;\n}\nexport default NumberList;\n\n/**\n * Creates a new NumberList from a raw array of numbers.\n *\n * @param {Number[]} array The array of numbers to create the list from.\n * @param {Boolean} forceToNumber If true, explicitly converts values in array to Numbers.\n * @return {NumberList} New NumberList containing values in array\n */\nNumberList.fromArray = function(array, forceToNumber) {\n  forceToNumber = forceToNumber == null ? true : forceToNumber;\n\n  var result = List.fromArray(array);\n\n  if(forceToNumber) {\n    for(var i = 0; i < result.length; i++) {\n      result[i] = Number(result[i]);\n    }\n  }\n\n  result.type = \"NumberList\";\n\n  //assign methods to array:\n  result.unit = NumberList.prototype.unit;\n  result.tenPower = NumberList.prototype.tenPower;\n  result.getMin = NumberList.prototype.getMin;\n  result.getMax = NumberList.prototype.getMax;\n  result.getAmplitude = NumberList.prototype.getAmplitude;\n  result.getMinMaxInterval = NumberList.prototype.getMinMaxInterval;\n  result.getSum = NumberList.prototype.getSum;\n  result.getProduct = NumberList.prototype.getProduct;\n  result.getInterval = NumberList.prototype.getInterval;\n  result.getNormalized = NumberList.prototype.getNormalized;\n  result.getNormalizedToMax = NumberList.prototype.getNormalizedToMax;\n  result.getNormalizedToSum = NumberList.prototype.getNormalizedToSum;\n  result.toPolygon = NumberList.prototype.toPolygon;\n\n  //statistics\n  result.getAverage = NumberList.prototype.getAverage;\n  result.getNorm = NumberList.prototype.getNorm;\n  result.getStandardDeviation = NumberList.prototype.getStandardDeviation;\n  result.getVariance = NumberList.prototype.getVariance;\n  result.getMedian = NumberList.prototype.getMedian;\n  result.getQuantiles = NumberList.prototype.getQuantiles;\n\n  //sorting\n  result.getSorted = NumberList.prototype.getSorted;\n  result.getSortIndexes = NumberList.prototype.getSortIndexes;\n  result.factor = NumberList.prototype.factor;\n  result.add = NumberList.prototype.add;\n  result.subtract = NumberList.prototype.subtract;\n  result.divide = NumberList.prototype.divide;\n  result.dotProduct = NumberList.prototype.dotProduct;\n  result.distance = NumberList.prototype.distance;\n  result.sqrt = NumberList.prototype.sqrt;\n  result.pow = NumberList.prototype.pow;\n  result.log = NumberList.prototype.log;\n  result.isEquivalent = NumberList.prototype.isEquivalent;\n  result.toStringList = NumberList.prototype.toStringList;\n\n  //transform\n  result.approach = NumberList.prototype.approach;\n\n  //override\n  result.clone = NumberList.prototype.clone;\n  result._slice = Array.prototype.slice;\n  result.slice = NumberList.prototype.slice;\n\n  return result;\n};\n\nNumberList.prototype.unit = \"\";\nNumberList.prototype.tenPower = 0;\n\n/**\n * Returns minimum value in the List. Null if the NumberList is empty.\n *\n * @return {Number} The min value.\n */\nNumberList.prototype.getMin = function() {\n  //TODO:store result and retrieve while the NumberList doesn't change;\n  if(this.length === 0) return null;\n  var i;\n  var min = this[0];\n  for(i = 1; i < this.length; i++) {\n    min = Math.min(min, this[i]);\n  }\n  return min;\n};\n\n/**\n * Returns maximum value in the List. Null if the NumberList is empty.\n *\n * @return {Number} The max value.\n */\nNumberList.prototype.getMax = function() {\n  //TODO:store result and retrieve while the NumberList doesn't change;\n  if(this.length === 0) return null;\n  var i;\n  var max = this[0];\n  for(i = 1; i < this.length; i++) {\n    max = Math.max(max, this[i]);\n  }\n  return max;\n};\n\n/**\n * Finds the range of the values in the NumberList.\n *\n * @return {Number} The difference between the minimum and maximum value in the List.\n */\nNumberList.prototype.getAmplitude = function() {\n  if(this.length === 0) return 0;\n  var min = this[0];\n  var max = this[0];\n  for(var i = 1; this[i] != null; i++) {\n    min = Math.min(min, this[i]);\n    max = Math.max(max, this[i]);\n  }\n  return max - min;\n};\n\n/**\n * Provides the min and max values as an {@link Interval}.\n *\n * @return {Interval} Interval containing the min and max values of the List.\n */\nNumberList.prototype.getMinMaxInterval = function() { //deprecated?\n  return new Interval(this.getMin(), this.getMax());\n};\n\n/**\n * Returns the total sum of values in the NumberList.\n *\n * @return {Number} Sum of all values in the List.\n * tags:\n */\nNumberList.prototype.getSum = function() {\n  if(this.length === 0) return 0;\n  var i;\n  var sum = this[0];\n  for(i = 1; i < this.length; i++) {\n    sum += this[i];\n  }\n  return sum;\n};\n\n/**\n * Returns the product of values in the NumberList.\n *\n * @return {Number} The product of all values in the NumberList.\n * tags:\n */\nNumberList.prototype.getProduct = function() {\n  if(this.length === 0) return null;\n  var i;\n  var product = this[0];\n  for(i = 1; i < this.length; i++) {\n    product *= this[i];\n  }\n  return product;\n};\n\n/**\n * Returns a NumberList normalized to the sum.\n *\n * @param {Number} factor Optional multiplier to modify the normalized values by.\n * Defaults to 1.\n * @param {Number} sum Optional sum to normalize to.\n * If not provided, sum will be calculated automatically.\n * @return {NumberList} New NumberList of values normalized to the sum.\n * tags:\n */\nNumberList.prototype.getNormalizedToSum = function(factor, sum) {\n  factor = factor == null ? 1 : factor;\n  var newNumberList = new NumberList();\n  newNumberList.name = this.name;\n  if(this.length === 0) return newNumberList;\n  var i;\n  sum = sum == null ? this.getSum() : sum;\n  if(sum === 0) return this.clone();\n\n  for(i = 0; i < this.length; i++) {\n    newNumberList.push(factor * this[i] / sum);\n  }\n  return newNumberList;\n};\n\n/**\n * Returns a NumberList normalized to min-max interval.\n *\n * @param {Number} factor Optional multiplier to modify the normalized values by.\n * Defaults to 1.\n * @return {NumberList}\n * tags:\n */\nNumberList.prototype.getNormalized = function(factor) {\n  factor = factor == null ? 1 : factor;\n\n  if(this.length === 0) return null;\n\n  var i;\n  var interval = this.getMinMaxInterval();\n  var a = interval.getAmplitude();\n  var newNumberList = new NumberList();\n  for(i = 0; i < this.length; i++) {\n    newNumberList.push(factor * ((this[i] - interval.x) / a));\n  }\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Returns a NumberList normalized to Max.\n *\n * @param {Number} factor Optional multiplier to modify the normalized values by.\n * Defaults to 1.\n * @return {NumberList}\n * tags:\n */\nNumberList.prototype.getNormalizedToMax = function(factor) {\n  factor = factor == null ? 1 : factor;\n\n  if(this.length == 0) return null;\n\n  var max = this.getMax();\n  if(max == 0) {\n    max = this.getMin();\n    if(max == 0) return ListGenerators.createListWithSameElement(this.length, 0);\n  }\n  var newNumberList = new NumberList();\n  for(var i = 0; this[i] != null; i++) {\n    newNumberList.push(factor * (this[i] / max));\n  }\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Builds an Interval with min and max value from the NumberList\n *\n * @return {Interval} with starting value as the min of the NumberList\n * and ending value as the max.\n * tags:\n */\nNumberList.prototype.getInterval = function() {\n  if(this.length === 0) return null;\n  var max = this[0];\n  var min = this[0];\n  for(var i = 1; this[i] != null; i++) {\n    max = Math.max(max, this[i]);\n    min = Math.min(min, this[i]);\n  }\n  var interval = new Interval(min, max);\n  return interval;\n};\n\n\n/**\n * Builds an {@link Polygon} from the NumberList,\n * using each pair of values in the NumberList as\n * x and y positions.\n *\n * @return {Polygon} Polygon representing the values\n * in the NumberList as x/y coordinates.\n */\nNumberList.prototype.toPolygon = function() {\n  if(this.length === 0) return null;\n  var polygon = new Polygon();\n  for(var i = 0; this[i + 1] != null; i += 2) {\n    polygon.push(new Point(this[i], this[i + 1]));\n  }\n  return polygon;\n};\n\n\n/////////statistics\n\n/**\n * Calculates mean of the NumberList.\n *\n * @return {Number} Mean of all values in the List.\n * tags:statistics\n */\nNumberList.prototype.getAverage = function() {\n  return this.getSum() / this.length;\n};\n\n/**\n * Calculates the geometric mean of the NumberList.\n *\n * @return {Number}\n * tags:statistics\n */\nNumberList.prototype.getGeometricMean = function() {\n  var s = 0;\n  this.forEach(function(val) {\n    s += Math.log(val);\n  });\n  return Math.pow(Math.E, s / this.length);\n};\n\n/**\n * Calculates the norm of the NumberList (treated as a vector).\n *\n * @return {Number}\n * tags:statistics\n */\nNumberList.prototype.getNorm = function() {\n  var sq = 0;\n  for(var i = 0; this[i] != null; i++) {\n    sq += Math.pow(this[i], 2);\n  }\n  return Math.sqrt(sq);\n};\n\n/**\n * Calculates the variance of the NumberList.\n *\n * @return {Number}\n * tags:statistics\n */\nNumberList.prototype.getVariance = function() {\n  var sd = 0;\n  var average = this.getAverage();\n  for(var i = 0; this[i] != null; i++) {\n    sd += Math.pow(this[i] - average, 2);\n  }\n  return sd / this.length;\n};\n\n/**\n * Calculates the standard deviation.\n *\n * @return {Number}\n * tags:statistics\n */\nNumberList.prototype.getStandardDeviation = function() {\n  return Math.sqrt(this.getVariance());\n};\n\n/**\n * Calculates the median of the numberList\n *\n * @return {Number}\n * tags:statistics\n */\nNumberList.prototype.getMedian = function() {\n  var sorted = this.getSorted(true);\n  var prop = (this.length - 1) / 2;\n  var entProp = Math.floor(prop);\n  var onIndex = prop == entProp;\n  return onIndex ? sorted[prop] : (0.5 * sorted[entProp] + 0.5 * sorted[entProp + 1]);\n};\n\n/**\n * Builds a partition of n quantiles from the numberList.\n *\n * @param {Number} nQuantiles number of quantiles\n * @return {NumberList} A number list of the quantiles.\n * tags:statistics\n */\nNumberList.prototype.getQuantiles = function(nQuantiles) {\n  var sorted = this.getSorted(true);\n\n  var prop = this.length / nQuantiles;\n  var entProp = Math.floor(prop);\n  var onIndex = prop == entProp;\n  var quantiles = new NumberList();\n  for(var i = 0; i < nQuantiles - 1; i++) {\n    quantiles[i] = onIndex ? sorted[(i + 1) * prop] : (0.5 * sorted[(i + 1) * entProp] + 0.5 * sorted[(i + 1) * entProp + 1]);\n  }\n  return quantiles;\n};\n\n\n\n/////////sorting\n\n/**\n * Returns a new NumberList sorted in either ascending or descending order.\n *\n * @param {Boolean} ascending True if values should be sorted in ascending order.\n * If false, values will be sorted in descending order.\n * @return {NumberList} new sorted NumberList.\n */\nNumberList.prototype.getSorted = function(ascending) {\n  ascending = ascending == null ? true : ascending;\n\n  if(ascending) {\n    return NumberList.fromArray(this.slice().sort(function(a, b) {\n      return a - b;\n    }), false);\n  }\n  return NumberList.fromArray(this.slice().sort(function(a, b) {\n    return b - a;\n  }), false);\n};\n\n/**\n * Returns a new NumberList containing the indicies of the values of\n * the original NumberList in sorted order.\n *\n * @param {Boolean} descending If true, values are sorted in descending order.\n * @return {NumberList} NumberList containing the indices of the original NumberList\n * such that accessing the values of the original list at those indices would produce\n * a sorted list.\n * @example\n * var nl = NumberList.fromArray([1,3,2]);\n * var indices = nl.getSortIndexes();\n * indices[0]; // produces 1 as nl[1] == 3.\n */\nNumberList.prototype.getSortIndexes = function(descending) {\n  if(descending == null) descending = true;\n\n  var pairs = [];\n  var newList = new NumberList();\n\n  if(this.length === 0) return newList;\n\n  for(var i = 0; this[i] != null; i++) {\n    pairs.push([i, this[i]]);\n  }\n\n  if(descending) {\n    pairs.sort(function(a, b) {\n      if(a[1] < b[1]) return 1;\n      return -1;\n    });\n  } else {\n    pairs.sort(function(a, b) {\n      if(a[1] < b[1]) return -1;\n      return 1;\n    });\n  }\n\n  for(i = 0; pairs[i] != null; i++) {\n    newList.push(pairs[i][0]);\n  }\n  newList.name = this.name;\n  return newList;\n};\n\n/**\n * Returns a new NumberList with the values of\n * the original list multiplied by the input value\n *\n * @param {Number} value The value to multiply each\n * value in the list by.\n * @return {NumberList} New NumberList with values multiplied.\n */\nNumberList.prototype.factor = function(value) {\n  var i;\n  var newNumberList = new NumberList();\n  for(i = 0; i < this.length; i++) {\n    newNumberList.push(this[i] * value);\n  }\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Adds a value or values in a NumberList to the current list.\n *\n * If input is a Number, each value of the returned\n * NumberList will be the sum of the original value and this\n * input value.\n *\n * If the input is a NumberList, each value of the returned\n * NumberList will be the sum of the original value and the\n * value at the same index in the input list.\n *\n * @param {Number|NumberList} object Input value to add to the list.\n * @return {NumberList}\n */\nNumberList.prototype.add = function(object) {\n  var i;\n  var newNumberList = new NumberList();\n  var type = typeOf(object);\n\n  switch(type) {\n    case 'number':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] + object;\n      }\n      break;\n    case 'NumberList':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] + object[i % object.length];\n      }\n      break;\n  }\n\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Subtracts a value or values in a NumberList from the current list.\n *\n * If input is a Number, each value of the returned\n * NumberList will be the original value minus this\n * input value.\n *\n * If the input is a NumberList, each value of the returned\n * NumberList will be the original value minus the\n * value at the same index in the input list.\n *\n * @param {Number|NumberList} object Input value to subract from the list.\n * @return {NumberList}\n */\nNumberList.prototype.subtract = function(object) {\n  var i;\n  var newNumberList = new NumberList();\n  var type = typeOf(object);\n\n  switch(type) {\n    case 'number':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] - object;\n      }\n      break;\n    case 'NumberList':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] - object[i % object.length];\n      }\n      break;\n  }\n\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Returns a new NumberList with each value divided by a input value or values in a NumberList.\n *\n * If input is a Number, each value of the returned\n * NumberList will be the original value divided by this\n * input value.\n *\n * If the input is a NumberList, each value of the returned\n * NumberList will be the original value divided by the\n * value at the same index in the input list.\n *\n * @param {Number|NumberList} object Input value to divide by the list.\n * @return {NumberList}\n */\nNumberList.prototype.divide = function(object) {\n  var i;\n  var newNumberList = new NumberList();\n  var type = typeOf(object);\n\n  switch(type) {\n    case 'number':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] / object;\n      }\n      break;\n    case 'NumberList':\n      for(i = 0; this[i] != null; i++) {\n        newNumberList[i] = this[i] / object[i % object.length];\n      }\n      break;\n  }\n\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Returns a new NumberList containing the square root of\n * the values of the current NumberList.\n *\n * @return {NumberList} NumberList with square rooted values.\n */\nNumberList.prototype.sqrt = function() {\n  var i;\n  var newNumberList = new NumberList();\n  for(i = 0; i < this.length; i++) {\n    newNumberList.push(Math.sqrt(this[i]));\n  }\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Returns a new NumberList containing values raised to the power\n * of the input value.\n *\n * @param {Number} power Power to raise each value by.\n * @return {NumberList} New NumberList.\n */\nNumberList.prototype.pow = function(power) {\n  var i;\n  var newNumberList = new NumberList();\n  for(i = 0; i < this.length; i++) {\n    newNumberList.push(Math.pow(this[i], power));\n  }\n  newNumberList.name = this.name;\n  return newNumberList;\n};\n\n/**\n * Returns a transformed version of the list with\n * each value in the new list the log of the value\n * in the current list, with an optional constant\n * added to it.\n *\n * @param {Number} add Optional value to add to the log transformed values.\n * Defaults to 0.\n * @return {NumberList}\n */\nNumberList.prototype.log = function(add) {\n  add = add || 0;\n\n  var i;\n  var newNumberList = new NumberList();\n  for(i = 0; this[i] != null; i++) {\n    newNumberList[i] = Math.log(this[i] + add);\n  }\n  newNumberList.name = this.name;\n\n  return newNumberList;\n};\n\n/**\n * Returns dot product between current list and input NumberList.\n *\n * @param {NumberList} numberList Another NumberList.\n * @return {Number} Dot product between two lists.\n */\nNumberList.prototype.dotProduct = function(numberList) {\n  var sum = 0;\n  var i;\n  var nElements = Math.min(this.length, numberList.length);\n  for(i = 0; i < nElements; i++) {\n    sum += this[i] * numberList[i];\n  }\n  return sum;\n};\n\n/**\n * Calculates Euclidean distance between two numberLists\n *\n * @param  {NumberList} numberList NumberList of the same length\n * as current list.\n * @return {Number} Summed Euclidean distance between all values.\n * tags:\n */\nNumberList.prototype.distance = function(numberList) {\n  var sum = 0;\n  var i;\n  var nElements = Math.min(this.length, numberList.length);\n  for(i = 0; i < nElements; i++) {\n    sum += Math.pow(this[i] - numberList[i], 2);\n  }\n  return Math.sqrt(sum);\n};\n\n/**\n * Returns true if values in the input NumberList are the same\n * as the values in the current list.\n *\n * @param numberList NumberList to compare.\n * @return {Boolean} True if all values in both lists match.\n */\nNumberList.prototype.isEquivalent = function(numberList) {\n  for(var i = 0; this[i] != null; i++) {\n    if(this[i] != numberList[i]) return false;\n  }\n  return true;\n};\n\n/**\n * Returns a new {@link StringList} with all values converted to strings\n *\n * @return {StringList} New list.\n */\nNumberList.prototype.toStringList = function() {\n  var i;\n  var stringList = new StringList();\n  for(i = 0; this[i] != null; i++) {\n    stringList[i] = String(this[i]);\n  }\n  stringList.name = this.name;\n  return stringList;\n};\n\n\n//transform\n\nNumberList.prototype.approach = function(destinty, speed) {\n  speed = speed || 0.5;\n\n  var i;\n  var antispeed = 1 - speed;\n\n  for(i = 0; this[i] != null; i++) {\n    this[i] = antispeed * this[i] + speed * destinty[i];\n  }\n};\n\n\n///////overriding\n\nNumberList.prototype.clone = function() {\n  var newList = NumberList.fromArray(this._slice(), false);\n  newList.name = this.name;\n  return newList;\n};\n\nNumberList.prototype.slice = function() {\n  return NumberList.fromArray(this._slice.apply(this, arguments), false);\n};\n","import List from \"src/dataStructures/lists/List\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport DateList from \"src/dataStructures/dates/DateList\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\nStringList.prototype = new List();\nStringList.prototype.constructor = StringList;\n\n/**\n * @classdesc {@link List} for storing Strings.\n *\n * @constructor\n * @description Creates a new StringList\n * @category strings\n */\nfunction StringList() {\n  var args = []; //TODO:why this?, ask M\n\n  for(var i = 0; i < arguments.length; i++) {\n    args[i] = String(arguments[i]);\n  }\n  var array = List.apply(this, args);\n  array = StringList.fromArray(array);\n  //\n  return array;\n}\nexport default StringList;\n\nStringList.fromArray = function(array, forceToString) {\n  forceToString = forceToString == null ? true : forceToString;\n\n  var result = List.fromArray(array);\n  if(forceToString) {\n    for(var i = 0; i < result.length; i++) {\n      result[i] = String(result[i]);\n    }\n  }\n  result.type = \"StringList\";\n\n  //assign methods to array:\n  result.getLengths = StringList.prototype.getLengths;\n  result.toLowerCase = StringList.prototype.toLowerCase;\n  result.toUpperCase = StringList.prototype.toUpperCase;\n  result.append = StringList.prototype.append;\n  result.getSurrounded = StringList.prototype.getSurrounded;\n  result.replace = StringList.prototype.replace;\n  result.getConcatenated = StringList.prototype.getConcatenated;\n  result.toNumberList = StringList.prototype.toNumberList;\n  result.toDateList = StringList.prototype.toDateList;\n  result.trim = StringList.prototype.trim;\n\n  //override\n  result.clone = StringList.prototype.clone;\n\n  return result;\n};\n\n/**\n * overrides List.prototype.getLengths (see comments there)\n */\nStringList.prototype.getLengths = function() {\n  var lengths = new NumberList();\n  var string;\n\n  this.forEach(function(string) {\n    lengths.push(string.length);\n  });\n\n  return lengths;\n};\n\nStringList.prototype.append = function(sufix, after) {\n  after = after == null ? true : after;\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n  var sufixIsStringList = typeOf(sufix) == \"StringList\";\n  var i;\n  if(after) {\n    for(i = 0; this[i] != null; i++) {\n      newStringList[i] = this[i] + (sufixIsStringList ? sufix[i] : sufix);\n    }\n  } else {\n    for(i = 0; this[i] != null; i++) {\n      newStringList[i] = (sufixIsStringList ? sufix[i] : sufix) + this[i];\n    }\n  }\n  return newStringList;\n};\n\n/**\n * prefix and sufix can be string or a StringList\n */\nStringList.prototype.getSurrounded = function(prefix, sufix) {\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n  var i;\n\n  var prefixIsStringList = Array.isArray(prefix);\n  var sufixIsStringList = Array.isArray(sufix);\n\n  for(i = 0; this[i] != null; i++) {\n    newStringList[i] = (prefixIsStringList ? prefix[i] : prefix) + this[i] + (sufixIsStringList ? sufix[i] : sufix);\n  }\n\n  return newStringList;\n};\n\n\n//deprectaed, replaced by replaceInStrings\nStringList.prototype.replace = function(regExp, string) {\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n\n  for(var i = 0; this[i] != null; i++) {\n    newStringList[i] = this[i].replace(regExp, string);\n  }\n\n  return newStringList;\n};\n\n/**\n * replaces in each string, a sub-string by a string\n * @param  {String} subString sub-string to be replaced in each string\n * @param  {String} replacement string to be placed instead\n * @return {StringList}\n * tags:\n */\nStringList.prototype.replaceSubStringsInStrings = function(subString, replacement) {\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n\n  for(var i = 0; this[i] != null; i++) {\n    newStringList[i] = StringOperators.replaceString(string, subString, replacement);\n  }\n\n  return newStringList;\n};\n\nStringList.prototype.getConcatenated = function(separator) {\n  var i;\n  var string = \"\";\n  for(i = 0; this[i] != null; i++) {\n    string += this[i];\n    if(i < this.length - 1) string += separator;\n  }\n  return string;\n};\n\n\nStringList.prototype.toLowerCase = function() {\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    newStringList[i] = this[i].toLowerCase();\n  }\n  return newStringList;\n};\n\nStringList.prototype.toUpperCase = function() {\n  var newStringList = new StringList();\n  newStringList.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    newStringList[i] = this[i].toUpperCase();\n  }\n  return newStringList;\n};\n\nStringList.prototype.toNumberList = function() {\n  var numbers = new NumberList();\n  numbers.name = this.name;\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    numbers[i] = Number(this[i]);\n  }\n  return numbers;\n};\n\n\n/**\n * converts a stringList into a dateList\n *\n * @param  {String} formatCase format cases:<br>0: MM-DD-YYYY<br>1: YYYY-MM-DD (standard Javascript conversion)\n * @param  {String} separator \"-\" by default\n * @return {DateList}\n * tags:\n */\nStringList.prototype.toDateList = function(formatCase, separator) {\n  var dateList = new DateList();\n  var i;\n  for(i = 0; this[i] != null; i++) {\n    dateList.push(DateOperators.stringToDate(this[i], formatCase, separator));\n  }\n  return dateList;\n};\n\n/**\n * trims all the strings on the stringList\n * @return {StringList}\n * tags:\n */\nStringList.prototype.trim = function() {\n  var i;\n  var newStringList = new StringList();\n  for(i = 0; this[i] != null; i++) {\n    newStringList[i] = this[i].trim();\n  }\n  newStringList.name = this.name;\n  return newStringList;\n};\n\n///////overriding\n\nStringList.prototype.clone = function() {\n  var newList = StringList.fromArray(this.slice(), false);\n  newList.name = this.name;\n  return newList;\n};\n","import NumberList from \"src/dataStructures/numeric/NumberList\";\n\n/**\n * @classdesc Provides a set of tools that work with Numbers.\n *\n * @namespace\n * @category numbers\n */\nfunction NumberOperators() {}\nexport default NumberOperators;\n\nNumberOperators.numberToString = function(value, nDecimals, powersMode, unit) {\n  var string = value.toFixed(nDecimals);\n  while(string.charAt(string.length - 1) == '0') {\n    string = string.substring(0, string.length - 1);\n  }\n  if(string.charAt(string.length - 1) == '.') string = string.substring(0, string.length - 1);\n  return string;\n};\n\n/**\n * decent method to create pseudo random numbers\n * @param {Object} seed\n */\nNumberOperators.getRandomWithSeed = function(seed) {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / (233280.0);\n};\n\nNumberOperators.numberFromBinaryPositions = function(binaryPositions) {\n  var i;\n  var n = 0;\n  for(i = 0; binaryPositions[i] != null; i++) {\n    n += Math.pow(2, binaryPositions[i]);\n  }\n  return n;\n};\n\nNumberOperators.numberFromBinaryValues = function(binaryValues) {\n  var n = 0;\n  for(var i = 0; binaryValues[i] != null; i++) {\n    n += binaryValues[i] == 1 ? Math.pow(2, i) : 0;\n  }\n  return n;\n};\n\nNumberOperators.powersOfTwoDecomposition = function(number, length) {\n  // var i;\n  // var powers = StringList.fromArray(Number(number).toString(2).split('')).toNumberList().getReversed();\n  // var n = powers.length;\n  // for(i=n; i<length; i++){\n  //   powers.push(0);\n  // }\n  // return powers;\n\n\n\n  var powers = new NumberList();\n\n  var constructingNumber = 0;\n  var biggestPower;\n\n  while(constructingNumber < number) {\n    biggestPower = Math.floor(Math.log(number) / Math.LN2);\n    powers[biggestPower] = 1;\n    number -= Math.pow(2, biggestPower);\n  }\n\n  var length = Math.max(powers.length, length == null ? 0 : length);\n\n  for(var i = 0; i < length; i++) {\n    powers[i] = powers[i] == 1 ? 1 : 0;\n  }\n\n  return powers;\n};\n\nNumberOperators.positionsFromBinaryValues = function(binaryValues) {\n  var i;\n  var positions = new NumberList();\n  for(i = 0; binaryValues[i] != null; i++) {\n    if(binaryValues[i] == 1) positions.push(i);\n  }\n  return positions;\n};\n\n//////////Random Generator with Seed, From http://baagoe.org/en/w/index.php/Better_random_numbers_for_javascript\n\nNumberOperators._Alea = function() {\n  return(function(args) {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    if(args.length == 0) {\n      args = [+new Date()];\n    }\n    var mash = NumberOperators._Mash();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for(var i = 0; i < args.length; i++) {\n      s0 -= mash(args[i]);\n      if(s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(args[i]);\n      if(s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(args[i]);\n      if(s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n\n    var random = function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n    random.uint32 = function() {\n      return random() * 0x100000000; // 2^32\n    };\n    random.fract53 = function() {\n      return random() +\n        (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n    };\n    random.version = 'Alea 0.9';\n    random.args = args;\n    return random;\n\n  }(Array.prototype.slice.call(arguments)));\n};\n\nNumberOperators._Mash = function() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for(var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return(n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  mash.version = 'Mash 0.9';\n  return mash;\n};\n","import NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport NumberOperators from \"src/operators/numeric/NumberOperators\";\n\nfunction NumberListGenerators() {}\nexport default NumberListGenerators;\n\n/**\n * Generate a NumberList with sorted Numbers\n * @param {Number} nValues length of the NumberList\n *\n * @param {Number} start first value\n * @param {Number} step increment value\n * @return {NumberList} generated NumberList\n * tags:generator\n */\nNumberListGenerators.createSortedNumberList = function(nValues, start, step) {\n  start = start || 0;\n  step = step || 1;\n  if(step == 0) step = 1;\n  var i;\n  var numberList = new NumberList();\n  for(i = 0; i < nValues; i++) {\n    numberList.push(start + i * step);\n  }\n  return numberList;\n};\n\n// TODO: Should this function be here?\nNumberList.createNumberListFromInterval = function(nElements, interval) {\n  if(interval == null) interval = new Interval(0, 1);\n  var numberList = new NumberList();\n  var range = interval.getAmplitude();\n  var i;\n  for(i = 0; i < nElements; i++) {\n    numberList.push(Number(interval.getMin()) + Number(Math.random() * range));\n  }\n  return numberList;\n};\n\n/**\n * create a list with random numbers\n * @param  {Number} nValues\n *\n * @param  {Interval} interval range of the numberList\n * @param  {Number} seed optional seed for seeded random numbers\n * @return {NumberList}\n * tags:random\n */\nNumberListGenerators.createRandomNumberList = function(nValues, interval, seed, func) {\n  seed = seed == null ? -1 : seed;\n  interval = interval == null ? new Interval(0, 1) : interval;\n\n  var numberList = new NumberList();\n  var amplitude = interval.getAmplitude();\n\n  var random = seed == -1 ? Math.random : new NumberOperators._Alea(\"my\", seed, \"seeds\");\n\n  for(var i = 0; i < nValues; i++) {\n    //seed = (seed*9301+49297) % 233280; //old method, close enough: http://moebio.com/research/randomseedalgorithms/\n    //numberList[i] = interval.x + (seed/233280.0)*amplitude; //old method\n\n    numberList[i] = func == null ? (random() * amplitude + interval.x) : func(random() * amplitude + interval.x);\n  }\n\n  return numberList;\n};","import NumberOperators from \"src/operators/numeric/NumberOperators\";\nimport { instantiateWithSameType, typeOf, instantiate } from \"src/tools/utils/code/ClassUtils\";\nimport List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport NumberListGenerators from \"src/operators/numeric/numberList/NumberListGenerators\";\nimport ListGenerators from \"src/operators/lists/ListGenerators\";\n\nfunction TableOperators() {}\nexport default TableOperators;\n\n\nTableOperators.getElementFromTable = function(table, i, j) {\n  if(table[i] == null) return null;\n  return table[i][j];\n};\n\nTableOperators.getSubTable = function(table, x, y, width, height) {\n  if(table == null) return table;\n\n  var nLists = table.length;\n  if(nLists == 0) return null;\n  var result = new Table();\n\n  if(width <= 0) width = (nLists - x) + width;\n  x = Math.min(x, nLists - 1);\n  width = Math.min(width, nLists - x);\n\n  var nRows = table[0].length;\n\n  if(nRows == 0) return null;\n\n  if(height <= 0) height = (nRows - y) + height;\n\n  y = Math.min(y, nRows - 1);\n  height = Math.min(height, nRows - y);\n\n  var column;\n  var newColumn;\n  var i;\n  var j;\n  var element;\n  for(i = x; i < x + width; i++) {\n    column = table[i];\n    newColumn = new List();\n    newColumn.name = table[i].name;\n    for(j = y; j < y + height; j++) {\n      element = column[j];\n      newColumn.push(element);\n    }\n    result.push(newColumn.getImproved());\n  }\n  return result.getImproved();\n};\n\n/**\n * transposes a table\n * @param  {Table} table to be transposed\n *\n * @param {Boolean} firstListAsHeaders removes first list of the table and uses it as names for the lists on the transposed table\n * @return {Table}\n * tags:matrixes\n */\nTableOperators.transpose = function(table, firstListAsHeaders) {\n  if(table == null) return null;\n  return table.getTransposed(firstListAsHeaders);\n};\n\n/**\n * divides the instances of a table in two tables: the training table and the test table\n * @param  {Table} table\n * @param  {Number} proportion proportion of training instances/test instances, between 0 and 1\n *\n * @param  {Number} mode  0:random<br>1:random with seed<br>2:shuffle\n * @param {Number} seed seed for random numbers (mode 1)\n * @return {List} list containing the two tables\n * tags:ds\n */\nTableOperators.trainingTestPartition = function(table, proportion, mode, seed) {\n  if(table == null || proportion == null) return;\n\n  mode = mode || 0;\n  seed = seed || 0;\n\n  var indexesTr = new NumberList();\n  var indexesTe = new NumberList();\n\n  var random = mode == 1 ? new NumberOperators._Alea(\"my\", seed, \"seeds\") : Math.random;\n\n  if(mode == 2) N_MOD = Math.floor(proportion / (1 - proportion) * 10);\n\n  table[0].forEach(function(id, i) {\n    if(mode == 0 ||  mode == 1) {\n      if(random() < proportion) {\n        indexesTr.push(i);\n      } else {\n        indexesTe.push(i);\n      }\n    } else {\n      if(i % N_MOD != 0) {\n        indexesTr.push(i);\n      } else {\n        indexesTe.push(i);\n      }\n    }\n  });\n\n  return new List(table.getSubListsByIndexes(indexesTr), table.getSubListsByIndexes(indexesTe));\n};\n\n/**\n * tests a model\n * @param  {NumberTable} numberTable coordinates of points\n * @param  {List} classes list of values of classes\n * @param  {Function} model function that receives two numbers and returns a guessed class\n *\n * @param  {Number} metric 0:error\n * @return {Number} metric value\n * tags:ds\n */\nTableOperators.testClassificationModel = function(numberTable, classes, model, metric) {\n  if(numberTable == null || classes == null || model == null) return null;\n\n  metric = metric || 0;\n\n  var i;\n  var nErrors = 0;\n\n  classes.forEach(function(clss, i) {\n    if(model(numberTable[0][i], numberTable[1][i]) != clss) {\n      nErrors++;\n    }\n  });\n\n  return nErrors / classes.length;\n};\n\n\n\nTableOperators.getSubListsByIndexes = function(table, indexes) {\n  var newTable = new Table();\n  newTable.name = table.name;\n  var list;\n  var newList;\n  for(var i = 0; table[i] != null; i++) {\n    list = table[i];\n    newList = instantiateWithSameType(list);\n    for(var j = 0; indexes[j] != null; j++) {\n      newList[j] = list[indexes[j]];\n    }\n    newTable[i] = newList.getImproved();\n  }\n  return newTable;\n};\n\n// old version replaced by above version Dec 1st, 2014\n// - fixed bug where descending with 'false' value gets changed to 'true'\n// - performance improvements for tables with lots of lists\n// TableOperators.sortListsByNumberList=function(table, numberList, descending){\n//  descending = descending || true;\nTableOperators.sortListsByNumberList = function(table, numberList, descending) {\n  if(descending == null) descending = true;\n\n  var newTable = instantiate(typeOf(table));\n  newTable.name = table.name;\n  var nElements = table.length;\n  var i;\n  // only need to do the sort once, not for each column\n  var indexList = numberList.clone();\n  // save original index\n  for(i = 0; i < indexList.length; i++) {\n    indexList[i] = i;\n  }\n  indexList = ListOperators.sortListByNumberList(indexList, numberList, descending);\n  // now clone and then move from original based on index\n  for(i = 0; i < nElements; i++) {\n    newTable[i] = table[i].clone();\n    for(var j = 0; j < indexList.length; j++) {\n      newTable[i][j] = table[i][indexList[j]];\n    }\n  }\n  return newTable;\n}\n\n\n/**\n * aggregates lists from a table, using one of the list of the table as the aggregation list, and based on different modes for each list\n * @param  {Table} table containing the aggregation list and lists to be aggregated\n * @param  {Number} indexAggregationList index of the aggregation list on the table\n * @param  {NumberList} indexesListsToAggregate indexs of the lists to be aggregated; typically it also contains the index of the aggregation list at the beginning, to be aggregated using mode 0 (first element) thus resulting as the list of non repeated elements\n * @param  {NumberList} modes list of modes of aggregation, these are the options:<br>0:first element<br>1:count (default)<br>2:sum<br>3:average<br>4:min<br>5:max<br>6:standard deviation<br>7:enlist (creates a list of elements)<br>8:last element<br>9:most common element<br>10:random element<br>11:indexes<br>12:count non repeated elements<br>13:enlist non repeated elements\n *\n * @param {StringList} newListsNames optional names for generated lists\n * @return {Table} aggregated table\n * tags:\n */\nTableOperators.aggregateTable = function(table, indexAggregationList, indexesListsToAggregate, modes, newListsNames){\n  indexAggregationList = indexAggregationList||0;\n\n  if(table==null || !table.length ||  table.length<indexAggregationList || indexesListsToAggregate==null || !indexesListsToAggregate.length || modes==null) return;\n\n  var aggregatorList = table[indexAggregationList];\n  var indexesTable = ListOperators.getIndexesTable(aggregatorList);\n  var newTable = new Table();\n  var newList;\n  var toAggregateList;\n  var i;\n\n  indexesListsToAggregate.forEach(function(index, i){\n    toAggregateList = table[index];\n    newList = ListOperators.aggregateList(aggregatorList, toAggregateList, i<modes.length?modes[i]:1, indexesTable)[1];\n    if(newListsNames && i<newListsNames.length) newList.name = newListsNames[i];\n    newTable.push(newList);\n  });\n\n  return newTable.getImproved();\n}\n\n\n/**\n * builds a pivot table\n * @param  {table} table\n * @param  {Number} indexFirstAggregationList index of first list\n * @param  {Number} indexSecondAggregationList index of second list\n * @param  {Number} indexListToAggregate index of list to be aggregated\n * @param  {Number} aggregationMode aggregation mode:<br>0:first element<br>1:count (default)<br>2:sum<br>3:average<br>------not yet deployed:<br>4:min<br>5:max<br>6:standard deviation<br>7:enlist (creates a list of elements)<br>8:last element<br>9:most common element<br>10:random element<br>11:indexes\n * @param {Object} nullValue value for null cases in non-numerical aggregation\n *\n * @param  {Number} resultMode result mode:<br>0:classic pivot, a table of aggregations with first aggregation list elements without repetitions in the first list, and second aggregation elements as headers of the aggregation lists<br>1:two lists for combinations of first aggregated list and second aggregated list, and a third list for aggregated values(default)\n * @return {Table}\n * tags:\n */\nTableOperators.pivotTable = function(table, indexFirstAggregationList, indexSecondAggregationList, indexListToAggregate, aggregationMode, resultMode, nullValue){\n  if(table==null || !table.length || indexFirstAggregationList==null || indexSecondAggregationList==null || indexListToAggregate==null || aggregationMode==null) return;\n\n  resultMode = resultMode||0;\n  nullValue = nullValue==null?\"\":nullValue;\n\n  var element0, element1;\n  var coordinate, indexes;\n  var listToAggregate = table[indexListToAggregate];\n\n  var newTable = new Table();\n  var sum;\n  var i, j, index;\n\n  if(resultMode==1){//two lists of elements and a list of aggregation value\n    var indexesDictionary = {};\n    var elementsDictionary = {};\n\n    table[indexFirstAggregationList].forEach(function(element0, i){\n      element1 = table[indexSecondAggregationList][i];\n      coordinate = String(element0)+\"∞\"+String(element1);\n      if(indexesDictionary[coordinate]==null){\n        indexesDictionary[coordinate]=new NumberList();\n        elementsDictionary[coordinate]=new List();\n      }\n      indexesDictionary[coordinate].push(i);\n      elementsDictionary[coordinate].push(listToAggregate[i]);\n    });\n\n    newTable[0] = new List();\n    newTable[1] = new List();\n    switch(aggregationMode){\n      case 0://first element\n        newTable[2] = new List();\n        break;\n      case 1://count\n      case 2://sum\n      case 3://average\n        newTable[2] = new NumberList();\n        break;\n    }\n\n\n    for(coordinate in indexesDictionary) {\n      indexes = indexesDictionary[coordinate];\n      newTable[0].push(table[indexFirstAggregationList][indexes[0]]);\n      newTable[1].push(table[indexSecondAggregationList][indexes[0]]);\n\n      switch(aggregationMode){\n        case 0://first element\n          newTable[2].push(listToAggregate[indexes[0]]);\n          break;\n        case 1://count\n          newTable[2].push(indexes.length);\n          break;\n        case 2://sum\n        case 3://average\n          sum = 0;\n          indexes.forEach(function(index){\n            sum+=listToAggregate[index];\n          });\n          if(aggregationMode==3) sum/=indexes.length;\n          newTable[2].push(sum);\n          break;\n      }\n    }\n\n    newTable[0] = newTable[0].getImproved();\n    newTable[1] = newTable[1].getImproved();\n\n    switch(aggregationMode){\n      case 0://first element\n        newTable[2] = newTable[2].getImproved();\n        break;\n    }\n\n    return newTable;\n  }\n\n\n  ////////////////////////resultMode==0, a table whose first list is the first aggregation list, and each i+i list is the aggregations with elements for the second aggregation list\n\n  newTable[0] = new List();\n\n  var elementsPositions0 = {};\n  var elementsPositions1 = {};\n\n  var x, y;\n  var element;\n\n  table[indexFirstAggregationList].forEach(function(element0, i){\n    element1 = table[indexSecondAggregationList][i];\n    element = listToAggregate[i];\n\n    y = elementsPositions0[String(element0)];\n    if(y==null){\n      newTable[0].push(element0);\n      y = newTable[0].length-1;\n      elementsPositions0[String(element0)] = y;\n    }\n\n    x = elementsPositions1[String(element1)];\n    if(x==null){\n      switch(aggregationMode){\n        case 0:\n          newList = new List();\n          break;\n        case 1:\n        case 2:\n        case 3:\n          newList = new NumberList();\n          break;\n      }\n      newTable.push(newList);\n      newList.name = String(element1);\n      x = newTable.length-1;\n      elementsPositions1[String(element1)] = x;\n    }\n\n    switch(aggregationMode){\n      case 0://first element\n        if(newTable[x][y]==null) newTable[x][y]=element;\n        break;\n      case 1://count\n        if(newTable[x][y]==null) newTable[x][y]=0;\n        newTable[x][y]++;\n        break;\n      case 2://sum\n        if(newTable[x][y]==null) newTable[x][y]=0;\n        newTable[x][y]+=element;\n        break;\n      case 3://average\n        if(newTable[x][y]==null) newTable[x][y]=[0,0];\n        newTable[x][y][0]+=element;\n        newTable[x][y][1]++;\n        break;\n    }\n\n  });\n\n  switch(aggregationMode){\n    case 0://first element\n      for(i=1; i<newTable.length; i++){\n        if(newTable[i]==null) newTable[i]=new List();\n\n        newTable[0].forEach(function(val, j){\n          if(newTable[i][j]==null) newTable[i][j]=nullValue;\n        });\n\n        newTable[i] = newTable[i].getImproved();\n      }\n      break;\n    case 1://count\n    case 2://sum\n      for(i=1; i<newTable.length; i++){\n        if(newTable[i]==null) newTable[i]=new NumberList();\n        newTable[0].forEach(function(val, j){\n          if(newTable[i][j]==null) newTable[i][j]=0;\n        });\n      }\n      break;\n    case 3://average\n      for(i=1; i<newTable.length; i++){\n        if(newTable[i]==null) newTable[i]=new NumberList();\n        newTable[0].forEach(function(val, j){\n          if(newTable[i][j]==null){\n            newTable[i][j]=0;\n          } else {\n            newTable[i][j]=newTable[i][j][0]/newTable[i][j][1];\n          }\n        });\n      }\n      break;\n  }\n\n  return newTable;\n}\n\n\n\n/**\n * aggregates a table\n * @param  {Table} table to be aggregated, deprecated: a new more powerful method has been built\n * @param  {Number} nList list in the table used as basis to aggregation\n * @param  {Number} mode mode of aggregation, 0:picks first element 1:adds numbers, 2:averages\n * @return {Table} aggregated table\n * tags:deprecated\n */\nTableOperators.aggregateTableOld = function(table, nList, mode) {\n  nList = nList == null ? 0 : nList;\n  if(table == null || table[0] == null || table[0][0] == null || table[nList] == null) return null;\n  mode = mode == null ? 0 : mode;\n\n  var newTable = new Table();\n  var i, j;\n  var index;\n  var notRepeated;\n\n  newTable.name = table.name;\n\n  for(j = 0; table[j] != null; j++) {\n    newTable[j] = new List();\n    newTable[j].name = table[j].name;\n  }\n\n  switch(mode) {\n    case 0: //leaves the first element of the aggregated subLists\n      for(i = 0; table[0][i] != null; i++) {\n        notRepeated = newTable[nList].indexOf(table[nList][i]) == -1;\n        if(notRepeated) {\n          for(j = 0; table[j] != null; j++) {\n            newTable[j].push(table[j][i]);\n          }\n        }\n      }\n      break;\n    case 1: //adds values in numberLists\n      for(i = 0; table[0][i] != null; i++) {\n        index = newTable[nList].indexOf(table[nList][i]);\n        notRepeated = index == -1;\n        if(notRepeated) {\n          for(j = 0; table[j] != null; j++) {\n            newTable[j].push(table[j][i]);\n          }\n        } else {\n          for(j = 0; table[j] != null; j++) {\n            if(j != nList && table[j].type == 'NumberList') {\n              newTable[j][index] += table[j][i];\n            }\n          }\n        }\n      }\n      break;\n    case 2: //averages values in numberLists\n      var nRepetitionsList = table[nList].getElementsRepetitionCount(false);\n      newTable = TableOperators.aggregateTableOld(table, nList, 1);\n\n      for(j = 0; newTable[j] != null; j++) {\n        if(j != nList && newTable[j].type == 'NumberList') {\n          newTable[j] = newTable[j].divide(nRepetitionsList[1]);\n        }\n      }\n\n      newTable.push(nRepetitionsList[1]);\n      break;\n  }\n  for(j = 0; newTable[j] != null; j++) {\n    newTable[j] = newTable[j].getImproved();\n  }\n  return newTable.getImproved();\n};\n\n/**\n * counts pairs of elements in same positions in two lists (the result is the adjacent matrix of the network defined by pairs)\n * @param  {Table} table with at least two lists\n * @return {NumberTable}\n * tags:\n */\nTableOperators.getCountPairsMatrix = function(table) {\n  if(table == null || table.length < 2 || table[0] == null || table[0][0] == null) return null;\n\n  var list0 = table[0].getWithoutRepetitions();\n  var list1 = table[1].getWithoutRepetitions();\n\n  var matrix = new NumberTable(list1.length);\n\n  list1.forEach(function(element1, i) {\n    matrix[i].name = String(element1);\n    list0.forEach(function(element0, j) {\n      matrix[i][j] = 0;\n    });\n  });\n\n  table[0].forEach(function(element0, i) {\n    element1 = table[1][i];\n    matrix[list1.indexOf(element1)][list0.indexOf(element0)]++;\n  });\n\n  return matrix;\n};\n\n\n/**\n * filter a table selecting rows that have an element on one of its lists\n * @param  {Table} table\n * @param  {Number} nList list that could contain the element in several positions\n * @param  {Object} element\n * @return {Table}\n * tags:filter\n */\nTableOperators.filterTableByElementInList = function(table, nList, element) {\n  if(table == null ||  !table.length > 1 || nList == null) return;\n  if(element == null) return table;\n\n\n  var newTable = new Table();\n  var i, j;\n\n  newTable.name = table.name;\n\n  for(j = 0; table[j] != null; j++) {\n    newTable[j] = new List();\n  }\n\n  for(i = 0; table[0][i] != null; i++) {\n    if(table[nList][i] == element) {\n      for(j = 0; table[j] != null; j++) {\n        newTable[j].push(table[j][i]);\n      }\n    }\n  }\n\n  for(j = 0; newTable[j] != null; j++) {\n    newTable[j] = newTable[j].getImproved();\n  }\n\n  return newTable;\n};\n\nTableOperators.mergeDataTablesInList = function(tableList) {\n  if(tableList.length < 2) return tableList;\n\n  var merged = tableList[0];\n\n  for(var i = 1; tableList[i] != null; i++) {\n    merged = TableOperators.mergeDataTables(merged, tableList[i]);\n  }\n\n  return merged;\n};\n\n/**\n * creates a new table with an updated first List of elements and an added new numberList with the new values\n */\nTableOperators.mergeDataTables = function(table0, table1) {\n  if(table1[0].length == 0) {\n    var merged = table0.clone();\n    merged.push(ListGenerators.createListWithSameElement(table0[0].length, 0));\n    return merged;\n  }\n\n  var table = new Table();\n  var list = ListOperators.concatWithoutRepetitions(table0[0], table1[0]);\n\n  var nElements = list.length;\n\n  var nNumbers0 = table0.length - 1;\n  var nNumbers1 = table1.length - 1;\n\n  var numberTable0 = new NumberTable();\n  var numberTable1 = new NumberTable();\n\n  var element;\n  var index;\n\n  var i, j;\n\n  for(i = 0; i < nElements; i++) {\n    index = table0[0].indexOf(list[i]);\n    if(index > -1) {\n      for(var j = 0; j < nNumbers0; j++) {\n        if(i == 0) {\n          numberTable0[j] = new NumberList();\n          numberTable0[j].name = table0[j + 1].name;\n        }\n        numberTable0[j][i] = table0[j + 1][index];\n      }\n    } else {\n      for(j = 0; j < nNumbers0; j++) {\n        if(i == 0) {\n          numberTable0[j] = new NumberList();\n          numberTable0[j].name = table0[j + 1].name;\n        }\n        numberTable0[j][i] = 0;\n      }\n    }\n\n    index = table1[0].indexOf(list[i]);\n    if(index > -1) {\n      for(j = 0; j < nNumbers1; j++) {\n        if(i == 0) {\n          numberTable1[j] = new NumberList();\n          numberTable1[j].name = table1[j + 1].name;\n        }\n        numberTable1[j][i] = table1[j + 1][index];\n      }\n    } else {\n      for(j = 0; j < nNumbers1; j++) {\n        if(i == 0) {\n          numberTable1[j] = new NumberList();\n          numberTable1[j].name = table1[j + 1].name;\n        }\n        numberTable1[j][i] = 0;\n      }\n    }\n  }\n\n  table[0] = list;\n\n  for(i = 0; numberTable0[i] != null; i++) {\n    table.push(numberTable0[i]);\n  }\n  for(i = 0; numberTable1[i] != null; i++) {\n    table.push(numberTable1[i]);\n  }\n  return table;\n};\n\n/**\n * From two DataTables creates a new DataTable with combined elements in the first List, and added values in the second\n * @param {Object} table0\n * @param {Object} table1\n * @return {Table}\n */\nTableOperators.fusionDataTables = function(table0, table1) {\n  var table = table0.clone();\n  var index;\n  var element;\n  for(var i = 0; table1[0][i] != null; i++) {\n    element = table1[0][i];\n    index = table[0].indexOf(element);\n    if(index == -1) {\n      table[0].push(element);\n      table[1].push(table1[1][i]);\n    } else {\n      table[1][index] += table1[1][i];\n    }\n  }\n  return table;\n};\n\nTableOperators.completeTable = function(table, nRows, value) {\n  value = value == null ? 0 : value;\n\n  var newTable = new Table();\n  newTable.name = table.name;\n\n  var list;\n  var newList;\n  var j;\n\n  for(var i = 0; i < table.length; i++) {\n    list = table[i];\n    newList = list == null ? ListOperators.getNewListForObjectType(value) : instantiateWithSameType(list);\n    newList.name = list == null ? '' : list.name;\n    for(j = 0; j < nRows; j++) {\n      newList[j] = (list == null || list[j] == null) ? value : list[j];\n    }\n    newTable[i] = newList;\n  }\n  return newTable;\n};\n\n/**\n * filters a Table keeping the NumberLists\n * @param  {Table} table to filter<\n * @return {NumberTable}\n * tags:filter\n */\nTableOperators.getNumberTableFromTable = function(table) {\n  if(table == null ||  !table.length > 0) return null;\n\n  var i;\n  var newTable = new NumberTable();\n  newTable.name = table.name;\n  for(i = 0; table[i] != null; i++) {\n    if(table[i].type == \"NumberList\") newTable.push(table[i]);\n  }\n  return newTable;\n};\n\n/**\n * calculates de information gain of all variables in a table and a supervised variable\n * @param  {Table} variablesTable\n * @param  {List} supervised\n * @return {NumberList}\n * tags:ds\n */\nTableOperators.getVariablesInformationGain = function(variablesTable, supervised) {\n  if(variablesTable == null) return null;\n\n  var igs = new NumberList();\n  variablesTable.forEach(function(feature) {\n    igs.push(ListOperators.getInformationGain(feature, supervised));\n  });\n  return igs;\n};\n\nTableOperators.splitTableByCategoricList = function(table, list) {\n  if(table == null || list == null) return null;\n\n  var childrenTable;\n  var tablesList = new List();\n  var childrenObject = {};\n  var N = list.length;\n\n  list.forEach(function(element, i) {\n    childrenTable = childrenObject[element];\n    if(childrenTable == null) {\n      childrenTable = new Table();\n      childrenObject[element] = childrenTable;\n      tablesList.push(childrenTable);\n      table.forEach(function(list, j) {\n        childrenTable[j] = new List();\n        childrenTable[j].name = list.name;\n      });\n      childrenTable._element = element;\n    }\n    table.forEach(function(list, j) {\n      childrenTable[j].push(table[j][i]);\n    });\n  });\n\n  return tablesList;\n};\n\n/**\n * builds a decision tree based on a variables table and a supervised variable\n * @param  {Table} variablesTable\n * @param  {List} supervised\n * @param {Object} supervisedValue main value in supervised list (associated with blue)\n *\n * @param {Number} min_entropy minimum value of entropy on nodes (0.2 default)\n * @param {Number} min_size_node minimum population size associated with node (10 default)\n * @param {Number} min_info_gain minimum information gain by splitting by best feature (0.002 default)\n * @param {Boolean} generatePattern generates a pattern of points picturing proprtion of followed class in node\n * @return {Tree}\n * tags:ds\n */\nTableOperators.buildDecisionTree = function(variablesTable, supervised, supervisedValue, min_entropy, min_size_node, min_info_gain, generatePattern) {\n  if(variablesTable == null ||  supervised == null || supervisedValue == null) return;\n\n  min_entropy = min_entropy == null ? 0.2 : min_entropy;\n  min_size_node = min_size_node || 10;\n  min_info_gain = min_info_gain || 0.002;\n\n  var indexes = NumberListGenerators.createSortedNumberList(supervised.length);\n  var tree = new Tree();\n\n  TableOperators._buildDecisionTreeNode(tree, variablesTable, supervised, 0, min_entropy, min_size_node, min_info_gain, null, null, supervisedValue, indexes, generatePattern);\n\n  return tree;\n};\n\n\nTableOperators._buildDecisionTreeNode = function(tree, variablesTable, supervised, level, min_entropy, min_size_node, min_info_gain, parent, value, supervisedValue, indexes, generatePattern) {\n  var entropy = ListOperators.getListEntropy(supervised, supervisedValue);\n\n\n  if(entropy >= min_entropy) {\n    var informationGains = TableOperators.getVariablesInformationGain(variablesTable, supervised);\n    var maxIg = 0;\n    var iBestFeature = 0;\n    informationGains.forEach(function(ig, i) {\n      if(ig > maxIg) {\n        maxIg = ig;\n        iBestFeature = i;\n      }\n    });\n  }\n\n  var subDivide = entropy >= min_entropy && maxIg > min_info_gain && supervised.length >= min_size_node;\n\n  var id = tree.nodeList.getNewId();\n  var name = (value == null ? '' : value + ':') + (subDivide ? variablesTable[iBestFeature].name : 'P=' + supervised._biggestProbability + '(' + supervised._mostRepresentedValue + ')');\n  var node = new Node(id, name);\n\n  tree.addNodeToTree(node, parent);\n\n  if(parent == null) {\n    tree.informationGainTable = new Table();\n    tree.informationGainTable[0] = variablesTable.getNames();\n    if(informationGains) {\n      tree.informationGainTable[1] = informationGains.clone();\n      tree.informationGainTable = tree.informationGainTable.getListsSortedByList(informationGains, false);\n    }\n  }\n\n  node.entropy = entropy;\n  node.weight = supervised.length;\n  node.supervised = supervised;\n  node.indexes = indexes;\n  node.value = value;\n  node.mostRepresentedValue = supervised._mostRepresentedValue;\n  node.biggestProbability = supervised._biggestProbability;\n  node.valueFollowingProbability = supervised._P_valueFollowing;\n  node.lift = node.valueFollowingProbability / tree.nodeList[0].valueFollowingProbability; //Math.log(node.valueFollowingProbability/tree.nodeList[0].valueFollowingProbability)/Math.log(2);\n\n\n  if(level < 2) {\n    console.log('\\nlevel', level);\n    console.log('supervised.countElement(supervisedValue)', supervised.countElement(supervisedValue));\n    console.log('entropy', entropy);\n    console.log('value', value);\n    console.log('name', name);\n    console.log('supervised.name', supervised.name);\n    console.log('supervised.length', supervised.length);\n    console.log('supervisedValue', supervisedValue);\n    console.log('supervised._biggestProbability, supervised._P_valueFollowing', supervised._biggestProbability, supervised._P_valueFollowing);\n    console.log('node.valueFollowingProbability (=supervised._P_valueFollowing):', node.valueFollowingProbability);\n    console.log('tree.nodeList[0].valueFollowingProbability', tree.nodeList[0].valueFollowingProbability);\n    console.log('node.biggestProbability (=_biggestProbability):', node.biggestProbability);\n    console.log('node.mostRepresentedValue:', node.mostRepresentedValue);\n    console.log('node.mostRepresentedValue==supervisedValue', node.mostRepresentedValue == supervisedValue);\n  }\n\n  node._color = TableOperators._decisionTreeColorScale(1 - node.valueFollowingProbability);\n\n  if(generatePattern) {\n    var newCanvas = document.createElement(\"canvas\");\n    newCanvas.width = 150;\n    newCanvas.height = 100;\n    var newContext = newCanvas.getContext(\"2d\");\n    newContext.clearRect(0, 0, 150, 100);\n\n    TableOperators._decisionTreeGenerateColorsMixture(newContext, 150, 100, ['blue', 'red'],\n\t\t\tnode.mostRepresentedValue==supervisedValue?\n\t\t\t\t[Math.floor(node.biggestProbability*node.weight), Math.floor((1-node.biggestProbability)*node.weight)]\n\t\t\t\t:\n\t\t\t\t[Math.floor((1-node.biggestProbability)*node.weight), Math.floor(node.biggestProbability*node.weight)]\n    );\n\n    var img = new Image();\n    img.src = newCanvas.toDataURL();\n    node.pattern = newContext.createPattern(img, \"repeat\");\n  }\n\n\n  if(!subDivide) {\n    return node;\n  }\n\n  node.bestFeatureName = variablesTable[iBestFeature].name;\n  node.iBestFeature = iBestFeature;\n  node.informationGain = maxIg;\n\n  var expanded = variablesTable.concat([supervised, indexes]);\n\n  var tables = TableOperators.splitTableByCategoricList(expanded, variablesTable[iBestFeature]);\n  var childTable;\n  var childSupervised;\n  var childIndexes;\n  var newNode;\n\n  tables.forEach(function(expandedChild) {\n    childTable = expandedChild.getSubList(0, expandedChild.length - 3);\n    childSupervised = expandedChild[expandedChild.length - 2];\n    childIndexes = expandedChild[expandedChild.length - 1];\n    TableOperators._buildDecisionTreeNode(tree, childTable, childSupervised, level + 1, min_entropy, min_size_node, min_info_gain, node, expandedChild._element, supervisedValue, childIndexes, generatePattern);\n  });\n\n  node.toNodeList = node.toNodeList.getSortedByProperty('valueFollowingProbability', false);\n\n  return node;\n};\n\nTableOperators._decisionTreeColorScale = function(value) {\n  var rr = value < 0.5 ? Math.floor(510 * value) : 255;\n  var gg = value < 0.5 ? Math.floor(510 * value) : Math.floor(510 * (1 - value));\n  var bb = value < 0.5 ? 255 : Math.floor(510 * (1 - value));\n\n  return 'rgb(' + rr + ',' + gg + ',' + bb + ')';\n};\n\nTableOperators._decisionTreeGenerateColorsMixture = function(ctxt, width, height, colors, weights){\n  var x, y, i; //, rgb;\n  var allColors = ListGenerators.createListWithSameElement(weights[0], colors[0]);\n\n  for(i = 1; colors[i] != null; i++) {\n    allColors = allColors.concat(ListGenerators.createListWithSameElement(weights[i], colors[i]));\n  }\n\n  for(x = 0; x < width; x++) {\n    for(y = 0; y < height; y++) {\n      i = (x + y * width) * 4;\n      ctxt.fillStyle = allColors.getRandomElement();\n      ctxt.fillRect(x, y, 1, 1);\n    }\n  }\n};","import List from \"src/dataStructures/lists/List\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport TableOperators from \"src/operators/lists/TableOperators\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport { typeOf, instantiate, instantiateWithSameType } from \"src/tools/utils/code/ClassUtils\";\n\nfunction ListOperators() {}\nexport default ListOperators;\n\n\n/**\n * gets an element in a specified position from a List\n * @param  {List} list\n *\n * @param  {Number} index\n * @return {Object}\n * tags:\n */\nListOperators.getElement = function(list, index) {\n  if(list == null) return null;\n  index = index == null ? 0 : index % list.length;\n  return list[index];\n};\n\n/**\n * multi-ouput operator that gives acces to individual elements\n * @param  {List} list\n *\n * @param  {Number} fromIndex (default 0)\n * @return {Object} first Object\n * @return {Object} second Object\n * @return {Object} third Object\n * @return {Object} fourth Object\n * @return {Object} fifth Object\n * @return {Object} sisxth Object\n * @return {Object} seventh Object\n * @return {Object} eight Object\n * @return {Object} ninth Object\n * @return {Object} tenth Object\n * tags:\n */\nListOperators.getFirstElements = function(list, fromIndex) {\n  if(list == null) return null;\n\n  fromIndex = fromIndex == null ? 0 : Number(fromIndex);\n\n  return [\n  {\n    type: \"Object\",\n    name: \"first value\",\n    description: \"first value\",\n    value: list[fromIndex + 0]\n  },\n  {\n    type: \"Object\",\n    name: \"second value\",\n    description: \"second value\",\n    value: list[fromIndex + 1]\n  },\n  {\n    type: \"Object\",\n    name: \"third value\",\n    description: \"third value\",\n    value: list[fromIndex + 2]\n  },\n  {\n    type: \"Object\",\n    name: \"fourth value\",\n    description: \"fourth value\",\n    value: list[fromIndex + 3]\n  },\n  {\n    type: \"Object\",\n    name: \"fifth value\",\n    description: \"fifth value\",\n    value: list[fromIndex + 4]\n  },\n  {\n    type: \"Object\",\n    name: \"sixth value\",\n    description: \"sixth value\",\n    value: list[fromIndex + 5]\n  },\n  {\n    type: \"Object\",\n    name: \"seventh value\",\n    description: \"seventh value\",\n    value: list[fromIndex + 6]\n  },\n  {\n    type: \"Object\",\n    name: \"eight value\",\n    description: \"eight value\",\n    value: list[fromIndex + 7]\n  },\n  {\n    type: \"Object\",\n    name: \"ninth value\",\n    description: \"ninth value\",\n    value: list[fromIndex + 8]\n  },\n  {\n    type: \"Object\",\n    name: \"tenth value\",\n    description: \"tenth value\",\n    value: list[fromIndex + 9]\n  }];\n};\n\n\n/**\n * first position of element in list (-1 if element doesn't belong to the list)\n * @param  {List} list\n * @param  {Object} element\n * @return {Number}\n * tags:\n */\nListOperators.indexOf = function(list, element) {\n  return list.indexOf(element);\n};\n\n/**\n * concats lists\n * @param  {List} list0\n * @param  {List} list1\n *\n * @param  {List} list2\n * @param  {List} list3\n * @param  {List} list4\n * @return {List} list5\n * tags:\n */\nListOperators.concat = function() {\n  if(arguments == null || arguments.length == 0 ||  arguments[0] == null) return null;\n  if(arguments.length == 1) return arguments[0];\n\n  var i;\n  var list = arguments[0].concat(arguments[1]);\n  for(i = 2; arguments[i]; i++) {\n    list = list.concat(arguments[i]);\n  }\n  return list.getImproved();\n};\n\n/**\n * assembles a List\n * @param  {Object} argument0\n *\n * @param  {Object} argument1\n * @param  {Object} argument2\n * @param  {Object} argument3\n * @param  {Object} argument4\n * @return {List}\n * tags:\n */\nListOperators.assemble = function() {\n  return List.fromArray(Array.prototype.slice.call(arguments, 0)).getImproved();\n};\n\n\n\n/**\n * returns a table with two Lists: words and occurrences\n * @param {List} list\n *\n * @param {Boolean} sortListsByOccurrences optional, true by default, common words first\n * @param {Boolean} consecutiveRepetitions optional false by default, if true only counts consecutive repetitions\n * @param {Number} optional limit, limits the size of the lists\n * @return {Table}\n * tags:count,toimprove\n */\nListOperators.countElementsRepetitionOnList = function(list, sortListsByOccurrences, consecutiveRepetitions, limit) { //transform this, use dictionary instead of indexOf !!!!!!!\n  if(list == null) return;\n\n  sortListsByOccurrences = sortListsByOccurrences == null ? true : sortListsByOccurrences;\n  consecutiveRepetitions = consecutiveRepetitions || false;\n  limit = limit == null ? 0 : limit;\n\n  var obj;\n  var elementList = instantiate(typeOf(list));\n  var numberList = new NumberList();\n  var index;\n  var i;\n\n  if(consecutiveRepetitions) {\n    if(list.length == 0) return null;\n    var previousElement = list[0];\n    elementList.push(previousElement);\n    numberList.push(1);\n    for(i = 1; i < nElements; i++) {\n      obj = list[i];\n      if(obj == previousElement) {\n        numberList[numberList.length - 1] = numberList[numberList.length - 1] + 1;\n      } else {\n        elementList.push(obj);\n        numberList.push(1);\n        previousElement = obj;\n      }\n    }\n  } else {\n    for(i = 0; list[i] != null; i++){\n      obj = list[i];\n      index = elementList.indexOf(obj);\n      if(index != -1) {\n        numberList[index]++;\n      } else {\n        elementList.push(obj);\n        numberList.push(1);\n      }\n    }\n  }\n\n  if(elementList.type == \"NumberList\") {\n    var table = new NumberTable();\n  } else {\n    var table = new Table();\n  }\n  table[0] = elementList;\n  table[1] = numberList;\n\n  if(sortListsByOccurrences) {\n    table = TableOperators.sortListsByNumberList(table, numberList);\n  }\n\n  if(limit != 0 && limit < elementList.length) {\n    table[0] = table[0].splice(0, limit);\n    table[1] = table[1].splice(0, limit);\n  }\n\n  return table;\n};\n\n\n/**\n * reverses a list\n * @param {List} list\n * @return {List}\n * tags:sorting\n */\nListOperators.reverse = function(list) {\n  return list.getReversed();\n};\n\n/**\n * using a table with two columns as a dictionary (first list elements to be read, second list result elements), translates a list\n * @param  {List} list to transalte\n * @param  {Table} dictionary table with two lists\n *\n * @param {Object} nullElement element to place in case no translation is found\n * @return {List}\n * tags:\n */\nListOperators.translateWithDictionary = function(list, dictionary, nullElement) {\n  var newList = new List();\n  list.forEach(function(element, i) {\n    var index = dictionary[0].indexOf(element);\n    if(nullElement != null) {\n      newList[i] = index == -1 ? nullElement : dictionary[1][index];\n    } else {\n      newList[i] = index == -1 ? list[i] : dictionary[1][index];\n    }\n  });\n  return newList.getImproved();\n};\n\n\n// ListOperators.getIndexesOfElements=function(list, elements){\n// \tvar numberList = new NumberList();\n// \tvar i;\n// \tfor(i=0; elements[i]!=null; i++){\n// \t\tnumberList[i] = list.indexOf(elements[i]);\n// \t}\n// \treturn numberList;\n// }\n\n\n// ListOperators.countOccurrencesOnList=function(list){\n// \tvar occurrences=new NumberList();\n// \tvar nElements=list.length;\n// \tfor(var i=0; list[i]!=null; i++){\n// \t\toccurrences.push(this.getIndexesOfElement(list,list[i]).length);\n// \t}\n// \treturn occurrences;\n// }\n\n\nListOperators.sortListByNumberList = function(list, numberList, descending) {\n  if(descending == null) descending = true;\n  if(numberList.length == 0) return list;\n  var newNumberList;\n\n  var pairs = [];\n  var newList = instantiate(typeOf(list));\n  var i;\n\n  for(i = 0; list[i] != null; i++) {\n    pairs.push([list[i], numberList[i]]);\n  }\n\n\n  if(descending) {\n    pairs.sort(function(a, b) {\n      if(a[1] < b[1]) return 1;\n      return -1;\n    });\n  } else {\n    pairs.sort(function(a, b) {\n      if(a[1] < b[1]) return -1;\n      return 1;\n    });\n  }\n\n  for(i = 0; pairs[i] != null; i++) {\n    newList.push(pairs[i][0]);\n  }\n  newList.name = list.name;\n  return newList;\n};\n\n\nListOperators.sortListByIndexes = function(list, indexedArray) {\n  var newList = instantiate(typeOf(list));\n  newList.name = list.name;\n  var nElements = list.length;\n  var i;\n  for(i = 0; i < nElements; i++) {\n    newList.push(list[indexedArray[i]]);\n  }\n  return newList;\n};\n\n\nListOperators.concatWithoutRepetitions = function() { //?\n  var i;\n  var newList = arguments[0].clone();\n  for(i = 1; i < arguments.length; i++) {\n    var addList = arguments[i];\n    var nElements = addList.length;\n    for(var i = 0; i < nElements; i++) {\n      if(newList.indexOf(addList[i]) == -1) newList.push(addList[i]);\n    }\n  }\n  return newList.getImproved();\n};\n\n/**\n * builds a table: a list of sub-lists from the original list, each sub-list determined size subListsLength, and starting at certain indexes separated by step\n * @param  {List} list\n * @param  {Number} subListsLength length of each sub-list\n * @param  {Number} step slifing step\n * @param  {Number} finalizationMode<br>0:all sub-Lists same length, doesn't cover the List<br>1:last sub-List catches the last elements, with lesser length<br>2:all lists same length, last sub-list migth contain elements from the beginning of the List\n * @return {Table}\n * tags:\n */\nListOperators.slidingWindowOnList = function(list, subListsLength, step, finalizationMode) {\n  finalizationMode = finalizationMode || 0;\n  var table = new Table();\n  var newList;\n  var nElements = list.length;\n  var nList;\n  var nRow;\n  var i;\n  var j;\n\n  step = Math.max(1, step);\n\n  switch(finalizationMode) {\n    case 0: //all sub-Lists same length, doesn't cover the List\n      for(i = 0; i < nElements; i += step) {\n        if(i + subListsLength <= nElements) {\n          newList = new List();\n          for(j = 0; j < subListsLength; j++) {\n            newList.push(list[i + j]);\n          }\n          table.push(newList.getImproved());\n        }\n      }\n      break;\n    case 1: //last sub-List catches the last elements, with lesser length\n      for(i = 0; i < nElements; i += step) {\n        newList = new List();\n        for(j = 0; j < Math.min(subListsLength, nElements - i); j++) {\n          newList.push(list[i + j]);\n        }\n        table.push(newList.getImproved());\n      }\n      break;\n    case 2: //all lists same length, last sub-list migth contain elements from the beginning of the List\n      for(i = 0; i < nElements; i += step) {\n        newList = new List();\n        for(j = 0; j < subListsLength; j++) {\n          newList.push(list[(i + j) % nElements]);\n        }\n        table.push(newList.getImproved());\n      }\n      break;\n  }\n\n  return table.getImproved();\n};\n\nListOperators.getNewListForObjectType = function(object) {\n  var newList = new List();\n  newList[0] = object;\n  return instantiateWithSameType(newList.getImproved());\n};\n\nListOperators.listsIntersect = function(list0, list1) {\n  var list = list0.length < list1.length ? list0 : list1;\n  var otherList = list0 == list ? list1 : list0;\n  for(var i = 0; list[i] != null; i++) {\n    if(otherList.indexOf(list[i]) != -1) return true;\n  }\n  return false;\n};\n\n\n/**\n * creates a List that contains the union of two List (removing repetitions)\n * @param  {List} list0 first list\n * @param  {List} list1 second list\n *\n * @return {List} the union of both Lists\n * tags:\n */\nListOperators.union = function(list0, list1) {//TODO: this should be refactored, and placed in ListOperators\n  if(list0==null || list1==null) return;\n\n  var obj = {};\n  var i, k;\n\n  for(i = 0; list0[i]!=null; i++) obj[list0[i]] = list0[i];\n  for(i = 0; list1[i]!=null; i++) obj[list1[i]] = list1[i];\n  var union = new List();\n  for(k in obj) {\n    //if(obj.hasOwnProperty(k)) // <-- optional\n    union.push(obj[k]);\n  }\n  return union;\n};\n\n\n/**\n * returns the list of common elements between two lists (deprecated, use union instead)\n * @param  {List} list0\n * @param  {List} list1\n * @return {List}\n * tags:deprecated\n */\nListOperators.getCommonElements = function(list0, list1) {\n  var nums = list0.type == 'NumberList' && list1.type == 'NumberList';\n  var strs = list0.type == 'StringList' && list1.type == 'StringList';\n  var newList = nums ? new NumberList() : (strs ? new StringList() : new List());\n\n  var list = list0.length < list1.length ? list0 : list1;\n  var otherList = list0 == list ? list1 : list0;\n\n  for(var i = 0; list[i] != null; i++) {\n    if(otherList.indexOf(list[i]) != -1) newList.push(list[i]);\n  }\n  if(nums || strs) return newList;\n  return newList.getImproved();\n};\n\n\n\n\n/**\n * creates a List that contains the union of two List (removing repetitions) (deprecated, use union instead)\n * @param  {List} list0\n * @param  {List} list A\n * @param  {List} list B\n *\n * @return {List} the union of both NumberLists\n * tags:deprecated\n */\nListOperators.unionLists = function(x, y) {\n  // Borrowed from here: http://stackoverflow.com/questions/3629817/getting-a-union-of-two-arrays-in-javascript\n  var result;\n  if(x.type != x.type || (x.type != \"StringList\" && x.type != \"NumberList\"))\n  {\n    // To-do: call generic method here (not yet implemented)\n    //console.log( \"ListOperators.unionLists for type '\" + x.type + \"' or '\" + y.type + \"' not yet implemented\" );\n    return x.concat(y).getWithoutRepetitions();\n    return null;\n  }\n  else\n  {\n    var obj = {};\n    for(var i = x.length - 1; i >= 0; --i)\n      obj[x[i]] = x[i];\n    for(var i = y.length - 1; i >= 0; --i)\n      obj[y[i]] = y[i];\n    result = x.type == \"StringList\" ? new StringList() : new NumberList();\n    for(var k in obj) {\n      if(obj.hasOwnProperty(k)) // <-- optional\n        result.push(obj[k]);\n    }\n  }\n  return result;\n};\n\n/**\n * creates a List that contains the intersection of two List (elements present in BOTH lists)\n *\n * @param  {List} list0 list A\n * @param  {List} list1 list B\n *\n * @return {List} intersection of both NumberLists\n *\n * tags:\n */\nListOperators.intersection = function(list0, list1) {\n  if(list0==null || list1==null) return;\n\n  var element;\n  var dictionary = {};\n  var dictionaryIntersected = {};\n  var intersection = new List();\n\n  list0.forEach(function(element){\n    dictionary[element] = true;\n  });\n  list1.forEach(function(element){\n    if(dictionary[element] && dictionaryIntersected[element]==null){\n      dictionaryIntersected[element]=true;\n      intersection.push(element);\n    }\n  });\n  return intersection.getImproved();\n};\n\n/**\n * calculates Jaccard index |list0 ∩ list1|/|list0 ∪ list1| see: https://en.wikipedia.org/wiki/Jaccard_index\n * @param  {List} list0\n * @param  {List} list1\n * @return {Number}\n * tags:\n */\nListOperators.jaccardIndex = function(list0, list1) {//TODO: see if this can be more efficient, maybe one idctionar for doing union and interstection at the same time\n  return ListOperators.intersection(list0, list1).length/ListOperators.unionLists(list0, list1).length;\n}\n\n/**\n * calculates Jaccard distance 1 - |list0 ∩ list1|/|list0 ∪ list1| see: https://en.wikipedia.org/wiki/Jaccard_index\n * @param  {List} list0\n * @param  {List} list1\n * @return {Number}\n * tags:\n */\nListOperators.jaccardDistance = function(list0, list1) {\n  return 1 - ListOperators.jaccardIndex(list0, list1);\n}\n\n/**\n * builds a dictionary that matches an element of a List with all its indexes on the List (indexesDictionary[element] --> numberList of indexes of element on list)\n * @param  {List} list\n * @return {Object}\n * tags:\n */\nListOperators.getIndexesDictionary = function(list){\n  var indexesDictionary = {};\n  var i;\n\n  list.forEach(function(element, i){\n    if(indexesDictionary[element]==null) indexesDictionary[element]=new NumberList();\n    indexesDictionary[element].push(i);\n  });\n\n  return indexesDictionary;\n}\n\nListOperators.getIndexesTable = function(list){\n  var indexesTable = new Table();\n  indexesTable[0] = new List();\n  indexesTable[1] = new NumberTable();\n  var indexesDictionary = {};\n  var indexOnTable;\n  var i;\n\n  list.forEach(function(element, i){\n    indexOnTable = indexesDictionary[element]\n    if(indexOnTable==null){\n      indexesTable[0].push(element);\n      indexesTable[1].push(new NumberList(i));\n      indexesDictionary[element]=indexesTable[0].length-1;\n    } else {\n      indexesTable[1][indexOnTable].push(i)\n    }\n  });\n\n  indexesTable[0] = indexesTable[0].getImproved();\n\n  return indexesTable;\n}\n\n/**\n * aggregates values of a list using an aggregator list as reference\n *\n * @param  {List} aggregatorList aggregator list that typically contains several repeated elements\n * @param  {List} toAggregateList list of elements that will be aggregated\n * @param  {Number} mode aggregation modes:<br>0:first element<br>1:count (default)<br>2:sum<br>3:average<br>4:min<br>5:max<br>6:standard deviation<br>7:enlist (creates a list of elements)<br>8:last element<br>9:most common element<br>10:random element<br>11:indexes<br>12:count non repeated elements<br>13:enlist non repeated elements\n * @param  {Table} indexesTable optional already calculated table of indexes of elements on the aggregator list (if didn't provided, the method calculates it)\n * @return {Table} contains a list with non repeated elements on the first list, and the aggregated elements on a second list\n * tags:\n */\nListOperators.aggregateList = function(aggregatorList, toAggregateList, mode, indexesTable){\n  if(aggregatorList==null || toAggregateList==null) return null;\n  var table = new Table();\n\n  if(indexesTable==null) indexesTable = ListOperators.getIndexesTable(aggregatorList);\n\n  if(mode==11) return indexesTable;\n\n  table[0] = indexesTable[0];\n\n  if(mode==0 && aggregatorList==toAggregateList){\n    table[1] = indexesTable[0];\n    return table;\n  }\n\n  mode = mode==null?0:mode;\n\n  switch(mode){\n    case 0://first element\n      table[1] = new List();\n      var list;\n      indexesTable[1].forEach(function(indexes){\n        table[1].push(toAggregateList[indexes[0]]);\n      });\n      table[1] = table[1].getImproved();\n      return table;\n    case 1://count\n      table[1] = new NumberList();\n      indexesTable[1].forEach(function(indexes){\n        table[1].push(indexes.length);\n      });\n      return table;\n    case 2://sum\n    case 3://average\n      var sum;\n      table[1] = new NumberList();\n      indexesTable[1].forEach(function(indexes){\n        sum = 0;\n        indexes.forEach(function(index){\n          sum+=toAggregateList[index];\n        });\n        if(mode==3) sum/=indexes.length;\n        table[1].push(sum);\n      });\n      return table;\n    case 4://min\n      var min;\n      table[1] = new NumberList();\n      indexesTable[1].forEach(function(indexes){\n        min = 99999999999;\n        indexes.forEach(function(index){\n          min=Math.min(min, toAggregateList[index]);\n        });\n        table[1].push(min);\n      });\n      return table;\n    case 5://max\n      var max;\n      table[1] = new NumberList();\n      indexesTable[1].forEach(function(indexes){\n        max = -99999999999;\n        indexes.forEach(function(index){\n          max=Math.max(max, toAggregateList[index]);\n        });\n        table[1].push(max);\n      });\n      return table;\n    case 6://standard deviation\n      var average;\n      table = ListOperators.aggregateList(aggregatorList, toAggregateList, 3, indexesTable);\n      indexesTable[1].forEach(function(indexes, i){\n        sum = 0;\n        average = table[1][i];\n        indexes.forEach(function(index){\n          sum += Math.pow(toAggregateList[index] - average, 2);\n        });\n        table[1][i] = Math.sqrt(sum/indexes.length);\n      });\n      return table;\n    case 7://enlist\n      table[1] = new Table();\n      var list;\n      indexesTable[1].forEach(function(indexes){\n        list = new List();\n        table[1].push(list)\n        indexes.forEach(function(index){\n          list.push(toAggregateList[index]);\n        });\n        list = list.getImproved();\n      });\n      return table.getImproved();\n    case 8://last element\n      table[1] = new List();\n      var list;\n      indexesTable[1].forEach(function(indexes){\n        table[1].push(toAggregateList[indexes[indexes.length-1]]);\n      });\n      table[1] = table[1].getImproved();\n      return table;\n    case 9://most common\n      table[1] = new List();\n      var elementsTable = ListOperators.aggregateList(aggregatorList, toAggregateList, 5, indexesTable);\n      elementsTable[1].forEach(function(elements){\n        table[1].push(elements.getMostRepeatedElement());\n      });\n      table[1] = table[1].getImproved();\n      return table;\n    case 10://random\n      table[1] = new List();\n      var list;\n      indexesTable[1].forEach(function(indexes){\n        table[1].push( toAggregateList[indexes[ Math.floor(Math.random()*indexes.length) ]] );\n      });\n      table[1] = table[1].getImproved();\n      return table;\n    case 11://indexes (returned previosuly)\n      break;\n    case 12://count non repeated\n      table[1] = new NumberList();\n      var elementsTable = ListOperators.aggregateList(aggregatorList, toAggregateList, 7, indexesTable);\n      elementsTable[1].forEach(function(elements){\n        table[1].push(elements.getWithoutRepetitions().length);\n      });\n      return table;\n    case 13://enlist non repeated\n      table[1] = new List();\n      var elementsTable = ListOperators.aggregateList(aggregatorList, toAggregateList, 7, indexesTable);\n      elementsTable[1].forEach(function(elements){\n        table[1].push(elements.getWithoutRepetitions());\n      });\n      table[1] = table[1].getImproved();\n      return table;\n  }\n\n  return null;\n}\n\n/**\n * Analyses wether two lists are categorical identical, one is subcategorical to the other, or there's no relation\n * @param  {List} list0\n * @param  {List} list1\n * @return {Number} 0:no relation, 1:categorical identical, 2:list0 subcategorical to list1, 3:list1 subcategorical to list0\n * tags:\n */\nListOperators.subCategoricalAnalysis = function(list0, list1){\n  if(list0==null || list1==null) return;\n\n  var dictionary = {};\n  var element, projection;\n  var i;\n  var list0SubCategorical = true;\n  for(i=0; list0[i]!=null; i++){\n    element = list0[i];\n    projection = dictionary[element];\n    if(projection==null){\n      dictionary[element] = list1[i]\n    } else if(projection!=list1[i]){\n      list0SubCategorical = false;\n      break;\n    }\n  };\n\n  dictionary = {};\n  var list1SubCategorical = true;\n  for(i=0; list1[i]!=null; i++){\n    element = list1[i];\n    projection = dictionary[element];\n    if(projection==null){\n      dictionary[element] = list0[i]\n    } else if(projection!=list0[i]){\n      list1SubCategorical = false;\n      break;\n    }\n  };\n\n  if(list1SubCategorical && list0SubCategorical) return 1;\n  if(list0SubCategorical) return 2;\n  if(list1SubCategorical) return 3;\n  return 0;\n}\n\n/**\n * calculates de entropy of a list, properties _mostRepresentedValue and _biggestProbability are added to the list\n * @param  {List} list with repeated elements (actegorical list)\n *\n * @param {Object} valueFollowing if a value is provided, the property _P_valueFollowing will be added to the list, with proportion of that value in the list\n * @return {Number}\n * tags:ds\n */\nListOperators.getListEntropy = function(list, valueFollowing) {\n  if(list == null) return;\n  if(list.length < 2) {\n    if(list.length == 1) {\n      list._mostRepresentedValue = list[0];\n      list._biggestProbability = 1;\n      list._P_valueFollowing = list[0] == valueFollowing ? 1 : 0;\n    }\n    return 0;\n  }\n\n  var table = ListOperators.countElementsRepetitionOnList(list, true);\n\n  console.log('    getListEntropy | table[0]', table[0]);\n  console.log('    getListEntropy | table[1]', table[1]);\n\n  list._mostRepresentedValue = table[0][0];\n  var N = list.length;\n  list._biggestProbability = table[1][0] / N;\n  if(table[0].length == 1) {\n    list._P_valueFollowing = list[0] == valueFollowing ? 1 : 0;\n    return 0;\n  }\n  var entropy = 0;\n\n  var norm = Math.log(table[0].length);\n  table[1].forEach(function(val) {\n    entropy -= (val / N) * Math.log(val / N) / norm;\n  });\n\n  if(valueFollowing != null) {\n    var index = table[0].indexOf(valueFollowing);\n    list._P_valueFollowing = index == -1 ? 0 : table[1][index] / N;\n  }\n\n  return entropy;\n};\n\n\n/**\n * measures how much a feature decreases entropy when segmenting by its values by a supervised variable\n * @param  {List} feature\n * @param  {List} supervised\n * @return {Number}\n * tags:ds\n */\nListOperators.getInformationGain = function(feature, supervised) {\n  if(feature == null || supervised == null || feature.length != supervised.length) return null;\n\n  var ig = ListOperators.getListEntropy(supervised);\n  var childrenObject = {};\n  var childrenLists = [];\n  var N = feature.length;\n\n  feature.forEach(function(element, i) {\n    if(childrenObject[element] == null) {\n      childrenObject[element] = new List();\n      childrenLists.push(childrenObject[element]);\n    }\n    childrenObject[element].push(supervised[i]);\n  });\n\n  childrenLists.forEach(function(cl) {\n    ig -= (cl.length / N) * ListOperators.getListEntropy(cl);\n  });\n\n  return ig;\n};\n\nListOperators.getInformationGainAnalysis = function(feature, supervised) {\n  if(feature == null || supervised == null || feature.length != supervised.length) return null;\n\n  var ig = ListOperators.getListEntropy(supervised);\n  var childrenObject = {};\n  var childrenLists = [];\n  var N = feature.length;\n  var entropy;\n  var sets = new List();\n\n  feature.forEach(function(element, i) {\n    if(childrenObject[element] == null) {\n      childrenObject[element] = new List();\n      childrenLists.push(childrenObject[element]);\n    }\n    childrenObject[element].push(supervised[i]);\n  });\n\n  childrenLists.forEach(function(cl) {\n    entropy = ListOperators.getListEntropy(cl);\n    ig -= (cl.length / N) * entropy;\n\n    sets.push({\n      children: cl,\n      entropy: entropy,\n      infoGain: ig\n    });\n  });\n\n  return sets;\n};\n\n\n/**\n * Takes a List and returns its elements grouped by identic value. Each list in the table is assigned a \"valProperty\" value which is used for sorting\n * @param  {List} list of elements to group\n * @param  {Boolean} whether the results are to be sorted or not\n * @param  {Number} mode: 0 for returning original values, 1 for indices in original list\n *\n * @param  {Boolean} fillBlanks: whether to fill missing slots or not (if data is sequential)\n * @return {Table}\n * tags:dani\n */\nListOperators.groupElements = function(list, sortedByValue, mode, fillBlanks) {\n  if(!list)\n    return;\n  var result = ListOperators._groupElements_Base(list, null, sortedByValue, mode, fillBlanks);\n  return result;\n};\n\n\n/**\n * Takes a List and returns its elements grouped by identic value. Each list in the table is assigned a \"valProperty\" value which is used for sorting\n * @param  {List} list of elements to group\n * @param  {String} name of the property to be used for grouping\n * @param  {Boolean} wether the results are to be sorted or not\n * @param  {Number} mode: 0 for returning original values, 1 for indices in original list\n *\n * @param  {Boolean} fillBlanks: whether to fill missing slots or not (if data is sequential)\n * @return {Table}\n * tags:dani\n */\nListOperators.groupElementsByPropertyValue = function(list, propertyName, sortedByValue, mode, fillBlanks) {\n  if(!list)\n    return;\n  var result = ListOperators._groupElements_Base(list, propertyName, sortedByValue, mode, fillBlanks);\n  return result;\n};\n\n\n\nListOperators._groupElements_Base = function(list, propertyName, sortedByValue, mode, fillBlanks) {\n  var result;\n\n  if(!list)\n    return;\n  if(mode == undefined)\n    mode = 0;\n  var resultOb = {};\n  var resultTable = new Table();\n  var pValue, item, minValue, maxValue;\n  for(var i = 0; i < list.length; i++) {\n    item = list[i];\n    pValue = propertyName == undefined ? item : item[propertyName];\n    if(resultOb[pValue] == undefined) {\n      resultOb[pValue] = new List();\n      resultOb[pValue].name = pValue;\n      resultOb[pValue].valProperty = pValue;\n      resultTable.push(resultOb[pValue]);\n    }\n    if(mode == 0)\n      resultOb[pValue].push(item);\n    else if(mode == 1)\n      resultOb[pValue].push(i);\n    // Update boundaries\n    if(minValue == undefined || pValue < minValue) {\n      minValue = pValue;\n    }\n    if(maxValue == undefined || pValue > maxValue) {\n      maxValue = pValue;\n    }\n  }\n\n  // Fill the blanks\n  if(fillBlanks) {\n    var numBlanks = 0;\n    for(var i = minValue; i < maxValue; i++) {\n      if(resultOb[i] == undefined) {\n        resultOb[i] = new List();\n        resultOb[i].name = i;\n        resultOb[i].valProperty = i;\n        resultTable.push(resultOb[i]);\n        numBlanks++;\n      }\n    }\n    //console.log(\"numBlanks: \", numBlanks)\n  }\n\n  // To-do: looks like getSortedByProperty is removing the valProperty from the objects\n  if(sortedByValue)\n    resultTable = resultTable.getSortedByProperty(\"name\"); // \"valProperty\"\n\n  return resultTable;\n\n};","import StringList from \"src/dataStructures/strings/StringList\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Table from \"src/dataStructures/lists/Table\";\n\nfunction StringOperators() {}\nexport default StringOperators;\n\nStringOperators.ENTER = String.fromCharCode(13);\nStringOperators.ENTER2 = String.fromCharCode(10);\nStringOperators.ENTER3 = String.fromCharCode(8232);\n\nStringOperators.SPACE = String.fromCharCode(32);\nStringOperators.SPACE2 = String.fromCharCode(160);\n\nStringOperators.TAB = \"\t\";\nStringOperators.TAB2 = String.fromCharCode(9);\n\nStringOperators.LINK_REGEX = /(^|\\s+)(https*\\:\\/\\/\\S+[^\\.\\s+])/;\nStringOperators.MAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nStringOperators.STOP_WORDS = StringList.fromArray(\"t,s,mt,rt,re,m,http,amp,a,able,about,across,after,all,almost,also,am,among,an,and,any,are,as,at,be,because,been,but,by,can,cannot,could,dear,did,do,does,either,else,ever,every,for,from,get,got,had,has,have,he,her,hers,him,his,how,however,i,if,in,into,is,it,its,just,least,let,like,likely,may,me,might,most,must,my,neither,no,nor,not,of,off,often,on,or,other,our,own,rather,said,say,says,she,should,since,so,some,than,that,the,their,them,then,there,these,they,this,tis,to,too,twas,us,wants,was,we,were,what,when,where,which,while,who,whom,why,will,with,would,yet,you,your\".split(\",\"));\n\n/**\n * splits a String by a character (entre by default)\n * @param  {String} string\n *\n * @param  {String} character\n * @return {StringList}\n * tags:\n */\nStringOperators.split = function(string, character) {\n  if(character == null) return StringOperators.splitByEnter(string);\n  return StringList.fromArray(string.split(character));\n};\n\n\n/**\n * split a String by enter (using several codifications)\n * @param  {String} string\n * @return {StringList}\n * tags:\n */\nStringOperators.splitByEnter = function(string) {\n  if(string == null) return null;\n  var stringList = StringOperators.splitString(string, \"\\n\");\n  if(stringList.length > 1) return stringList;\n  var stringList = StringOperators.splitString(string, StringOperators.ENTER2);\n  if(stringList.length > 1) return stringList;\n  var stringList = StringOperators.splitString(string, StringOperators.ENTER3);\n  if(stringList.length > 1) return stringList;\n  return new StringList(string);\n};\n\n\n/**\n * replaces in a string ocurrences of a sub-string by another string (base in replace JavaScript method)\n * @param  {String} string to be modified\n * @param  {String} subString sub-string to be replaced\n * @param  {String} replacement string to be placed instead\n * @return {String}\n * tags:\n */\nStringOperators.replaceSubString = function(string, subString, replacement) {\n  if(string == null || subString == null || replacement == null) return null;\n  return string.replace(new RegExp(subString, \"g\"), replacement);\n};\n\n/**\n * replaces in a string ocurrences of sub-strings by a string\n * @param  {String} string to be modified\n * @param  {StringList} subStrings sub-strings to be replaced\n * @param  {String} replacement string to be placed instead\n * @return {String}\n * tags:\n */\nStringOperators.replaceSubStringsByString = function(string, subStrings, replacement) {\n  if(subStrings == null) return;\n\n  var subString;\n\n  subStrings.forEach(function(subString) {\n    string = StringOperators.replaceSubString(string, subString, replacement);\n  });\n\n  return string;\n};\n\n/**\n * replaces in a string ocurrences of sub-strings by strings (1-1)\n * @param  {String} string to be modified\n * @param  {StringList} subStrings sub-strings to be replaced\n * @param  {StringList} replacements strings to be placed instead\n * @return {String}\n * tags:\n */\nStringOperators.replaceSubStringsByStrings = function(string, subStrings, replacements) {\n  if(subStrings == null || replacements == null) return;\n\n  var nElements = Math.min(subStrings.length, replacements.length);\n  var i;\n  var subString;\n\n  for(i = 0; i < nElements; i++) {\n    string = StringOperators.replaceSubString(string, subStrings[i], replacements[i]);\n  }\n\n  return string;\n};\n\n\n\n/**\n * return a substring\n * @param  {String} string\n *\n * @param  {Number} i0 init index\n * @param  {Number} length of ths substring (if null returns substring from i0 to the end)\n * @return {String}\n * tags:filter\n */\nStringOperators.substr = function(string, i0, length) {\n  i0 = i0 || 0;\n  return string.substr(i0, length);\n};\n\n/**\n * split a String by a separator (a String) and returns a StringList\n * @param  {String} string\n *\n * @param  {String} separator\n * @return {StringList}\n * tags:\n */\nStringOperators.splitString = function(string, separator) {\n  if(string == null) return null;\n  if(separator == null) separator = \",\";\n  if(typeof separator == \"string\") separator = separator.replace(\"\\\\n\", \"\\n\");\n  if(string.indexOf(separator) == -1) return new StringList(string);\n  return StringList.fromArray(string.split(separator));\n};\n\n/**\n * searches for two Strings within a String and returns the String in between\n * @param  {String} text\n * @param  {String} subString0\n *\n * @param  {String} subString1 if null returns the text after subString0\n * @return {String}\n * tags:filter\n */\nStringOperators.getFirstTextBetweenStrings = function(text, subString0, subString1) {\n  var i0 = text.indexOf(subString0);\n  if(i0 == -1) return null;\n  if(subString1 == \"\" || subString1 == null) return text.substr(i0 + subString0.length);\n  var i1 = text.indexOf(subString1, i0 + subString0.length + 1);\n  if(i1 == -1) return text.substring(i0 + subString0.length);\n  return text.substr(i0 + subString0.length, i1 - (i0 + subString0.length));\n};\n\n/**\n * searches all the Strings contained between two Strings in a String\n * @param  {String} text\n * @param  {String} subString0\n * @param  {String} subString1\n * @return {StringList}\n * tags:filter\n */\nStringOperators.getAllTextsBetweenStrings = function(text, subString0, subString1) { //TODO: improve using indexOf(string, START_INDEX)\n  if(text.indexOf(subString0) == -1) return new StringList();\n  var blocks = text.split(subString0);\n  var nBlocks = blocks.length;\n  var stringList = new StringList();\n  var block;\n  var index;\n  var i;\n  for(i = 1; i < nBlocks; i++) {\n    block = blocks[i];\n    if(subString1 == subString0) {\n      stringList.push(block);\n    } else {\n      index = block.indexOf(subString1);\n      if(index >= 0) {\n        stringList.push(block.substr(0, index));\n      }\n    }\n  }\n  return stringList;\n};\n\n/**\n * associates a value to each text in a StringList, according to number of words containg in each StringList; one lists pushes to negative values, the other to positive. A classic use would be a primitive sentimental analisis using a list of positive adjectives and a list of negative ones\n * @param  {String} string to be analized\n * @param  {StringList} negativeStrings list of 'negative' words\n * @param  {StringList} positiveStrings list of 'positive' words\n *\n * @param  {Boolean} normalizeBySize divide score by the string size\n * @return {Number}\n * tags:analysis\n */\nStringOperators.countWordsDichotomyAnalysis = function(string, negativeStrings, positiveStrings, normalizeBySize) {\n  var val = 0;\n  negativeStrings.forEach(function(word) {\n    val -= StringOperators.countWordOccurrences(string, word);\n  });\n  positiveStrings.forEach(function(word) {\n    val += StringOperators.countWordOccurrences(string, word);\n  });\n  if(normalizeBySize) val /= string.length;\n  return val;\n};\n\n\n/**\n * creates a list of urls contained in the html in <a> tags\n * @param  {String} html to be analyzied\n *\n * @param {String} urlSource optional, if provided will be used to build complete urls\n * @param {Boolean} removeHash if true removes the hastag (anchor) content of the url\n * @return {StringList} list of urls\n * tags:html\n */\nStringOperators.getLinksFromHtml = function(html, urlSource, removeHash) {\n  var doc = document.createElement(\"html\");\n  doc.innerHTML = html;\n\n  var i;\n  var links = doc.getElementsByTagName(\"a\");\n  var originalUrl, url;\n  var urls = new StringList();\n  var index;\n  var urlSourceParts;\n  var parts, blocks;\n\n  urlSource = urlSource == \"\" ? null : urlSource;\n  removeHash = removeHash == null ? false : removeHash;\n\n  if(urlSource) {\n    urlSource = urlSource.trim();\n\n    if(urlSource.substr(-5) == \".html\") {\n      urlSourceParts = urlSource.split(\"/\");\n      urlSource = urlSourceParts.slice(0, urlSourceParts.length - 1).join(\"/\");\n    }\n    if(urlSource.indexOf(-1) == \"/\") urlSource = urlSource.substr(0, urlSource.length - 1);\n    urlSourceParts = urlSource.split(\"/\");\n\n    var root = urlSource.replace(\"//\", \"**\").split(\"/\")[0].replace(\"**\", \"//\");\n  }\n\n\n  for(i = 0; i < links.length; i++) {\n    originalUrl = url = links[i].getAttribute(\"href\");\n    if(url == null) continue;\n\n    if(url.indexOf('=') != -1) url = url.split('=')[0];\n\n    //console.log(url);\n    if(urlSource && url.indexOf('http://') == -1 && url.indexOf('https://') == -1 && url.indexOf('wwww.') == -1 && url.indexOf('file:') == -1 && url.indexOf('gopher:') == -1 && url.indexOf('//') != 0) {\n      if(url.substr(0, 9) == \"../../../\") {\n        url = urlSourceParts.slice(0, urlSourceParts.length - 3).join(\"/\") + \"/\" + url.substr(9);\n      } else if(url.substr(0, 6) == \"../../\") {\n        url = urlSourceParts.slice(0, urlSourceParts.length - 2).join(\"/\") + \"/\" + url.substr(6);\n      } else if(url.substr(0, 3) == \"../\") {\n        url = urlSourceParts.slice(0, urlSourceParts.length - 1).join(\"/\") + \"/\" + url.substr(3);\n      } else if(url.charAt(0) == \"/\") {\n        url = root + url;\n      } else {\n        url = urlSource + \"/\" + url;\n      }\n    }\n    if(removeHash && url.indexOf(\"#\") != -1) url = url.split('#')[0];\n    if(url.substr(-1) == \"/\") url = url.substr(0, url.length - 1);\n\n    index = url.indexOf('/../');\n    while(index != -1) {\n      blocks = url.split('/../');\n      parts = blocks[0].replace(\"//\", \"**\").split(\"/\");\n      url = parts.slice(0, parts.length - 1).join(\"/\").replace(\"**\", \"//\") + (\"/\" + blocks.slice(1).join(\"/../\"));\n      index = url.indexOf('/../');\n    }\n\n    if(url.indexOf('./') != -1) {\n      parts = url.replace(\"//\", \"**\").split(\"/\");\n      if(parts[0].substr(-1) == \".\") {\n        parts[0] = parts[0].substr(0, parts[0].length - 1);\n        url = parts.join('/').replace(\"**\", \"//\");\n      }\n    }\n\n    url = url.trim();\n\n    if(url.substr(-1) == \"/\") url = url.substr(0, url.length - 1);\n\n    if(url == urlSource) continue;\n    //console.log(urlSource+' | '+originalUrl+' -> '+url);\n    urls.push(url);\n  }\n\n  urls = urls.getWithoutRepetitions();\n\n  return urls;\n};\n\n\n/**\n * validates is string contains another string, as string or word (space or punctuation boundaries)\n * @param {String} text string to be validated\n * @param {String} string string or word to be searched\n *\n * @param {Boolean} asWord if true a word will be searched (false by default)\n * @param {Boolean} caseSensitive (false by default)\n * @return {Boolean} returns true if string or word is contained\n */\nStringOperators.textContainsString = function(text, string, asWord, caseSensitive) {\n  text = caseSensitive ? string : text.toLowerCase();\n  string = caseSensitive ? string : string.toLowerCase();\n  return asWord ?\n    text.match(new RegExp(\"\\\\b\" + string + \"\\\\b\")).length > 0 :\n    text.indexOf(string) != -1;\n};\n\n/**\n * print a string in console\n * @param  {String} string to be printed in console\n * @param  {Boolean} frame  if true (default) prints ///////////////// on top and bottom\n * tags:\n */\nStringOperators.logInConsole = function(string, frame) {\n  frame = frame == null ? true : frame;\n  if(frame) console.log('///////////////////////////////////////////////////');\n  console.log(string);\n  if(frame) console.log('///////////////////////////////////////////////////');\n};\n\n\n\n\n//////\n\n\nStringOperators.getParenthesisContents = function(text, brackets) {\n  var contents = new StringList();\n\n  var subText = text;\n\n  var contentObject = StringOperators.getFirstParenthesisContentWithIndexes(text, brackets);\n\n  var nAttempts = 0;\n  while(contentObject.content != \"\" && contentObject.index1 < subText.length - 1 && nAttempts < text.length) {\n    contents.push(contentObject.content);\n    subText = subText.substr(contentObject.index1 + 2);\n    contentObject = StringOperators.getFirstParenthesisContentWithIndexes(subText, brackets);\n    nAttempts++;\n  }\n\n  return contents;\n};\nStringOperators.getFirstParenthesisContent = function(text, brackets) {\n  return StringOperators.getFirstParenthesisContentWithIndexes(text, brackets).content;\n};\nStringOperators.getFirstParenthesisContentWithIndexes = function(text, brackets) {\n  var open = brackets ? \"[\" : \"(\";\n  var close = brackets ? \"]\" : \")\";\n\n  var openRegEx = brackets ? /\\[/g : /\\(/g;\n  var closeRegEx = brackets ? /\\]/g : /\\)/g;\n\n  var indexOpen = text.indexOf(open);\n\n  if(indexOpen == -1) return {\n    \"content\": \"\",\n    \"index0\": 0,\n    \"index1\": 0\n  };\n\n  var indexClose = text.indexOf(close);\n\n  var part = text.substring(indexOpen + 1, indexClose);\n\n  var openMatch = part.match(openRegEx);\n  var closeMatch = part.match(closeRegEx);\n\n  var nOpen = (openMatch == null ? 0 : openMatch.length) - (closeMatch == null ? 0 : closeMatch.length);\n  var nAttempts = 0;\n\n\n  while((nOpen > 0 || indexClose == -1) && nAttempts < text.length) {\n    indexClose = text.indexOf(close, indexClose);\n    part = text.substring(indexOpen + 1, indexClose + 1);\n    indexClose++;\n    openMatch = part.match(openRegEx);\n    closeMatch = part.match(closeRegEx);\n    nOpen = (openMatch == null ? 0 : openMatch.length) - (closeMatch == null ? 0 : closeMatch.length);\n\n    nAttempts++;\n  }\n  indexClose = text.indexOf(close, indexClose);\n\n  return {\n    \"content\": indexClose == -1 ? text.substring(indexOpen + 1) : text.substring(indexOpen + 1, indexClose),\n    \"index0\": indexOpen + 1,\n    \"index1\": indexClose == -1 ? (text.length - 1) : (indexClose - 1)\n  };\n};\n\nStringOperators.placeString = function(string, stringToPlace, index) {\n  return string.substr(0, index) + stringToPlace + string.substr(index + stringToPlace.length);\n};\n\nStringOperators.insertString = function(string, stringToInsert, index) {\n  return string.substr(0, index) + stringToInsert + string.substr(index);\n};\n\nStringOperators.removeEnters = function(string) {\n  return string.replace(/(\\StringOperators.ENTER|\\StringOperators.ENTER2|\\StringOperators.ENTER3)/gi, \" \");\n};\n\nStringOperators.removeTabs = function(string) {\n  return string.replace(/(\\StringOperators.TAB|\\StringOperators.TAB2|\\t)/gi, \"\");\n};\n\nStringOperators.removePunctuation = function(string, replaceBy) {\n  replaceBy = replaceBy || \"\";\n  return string.replace(/[:,.;?!\\(\\)\\\"\\']/gi, replaceBy);\n};\n\nStringOperators.removeDoubleSpaces = function(string) {\n  var retString = string;\n  var regExpr = RegExp(/  /);\n  while(regExpr.test(retString)) {\n    retString = retString.replace(regExpr, \" \");\n  }\n  return retString;\n};\n\nStringOperators.removeInitialRepeatedCharacter = function(string, character) {\n  while(string.charAt(0) == character) string = string.substr(1);\n  return string;\n};\n\n\n/**\n * takes plain text from html\n * @param  {String} html\n * @return {String}\n * tags:\n */\nStringOperators.removeHtmlTags = function(html) {\n  var tmp = document.createElement(\"DIV\");\n  tmp.innerHTML = html;\n  return tmp.textContent || tmp.innerText;\n};\n\nStringOperators.removeLinks = function(text) {\n  text += ' ';\n  var regexp = /http:\\/\\/[a-zA-Z0-9\\/\\.]+( |:|;|\\r|\\t|\\n|\\v)/g;\n  return(text.replace(regexp, ' ')).substr(0, text.length - 2);\n};\n\nStringOperators.removeQuotes = function(string) { //TODO:improve\n  if(string.charAt(0) == \"\\\"\") string = string.substr(1);\n  if(string.charAt(string.length - 1) == \"\\\"\") string = string.substr(0, string.length - 1);\n  return string;\n};\n\n// StringOperators.trim = function(string){\n// \treturn string.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n// }\n\n/**\n * builds a stringList of words contained in the text\n * @param  {String} string text to be analyzed\n *\n * @param  {Boolean} withoutRepetitions remove words repetitions\n * @param  {Boolean} stopWords remove stop words\n * @param  {Boolean} sortedByFrequency  sorted by frequency in text\n * @param  {Boolean} includeLinks include html links\n * @param  {Number} limit of words\n * @param  {Number} minSizeWords minimal number of characters of words\n * @return {StringList}\n * tags:\n */\nStringOperators.getWords = function(string, withoutRepetitions, stopWords, sortedByFrequency, includeLinks, limit, minSizeWords) {\n  if(string == null) return null;\n\n  minSizeWords = minSizeWords || 0;\n  withoutRepetitions = withoutRepetitions == null ? true : withoutRepetitions;\n  sortedByFrequency = sortedByFrequency == null ? true : sortedByFrequency;\n  includeLinks = includeLinks == null ? true : includeLinks;\n  limit = limit == null ? 0 : limit;\n\n  var i, j;\n\n  if(includeLinks) var links = string.match(StringOperators.LINK_REGEX);\n  string = string.toLowerCase().replace(StringOperators.LINK_REGEX, \"\");\n\n  var list = string.match(/\\w+/g);\n  if(list == null) return new StringList();\n\n  if(includeLinks && links != null) list = list.concat(links);\n  list = StringList.fromArray(list).replace(/ /g, \"\");\n\n  if(stopWords != null) { //TODO:check before if all stopwrds are strings\n    //list.removeElements(stopWords);\n\n    for(i = 0; list[i] != null; i++) {\n      for(j = 0; stopWords[j] != null; j++) {\n        if((typeof stopWords[j]) == 'string') {\n          if(stopWords[j] == list[i]) {\n            list.splice(i, 1);\n            i--;\n            break;\n          }\n        } else if(stopWords[j].test(list[i])) {\n          list.splice(i, 1);\n          i--;\n          break;\n        }\n      }\n    }\n\n  }\n\n  if(minSizeWords > 0) {\n    for(i = 0; list[i] != null; i++) {\n      if(list[i].length < minSizeWords) {\n        list.splice(i, 1);\n        i--;\n      }\n    }\n  }\n\n  if(sortedByFrequency) {\n    if(withoutRepetitions) {\n      list = ListOperators.countElementsRepetitionOnList(list, true)[0];\n      if(limit != 0) list = list.substr(0, limit);\n\n      return list;\n    }\n\n    var occurrences = ListOperators.countOccurrencesOnList(list);\n    list = list.getSortedByList(occurrences);\n    if(limit != 0) list = list.substr(0, limit);\n\n    return list;\n  }\n\n  if(withoutRepetitions) {\n    list = list.getWithoutRepetitions();\n  }\n\n  if(limit != 0) list = list.splice(0, limit);\n  return list;\n};\n\nfunction removeAccentsAndDiacritics(string) {\n  var r = string.replace(new RegExp(/[àáâãäå]/g), \"a\");\n  r = r.replace(new RegExp(/æ/g), \"ae\");\n  r = r.replace(new RegExp(/ç/g), \"c\");\n  r = r.replace(new RegExp(/[èéêë]/g), \"e\");\n  r = r.replace(new RegExp(/[ìíîï]/g), \"i\");\n  r = r.replace(new RegExp(/ñ/g), \"n\");\n  r = r.replace(new RegExp(/[òóôõö]/g), \"o\");\n  r = r.replace(new RegExp(/œ/g), \"oe\");\n  r = r.replace(new RegExp(/[ùúûü]/g), \"u\");\n  r = r.replace(new RegExp(/[ýÿ]/g), \"y\");\n\n  r = r.replace(new RegExp(/[ÀÁÂÄÃ]/g), \"A\");\n  r = r.replace(new RegExp(/Æ/g), \"AE\");\n  r = r.replace(new RegExp(/Ç/g), \"c\");\n  r = r.replace(new RegExp(/[ÈÉÊË]/g), \"E\");\n  r = r.replace(new RegExp(/[ÌÍÎÏ]/g), \"I\");\n  r = r.replace(new RegExp(/Ñ/g), \"N\");\n  r = r.replace(new RegExp(/[ÒÓÔÖÕ]/g), \"O\");\n  r = r.replace(new RegExp(/Œ/g), \"OE\");\n  r = r.replace(new RegExp(/[ÙÚÛÜ]/g), \"U\");\n  r = r.replace(new RegExp(/[Ÿ]/g), \"Y\");\n\n  return r;\n};\n\n/**\n * creates a table with frequent words and occurrences numbers\n * @param  {String} string text to be analyzed\n *\n * @param  {StringList} stopWords\n * @param  {Boolean} includeLinks\n * @param  {Number} limit max size of rows\n * @param  {Number} minSizeWords\n * @return {Table} contains a list of words, and a numberList of occurrences\n * tags:words\n */\nStringOperators.getWordsOccurrencesTable = function(string, stopWords, includeLinks, limit, minSizeWords) {\n  if(string == null) return;\n  if(string.length == 0) return new Table(new StringList(), new NumberList());\n  var words = StringOperators.getWords(string, false, stopWords, false, includeLinks, limit, minSizeWords);\n\n  return ListOperators.countElementsRepetitionOnList(words, true, false, limit);\n};\n\nStringOperators.indexesOf = function(text, string) { //TODO:test\n  var index = text.indexOf(string);\n  if(index == -1) return new NumberList();\n  var indexes = new NumberList(index);\n  index = text.indexOf(string, index + 1);\n  while(index != -1) {\n    indexes.push(index);\n    index = text.indexOf(string, index + 1);\n  }\n  return indexes;\n};\n\n/**\n * returns a string repeated a number of times\n * @param  {String} text to be repeated\n * @param  {Number} n number of repetitions\n * @return {String}\n * tags:\n */\nStringOperators.repeatString = function(text, n) {\n  var i;\n  var newText = \"\";\n  for(i = 0; i < n; i++) {\n    newText += text;\n  }\n  return newText;\n};\n\n\n\n\n//counting / statistics\n\nStringOperators.countOccurrences = function(text, string) { //seems to be th emost efficient: http://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string\n  var n = 0;\n  var index = text.indexOf(string);\n  while(index != -1) {\n    n++;\n    index = text.indexOf(string, index + string.length);\n  }\n  return n;\n};\n\nStringOperators.countWordOccurrences = function(string, word) {\n  var regex = new RegExp(\"\\\\b\" + word + \"\\\\b\");\n  var match = string.match(regex);\n  return match == null ? 0 : match.length;\n};\n\nStringOperators.countStringsOccurrences = function(text, strings) {\n  var i;\n  var numberList = new NumberList();\n  for(i = 0; strings[i] != null; i++) {\n    numberList[i] = text.split(strings[i]).length - 1;\n  }\n  return numberList;\n};\n\n//validation\n\nStringOperators.validateEmail = function(text) {\n  return StringOperators.MAIL_REGEX.test(text);\n};\nStringOperators.validateUrl = function(text) {\n  return StringOperators.LINK_REGEX.test(text);\n};","import Table from \"src/dataStructures/lists/Table\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\nPolygonList.prototype = new Table();\nPolygonList.prototype.constructor = PolygonList;\n\n/**\n * @classdesc A {@link List} structure for storing {@link Polygon} instances.\n *\n * @description Creates a new PolygonList.\n * @constructor\n * @category geometry\n */\nfunction PolygonList() {\n  var array = Table.apply(this, arguments);\n  array = PolygonList.fromArray(array);\n  return array;\n}\nexport default PolygonList;\n\nPolygonList.fromArray = function(array) {\n  var result = Table.fromArray(array);\n  result.type = \"PolygonList\";\n  result.getFrame = PolygonList.prototype.getFrame;\n  result.add = PolygonList.prototype.add;\n  result.factor = PolygonList.prototype.factor;\n  result.clone = PolygonList.prototype.clone;\n  result.getString = PolygonList.prototype.getString;\n  return result;\n};\n\nPolygonList.prototype.getFrame = function() {\n  if(this.length == 0) return null;\n  var frameP = this[0].getFrame();\n  var rectangle = new Rectangle(frameP.x, frameP.y, frameP.getRight(), frameP.getBottom());\n  for(var i = 1; this[i] != null; i++) {\n    frameP = this[i].getFrame();\n    rectangle.x = Math.min(rectangle.x, frameP.x);\n    rectangle.y = Math.min(rectangle.y, frameP.y);\n    rectangle.width = Math.max(rectangle.width, frameP.getRight());\n    rectangle.height = Math.max(rectangle.height, frameP.getBottom());\n  }\n  rectangle.width -= rectangle.x;\n  rectangle.height -= rectangle.y;\n\n  return rectangle;\n};\n\nPolygonList.prototype.add = function(object) {\n  var type = typeOf(object);\n  var i;\n  switch(type) {\n    case 'Point':\n      var newPolygonList = new PolygonList();\n      for(i = 0; this[i] != null; i++) {\n        newPolygonList[i] = this[i].add(object);\n      }\n      newPolygonList.name = this.name;\n      return newPolygonList;\n      break;\n  }\n};\n\nPolygonList.prototype.factor = function(value) {\n  var newPolygonList = new PolygonList();\n  for(var i = 0; this[i] != null; i++) {\n    newPolygonList[i] = this[i].factor(value);\n  }\n  newPolygonList.name = this.name;\n  return newPolygonList;\n};\n\nPolygonList.prototype.clone = function() {\n  var newPolygonList = new PolygonList();\n  for(var i = 0; this[i] != null; i++) {\n    newPolygonList[i] = this[i].clone();\n  }\n  newPolygonList.name = this.name;\n  return newPolygonList;\n};\n\n// PolygonList.prototype.getString=function(pointSeparator,polygonSeparator){\n// pointSeparator = pointSeparator==null?',':pointSeparator;\n// polygonSeparator = polygonSeparator==null?'/':polygonSeparator;\n// var j;\n// var t='';\n// for(var i=0;this[i]!=null;i++){\n// t+=(i==0?'':polygonSeparator);\n// for(j=0; this[i][j]!=null; j++){\n// t+=(j==0?'':pointSeparator)+this[i][j].x+pointSeparator+this[i][j].y;\n// }\n// }\n// return t;\n// }\n","/* global console */\n\nimport DataModel from \"src/dataStructures/DataModel\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\n\nAxis.prototype = new DataModel();\nAxis.prototype.constructor = Axis;\n\n\n//this object is deprecated\n\n/**\n * @classdesc Axis for 1D data.\n *\n * @constructor\n * @description Creates a new Axis.\n * @category numbers\n */\nfunction Axis(departureInterval, arrivalInterval) {\n  //TODO why assign the incoming param, could this be moved to lines 20-21\n  departureInterval = departureInterval == null ? new Interval(0, 1) : departureInterval;\n  arrivalInterval = arrivalInterval == null ? new Interval(0, 1) : arrivalInterval;\n\n  DataModel.apply(this, arguments);\n  this.departureInterval = departureInterval;\n  this.arrivalInterval = arrivalInterval;\n\n  this.setDepartureInterval(departureInterval);\n  this.setArrivalInterval(arrivalInterval);\n\n  this.type = \"Axis\";\n}\nexport default Axis;\n\n\n\nAxis.prototype.setDepartureInterval = function(departureInterval) {\n  this.departureInterval = departureInterval;\n  console.log('--> departureInterval', departureInterval);\n  this.departureAmplitude = departureInterval.getSignedAmplitude();\n\n};\nAxis.prototype.setArrivalInterval = function(arrivalInterval) {\n  this.arrivalInterval = arrivalInterval;\n  this.arrivalAmplitude = arrivalInterval.getSignedAmplitude();\n};\n\nAxis.prototype.project = function(x) {\n  return this.arrivalInterval.x + this.arrivalAmplitude * (x - this.departureInterval.x) / this.departureAmplitude;\n};\n\n\n/**\n * to be called once interval values changed\n */\nAxis.prototype.update = function() {\n  this.departureAmplitude = this.departureInterval.getSignedAmplitude();\n  this.arrivalAmplitude = this.arrivalInterval.getSignedAmplitude();\n};\n\n\nAxis.prototype.toString = function() {\n  return \"Axis[\" + this.departureInterval.toString() + \", \" + this.arrivalInterval.toString() + \"]\";\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\n\nAxis2D.prototype = new DataModel();\nAxis2D.prototype.constructor = Axis2D;\n\n/**\n * @classdesc Axis for 2D data\n *\n * @constructor\n * @description Creates a new 2d axis.\n * @category numbers\n */\nfunction Axis2D(departureFrame, arrivalFrame) {\n  arrivalFrame = arrivalFrame == null ? new Rectangle(0, 0, 1, 1) : arrivalFrame;\n  DataModel.apply(this, arguments);\n  this.departureFrame = departureFrame;\n  this.arrivalFrame = arrivalFrame;\n\n  this.pW;\n  this.pH;\n\n  this.setFrames(departureFrame, arrivalFrame);\n\n  this.type = \"Axis2D\";\n}\nexport default Axis2D;\n\nAxis2D.prototype.setFrames = function(departureFrame, arrivalFrame) {\n  this.departureFrame = departureFrame;\n  this.arrivalFrame = arrivalFrame;\n  this._update();\n};\n\nAxis2D.prototype.setDepartureFrame = function(departureFrame) {\n  this.departureFrame = departureFrame;\n  this._update();\n};\n\nAxis2D.prototype.setArrivalFrame = function(arrivalFrame) {\n  this.arrivalFrame = arrivalFrame;\n  this._update();\n};\n\n\nAxis2D.prototype.project = function(point) {\n  return new Point((point.x - this.departureFrame.x) * this.pW + this.arrivalFrame.x, (point.y - this.departureFrame.y) * this.pH + this.arrivalFrame.y);\n};\n\n\nAxis2D.prototype.projectX = function(x) {\n  return(x - this.departureFrame.x) * this.pW + this.arrivalFrame.x;\n};\n\nAxis2D.prototype.projectY = function(y) {\n  return(y - this.departureFrame.y) * this.pH + this.arrivalFrame.y;\n};\n\nAxis2D.prototype.inverseProject = function(point) {\n  return new Point((point.x - this.arrivalFrame.x) / this.pW + this.departureFrame.x, (point.y - this.arrivalFrame.y) / this.pH + this.departureFrame.y);\n};\n\n\nAxis2D.prototype.inverseProjectX = function(x) {\n  return(x - this.arrivalFrame.x) / this.pW + this.departureFrame.x;\n};\n\nAxis2D.prototype.inverseProjectY = function(y) {\n  return(y - this.arrivalFrame.y) / this.pH + this.departureFrame.y;\n};\n\n\n\n\nAxis2D.prototype._update = function() {\n  this.pW = this.arrivalFrame.width / this.departureFrame.width;\n  this.pH = this.arrivalFrame.height / this.departureFrame.height;\n};\n\n\nAxis2D.prototype.toString = function() {\n  return \"Axis2D[\" + this.departureFrame.toString() + \", \" + this.arrivalFrame.toString() + \"]\";\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\nMatrix.prototype = new DataModel();\nMatrix.prototype.constructor = Matrix;\n\n\n//all Matrix objects and methods should be ported to NumberTable (same at MatrixGenerators.json)\n\n/**\n * @classdesc Matrix implementation.\n * Some credits to http://strd6.com/2010/06/introducing-matrix-js/\n *\n * @constructor\n * @description Creates a new Matrix instance.\n * @category numbers\n */\nfunction Matrix(a, b, c, d, tx, ty) {\n  DataModel.apply(this, arguments);\n  this.name = \"\";\n  this.type = \"Matrix\";\n  this.a = a == null ? 1 : a;\n  this.b = b == null ? 0 : b;\n  this.c = c == null ? 0 : c;\n  this.d = d == null ? 1 : d;\n  this.tx = tx == null ? 0 : tx;\n  this.ty = ty == null ? 0 : ty;\n}\nexport default Matrix;\n\n/**\n * Returns the result of applying the geometric transformation represented by the\n * Matrix object to the specified point.\n * @methodOf Matrix#\n * @see #deltaTransformPoint\n *\n * @returns {Point} A new point with the transformation applied.\n */\nMatrix.prototype.transformPoint = function(point) {\n  return new Point(\n    this.a * point.x + this.c * point.y + this.tx,\n    this.b * point.x + this.d * point.y + this.ty\n  );\n};\n\n// /**\n// * Applies Matrix to context transform\n// **/\n// Matrix.prototype.applyToContext=function(context){\n// context.transform(this.a, this.b, this.c, this.d, this.tx, this.ty);\n// }\n\n/**\n * Returns the result of this matrix multiplied by another matrix\n * combining the geometric effects of the two. In mathematical terms,\n * concatenating two matrixes is the same as combining them using matrix multiplication.\n * If this matrix is A and the matrix passed in is B, the resulting matrix is A x B\n * http://mathworld.wolfram.com/MatrixMultiplication.html\n * @methodOf Matrix#\n *\n * @param {Matrix} matrix The matrix to multiply this matrix by.\n * @returns {Matrix} The result of the matrix multiplication, a new matrix.\n */\nMatrix.prototype.concat = function(matrix) {\n  return Matrix(\n    this.a * matrix.a + this.c * matrix.b,\n    this.b * matrix.a + this.d * matrix.b,\n    this.a * matrix.c + this.c * matrix.d,\n    this.b * matrix.c + this.d * matrix.d,\n    this.a * matrix.tx + this.c * matrix.ty + this.tx,\n    this.b * matrix.tx + this.d * matrix.ty + this.ty\n  );\n};\n\n/**\n * Given a point in the pretransform coordinate space, returns the coordinates of\n * that point after the transformation occurs. Unlike the standard transformation\n * applied using the transformPoint() method, the deltaTransformPoint() method's\n * transformation does not consider the translation parameters tx and ty.\n * @see #transformPoint\n *\n * @return {Point} A new point transformed by this matrix ignoring tx and ty.\n */\nMatrix.prototype.deltaTransformPoint = function(point) {\n  return Point(\n    this.a * point.x + this.c * point.y,\n    this.b * point.x + this.d * point.y\n  );\n};\n\n/**\n * Returns the inverse of the matrix.\n * http://mathworld.wolfram.com/MatrixInverse.html\n *\n * @returns {Matrix} A new matrix that is the inverse of this matrix.\n */\nMatrix.prototype.getInverse = function() {\n    var determinant = this.a * this.d - this.b * this.c;\n    return new Matrix(\n\t\tthis.d / determinant,\n\t\t-this.b / determinant,\n\t\t-this.c / determinant,\n\t\tthis.a / determinant,\n\t\t(this.c * this.ty - this.d * this.tx) / determinant,\n\t\t(this.b * this.tx - this.a * this.ty) / determinant\n    );\n  };\n  /**\n   * Returns a new matrix that corresponds this matrix multiplied by a\n   * a rotation matrix.\n   * @see Matrix.rotation\n   *\n   * @param {Number} theta Amount to rotate in radians.\n   * @param {Point} [aboutPoint] The point about which this rotation occurs. Defaults to (0,0).\n   * @returns {Matrix} A new matrix, rotated by the specified amount.\n   */\nMatrix.prototype.rotate = function(theta, aboutPoint) {\n  return this.concat(Matrix.rotation(theta, aboutPoint));\n};\n\n/**\n * Returns a new matrix that corresponds this matrix multiplied by a\n * a scaling matrix.\n * @see Matrix.scale\n *\n * @param {Number} sx\n * @param {Number} [sy]\n * @param {Point} [aboutPoint] The point that remains fixed during the scaling\n * @returns {Matrix}\n */\nMatrix.prototype.scale = function(sx, sy, aboutPoint) {\n  return this.concat(Matrix.scale(sx, sy, aboutPoint));\n};\n\n\n/**\n * @methodOf Matrix#\n * @see Matrix.translation\n *\n * @param {Number} tx The translation along the x axis.\n * @param {Number} ty The translation along the y axis.\n * @returns {Matrix} A new matrix with the translation applied.\n */\nMatrix.prototype.translate = function(tx, ty) {\n  return this.concat(Matrix.translation(tx, ty));\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\n\nDateAxis.prototype = new DataModel();\nDateAxis.prototype.constructor = DateAxis;\n\n/**\n * @classdesc Date based {@link Axis}.\n *\n * @description Creates a new DateAxis.\n * @constructor\n * @category dates\n */\nfunction DateAxis(departureDateInterval, arrivalInterval) {\n  arrivalInterval = arrivalInterval == null ? new Interval(0, 1) : arrivalInterval;\n  DataModel.apply(this, arguments);\n  this.departureDateInterval = departureDateInterval;\n  this.arrivalInterval = arrivalInterval;\n\n  this.time0;\n  this.time1;\n  this.dTime;\n  this.arrivalAmplitude;\n\n  this.setDepartureDateInterval(departureDateInterval);\n  this.setArrivalInterval(arrivalInterval);\n\n  this.type = \"DateAxis\";\n}\nexport default DateAxis;\n\n\n\nDateAxis.prototype.setDepartureDateInterval = function(departureDateInterval) {\n  this.departureDateInterval = departureDateInterval;\n  this.time0 = this.departureDateInterval.date0.getTime();\n  this.time1 = this.departureDateInterval.date1.getTime();\n  this.dTime = this.time1 - this.time0;\n\n};\nDateAxis.prototype.setArrivalInterval = function(arrivalInterval) {\n  this.arrivalInterval = arrivalInterval;\n  this.arrivalAmplitude = arrivalInterval.getAmplitude();\n};\n\nDateAxis.prototype.project = function(date) {\n  return this.arrivalInterval.x + this.arrivalAmplitude * (date.getTime() - this.time0) / this.dTime;\n};\n\n\n/**\n * to be called once intreval values changed\n */\nDateAxis.prototype.update = function() {\n  this.time0 = this.departureDateInterval.date0.getTime();\n  this.time1 = this.departureDateInterval.date1.getTime();\n  this.dTime = this.time1 - this.time0;\n  this.arrivalAmplitude = this.arrivalInterval.getAmplitude();\n};\n\n\nDateAxis.prototype.toString = function() {\n  return \"DateAxis[\" + this.departureDateInterval.toString() + \", \" + this.arrivalInterval.toString() + \"]\";\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\n\nDateInterval.prototype = new DataModel();\nDateInterval.prototype.constructor = DateInterval;\n\n/**\n * @classdesc Date Interval\n *\n * @description Creates a new DateInterval.\n * @param {Date} Interval's minimum value.\n * @param {Date} Interval's maximum value.\n * @constructor\n * @category dates\n */\nfunction DateInterval(date0, date1) {\n  DataModel.apply(this, arguments);\n  this.date0 = date0;\n  this.date1 = date1;\n  this.type = \"DateInterval\";\n}\nexport default DateInterval;\n\nDateInterval.prototype.toString = function() {\n  return \"DateInterval[\" + this.date0 + \", \" + this.date1 + \"]\";\n};\n\nDateInterval.prototype.getMax = function() {\n  if(this.date1 > this.date0) return this.date1;\n  return this.date0;\n};\n\nDateInterval.prototype.getMin = function() {\n  if(this.date0 < this.date1) return this.date0;\n  return this.date1;\n};\n\n/**\n * converts the dateInterval into an Interval (getting milliseconds time from each date)\n * @return {Interval}\n * tags:conversion\n */\nDateInterval.prototype.getTimesInterval = function() {\n  return new Interval(this.date0.getTime(), this.date1.getTime());\n};\n\n/**\n * factors the dateInterval (specially useful: factor by an interval, in which case a sub-dateInterval is selected)\n * @param  {Object} object could be: interval\n * @return {DateInterval}\n * tags:\n */\nDateInterval.prototype.getProduct = function(object) { //TODO: complete with more object types\n  if(object == null) return;\n\n  if(object.type == 'Interval') {\n    var time0 = this.date0.getTime();\n    var time1 = this.date1.getTime();\n    var amp = time1 - time0;\n\n    return new DateInterval(new Date(time0 + object.x * amp), new Date(time0 + object.y * amp));\n  }\n\n  return null;\n};\n","import StringList from \"src/dataStructures/strings/StringList\";\n/**\n * @classdesc Provides a set of tools that work with {@link Country|Countries}.\n *\n * @namespace\n * @category geo\n */\nfunction CountryOperators() {}\nexport default CountryOperators;\n\nCountryOperators.getSimplifiedName = function(name) {\n  return name.replace(/[\\.\\- ,\\']/g, \"\").toLowerCase();\n};\n\nCountryOperators.getSimplifiedNames = function(names) {\n  var simplifiedNames = new StringList();\n  var name;\n  for(var i = 0; names[i] != null; i++) {\n    name = this.getSimplifiedName(names[i]);\n    if(name != \"\") simplifiedNames.pushIfUnique(name);\n  }\n  return simplifiedNames;\n};\n","import Node from 'src/dataStructures/structures/elements/Node';\nimport CountryOperators from 'src/operators/geo/CountryOperators';\n\nCountry.prototype = new Node();\nCountry.prototype.constructor = Country;\n\n/**\n * @classdesc Represents an individual country for visualization and spatial\n * reasoning.\n *\n* @description Creates a new Country instance.\n * @param {String} id Country id (ISO2)\n * @param {String} name Country name\n * @constructor\n * @category geo\n */\nfunction Country(id, name) {\n  Node.apply(this, [id, name]);\n  this.type = \"Country\";\n\n  this.id = id;\n  this.name = name;\n\n  this.shortName;\n\n  this.continentName;\n  this.isoCode;\n  this.alternativeNames;\n  this.wikipediaUrl;\n  this.flagImageUrl;\n  this.smallFlagImageUrl;\n  this.recognized = false;\n  this.geoCenter;\n\n  this.polygonList;\n  this.simplePolygonList;\n\n  this.longestPolygon;\n  this.longestSimplePolygon;\n\n  this._simplifiedNames;\n  this._simplifiedId;\n  this._simplifiedName;\n\n  this._frame;\n}\nexport default Country;\n\nCountry.prototype.generatesSimplifiedNames = function() {\n  this._simplifiedNames = CountryOperators.getSimplifiedNames(this.alternativeNames);\n  this._simplifiedId = CountryOperators.getSimplifiedName(this.id);\n  this._simplifiedName = CountryOperators.getSimplifiedName(this.name);\n  this.shortName = this.name\n    .replace('Democratic Republic', 'D.R.')\n    .replace('United States', 'U.S.A')\n    .replace('United Arab', 'U.A.');\n};\n\nCountry.prototype.nameMatches = function(name) {\n  if(this._simplifiedId == null) this.generatesSimplifiedNames();\n  name = CountryOperators.getSimplifiedName(name);\n  if(name == this._simplifiedId || name == this._simplifiedName) return true;\n  return this._simplifiedNames.indexOf(name) != -1;\n};\n\nCountry.prototype.getFrame = function() {\n  if(this._frame == null) {\n    this._frame = this.simplePolygonList == null ? this.polygonList.getFrame() : this.simplePolygonList.getFrame();\n  }\n  return this._frame;\n};\n","import Network from \"src/dataStructures/structures/networks/Network\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\n\nTree.prototype = new Network();\nTree.prototype.constructor = Tree;\n\n/**\n * @classdesc Trees are Networks that have a hierarchical structure.\n *\n * @description Create a new Tree.\n * @constructor\n * @category networks\n */\nfunction Tree() {\n  Network.apply(this);\n  this.type = \"Tree\";\n\n  this.nLevels = 0;\n  this._createRelation = this.createRelation;\n  this.createRelation = this._newCreateRelation;\n}\nexport default Tree;\n\n/**\n * Adds a given Node to the tree, under the given parent Node.\n *\n * @param {Node} node\n * @param {Node} parent\n */\nTree.prototype.addNodeToTree = function(node, parent) {\n  this.addNode(node);\n  if(parent == null) {\n    node.level = 0;\n    node.parent = null;\n  } else {\n    var relation = new Relation(parent.id + \"_\" + node.id, parent.id + \"_\" + node.id, parent, node);\n    this.addRelation(relation);\n    //this._createRelation(parent, node);\n    node.level = parent.level + 1;\n    node.parent = parent;\n  }\n  this.nLevels = Math.max(this.nLevels, node.level + 1);\n};\n\n/**\n * @ignore\n */\nNetwork.prototype._newCreateRelation = function(parent, node, id, weight) {\n  if(id == null) id = this.relationList.getNewId();\n  this._createRelation(parent, node, id, weight);\n  node.level = parent.level + 1;\n  node.parent = parent;\n  this.nLevels = Math.max(this.nLevels, node.level + 1);\n};\n\n/**\n * Adds a new parent node to the Tree.\n *\n * @param {Node} node New Parent Node.\n */\nTree.prototype.addFather = function(node, children) {\n  //TODO: is children supposed to be child?\n  if(child.parent != null || this.nodeList.indexOf(child) == -1) return false;\n  this.addNode(node);\n  child.parent = node;\n  child.level = 1;\n  this.nLevels = Math.max(this.nLevels, 1);\n  this.createRelation(node, child);\n};\n\n/**\n * Provides a {@link NodeList} of all the Nodes of the Tree at a given level.\n *\n * @param {Number} level Level (depth) of the Tree to extract Nodes at.\n * @return {NodeList} All Nodes at the given level of the tree.\n */\nTree.prototype.getNodesByLevel = function(level) {\n  var newNodeList = new NodeList();\n  for(var i = 0; this.nodeList[i] != null; i++) {\n    if(this.nodeList[i].level == level) newNodeList.addNode(this.nodeList[i]);\n  }\n  return newNodeList;\n};\n\n/**\n * Returns the leaves (nodes without children) of a tree.\n *\n * @param {Node} node Optional parent Node to start the leaf search from.\n * If no Node is provided, all leaf Nodes are returned.\n * @return {NodeList} Leaves of the Tree or sub-tree.\n * tags:\n */\nTree.prototype.getLeaves = function(node) {\n  var leaves = new NodeList();\n  if(node) {\n    if(node.toNodeList.length == 0) {\n      leaves.addNode(node);\n      return leaves;\n    }\n    var addLeaves = function(candidate) {\n      if(candidate.toNodeList.length == 0) {\n        leaves.addNode(candidate);\n      } else {\n        candidate.toNodeList.forEach(addLeaves);\n      }\n    };\n    node.toNodeList.forEach(addLeaves);\n  } else {\n    this.nodeList.forEach(function(candidate) {\n      if(candidate.toNodeList.length == 0) leaves.addNode(candidate);\n    });\n  }\n  return leaves;\n};\n\n/**\n * assignDescentWeightsToNodes\n *\n * @return {undefined}\n */\nTree.prototype.assignDescentWeightsToNodes = function() {\n  this._assignDescentWeightsToNode(this.nodeList[0]);\n};\n\n/**\n * @ignore\n */\nTree.prototype._assignDescentWeightsToNode = function(node) {\n  var i;\n  if(node.toNodeList.length == 0) {\n    node.descentWeight = 1;\n    return 1;\n  }\n  for(i = 0; node.toNodeList[i] != null; i++) {\n    node.descentWeight += this._assignDescentWeightsToNode(node.toNodeList[i]);\n  }\n  return node.descentWeight;\n};\n\n/**\n * Returns a string indicating the size of the Tree.\n *\n * @return {String} Log message indicating Tree's size.\n */\nTree.prototype.getReport = function(relation) {\n  //TODO: remove relation input?\n  return \"Tree contains \" + this.nodeList.length + \" nodes and \" + this.relationList.length + \" relations\";\n};\n","import Point from \"src/dataStructures/geometry/Point\";\n\nPoint3D.prototype = new Point();\nPoint3D.prototype.constructor = Point3D;\n/**\n * @classdesc Point3D represents a point in 3D space.\n *\n * @description Create a new 3D Point.\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @constructor\n * @category geometry\n */\nfunction Point3D(x, y, z) {\n  Point.apply(this, arguments);\n  //this.name='';\n  this.type = \"Point3D\";\n  this.z = z;\n}\nexport default Point3D;\n\nPoint3D.prototype.distanceToPoint3D = function(point3D) {\n  return Math.sqrt(Math.pow(Math.abs(this.x - point3D.x), 2) + Math.pow(Math.abs(this.y - point3D.y), 2) + Math.pow(Math.abs(this.z - point3D.z), 2));\n};\n\nPoint3D.prototype.distanceToPointSquared = function(point3D) {\n  return Math.pow(Math.abs(this.x - point3D.x), 2) + Math.pow(Math.abs(this.y - point3D.y), 2) + Math.pow(Math.abs(this.z - point3D.z), 2);\n};\nPoint3D.prototype.getNorm = function() {\n  return Math.sqrt((this.x * this.x) + (this.y * this.y) + (this.z * this.z));\n};\n\nPoint3D.prototype.normalizeToValue = function(k) {\n  var factor = k / Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n  return new Point3D(this.x * factor, this.y * factor, this.z * factor);\n};\n\nPoint3D.prototype.cross = function(point3D) {\n  var _x = this.y * point3D.z - this.z * point3D.y;\n  var _y = this.z * point3D.x - this.x * point3D.z;\n  var _z = this.x * point3D.y - this.y * point3D.x;\n  return new Point3D(_x, _y, _z);\n};\nPoint3D.prototype.dot = function(point3D) {\n  return this.x * point3D.x + this.y * point3D.y + this.z * point3D.z;\n};\nPoint3D.prototype.add = function(point) {\n  return new Point3D(point.x + this.x, point.y + this.y, point.z + this.z);\n};\nPoint3D.prototype.subtract = function(point) {\n  return new Point3D(this.x - point.x, this.y - point.y, this.z - point.z);\n};\nPoint3D.prototype.factor = function(k) {\n  return new Point3D(this.x * k, this.y * k, this.z * k);\n};\nPoint3D.prototype.interpolate = function(point3D, t) {\n  return new Point3D((1 - t) * this.x + t * point3D.x, (1 - t) * this.y + t * point3D.y, (1 - t) * this.z + t * point3D.z);\n};\nPoint3D.prototype.getAngles = function() {\n  var radius = Math.sqrt((this.x * this.x) + (this.y * this.y) + (this.z * this.z));\n  var alfa = 0.5 * Math.PI - Math.atan2(this.z / radius, this.y / radius);\n  var beta = -Math.asin(this.x / radius);\n  if(alfa < -Math.PI) alfa += 2 * Math.PI;\n  if(alfa > Math.PI) alfa -= 2 * Math.PI;\n  if(beta < -Math.PI) beta += 2 * Math.PI;\n  if(beta > Math.PI) beta -= 2 * Math.PI;\n  return new Point3D(alfa, beta, 0);\n};\nPoint3D.prototype.getInverseAngles = function() {\n  var radius = Math.sqrt((this.x * this.x) + (this.y * this.y) + (this.z * this.z));\n  var alfa = -0.5 * Math.PI + Math.atan2(-this.z / radius, -this.y / radius);\n  var beta = Math.asin(-this.x / radius);\n  if(alfa < -Math.PI) alfa += 2 * Math.PI;\n  if(alfa > Math.PI) alfa -= 2 * Math.PI;\n  if(beta < -Math.PI) beta += 2 * Math.PI;\n  if(beta > Math.PI) beta -= 2 * Math.PI;\n  return new Point3D(alfa, beta, 0);\n};\n\n\nPoint3D.prototype.clone = function() {\n  return new Point3D(this.x, this.y, this.z);\n};\nPoint3D.prototype.toString = function() {\n  return \"(x=\" + this.x + \", y=\" + this.y + \", z=\" + this.z + \")\";\n};\n\nPoint3D.prototype.destroy = function() {\n  delete this.type;\n  delete this.name;\n  delete this.x;\n  delete this.y;\n  delete this.z;\n};\n","import Point from \"src/dataStructures/geometry/Point\";\n\n/**\n * @classdesc Provides a set of tools that work with {@link Point|Points}.\n *\n * @namespace\n * @category geometry\n */\nfunction PointOperators() {}\nexport default PointOperators;\n\n\n\nPointOperators.angleBetweenVectors = function(point0, point1) {\n  return Math.atan2(point1.y, point1.x) - Math.atan2(point0.y, point0.x);\n};\n\nPointOperators.angleFromTwoPoints = function(point0, point1) {\n  return Math.atan2(point1.y - point0.y, point1.x - point0.x);\n};\n\nPointOperators.dot = function(point0, point1) {\n  return point0.x * point1.x + point0.y * point1.y;\n};\n\nPointOperators.twoPointsInterpolation = function(point0, point1, t) {\n  return new Point((1 - t) * point0.x + t * point1.x, (1 - t) * point0.y + t * point1.y);\n};\n","import List from \"src/dataStructures/lists/List\";\n\nPolygon3D.prototype = new List();\nPolygon3D.prototype.constructor = Polygon3D;\n\n/**\n * @classdesc Polygon3D brings the {@link Polygon} concept into three\n * dimensions through the use of {@link Point3D}.\n *\n * @description Creates a new Polygon3D.\n * @constructor\n * @category geometry\n */\nfunction Polygon3D() {\n  var array = List.apply(this, arguments);\n  array = Polygon3D.fromArray(array);\n  return array;\n}\nexport default Polygon3D;\n\nPolygon3D.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"Polygon3D\";\n  //assign methods to array:\n  return result;\n};\n","import Point from \"src/dataStructures/geometry/Point\";\nimport Point3D from \"src/dataStructures/geometry/Point3D\";\nimport PointOperators from \"src/operators/geometry/PointOperators\";\nimport Polygon3D from \"src/dataStructures/geometry/Polygon3D\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\n\n/**\n * @classdesc Provides a set of tools that work with Geometric data.\n *\n * @namespace\n * @category geometry\n */\nfunction GeometryOperators() {}\nexport default GeometryOperators;\n\n\n/**\n * from three Points calculates two control Points for the middle Point that will define a curve (using Bézier) that goes softly through the three points\n * TODO: finish method by taking into account distances\n */\nGeometryOperators.getSoftenControlPoints = function(point0, point1, point2, controlVectorSize) {\n  controlVectorSize = controlVectorSize || 10;\n  var angle = PointOperators.angleFromTwoPoints(point0, point2);\n  var controlPoint0 = new Point(point1.x - controlVectorSize * Math.cos(angle), point1.y - controlVectorSize * Math.sin(angle));\n  var controlPoint1 = new Point(point1.x + controlVectorSize * Math.cos(angle), point1.y + controlVectorSize * Math.sin(angle));\n  return [controlPoint0, controlPoint1];\n};\n\nGeometryOperators.bezierCurvePoints = function(x0, y0, c0x, c0y, c1x, c1y, x1, y1, t) {\n  var s = 1 - t;\n  var ax = s * x0 + t * c0x;\n  var ay = s * y0 + t * c0y;\n\n  var bx = s * c0x + t * c1x;\n  var by = s * c0y + t * c1y;\n\n  var cx = s * c1x + t * x1;\n  var cy = s * c1y + t * y1;\n\n  var ex = s * ax + t * bx;\n  var ey = s * ay + t * by;\n\n  var fx = s * bx + t * cx;\n  var fy = s * by + t * cy;\n\n  return new Point(t * fx + s * ex, t * fy + s * ey);\n};\n\n\n\nGeometryOperators.trueBezierCurveHeightHorizontalControlPoints = function(x0, x1, y0, y1, c0x, c1x, x) {\n  var dx = x1 - x0;\n  var x = (x - x0) / dx;\n  var c0x = (c0x - x0) / dx;\n  var c1x = (c1x - x0) / dx;\n\n  if(GeometryOperators._bezierSimpleCurveTable == null) {\n    var i, p;\n\n    GeometryOperators._bezierSimpleCurveTable = new NumberList();\n\n    for(i = 1; i < 10000; i++) {\n      p = GeometryOperators.bezierCurvePoints(0, 0, c0x, 0, c1x, 1, 1, 1, i / 10000);\n      GeometryOperators._bezierSimpleCurveTable[Math.floor(1000 * p.x)] = p.y;\n    }\n\n    GeometryOperators._bezierSimpleCurveTable[0] = 0;\n    GeometryOperators._bezierSimpleCurveTable[1] = 1;\n  }\n\n  return GeometryOperators._bezierSimpleCurveTable[Math.floor(1000 * x)] * (y1 - y0) + y0;\n\n};\n\n\n/**\n * This an approximation, it doesn't take into account actual values of c0x and c1x\n */\nGeometryOperators.bezierCurveHeightHorizontalControlPoints = function(y0, c0x, c1x, y1, t) { //TODO:fix\n\n  var cosinus = Math.cos(Math.PI * (t - 1));\n  var sign = cosinus > 0 ? 1 : -1;\n\n  return(0.5 + 0.5 * (Math.pow(cosinus * sign, 0.6) * sign)) * (y1 - y0) + y0;\n};\n\n/**\n * unefficient method (uses Newton strategy)\n */\nGeometryOperators.distanceToBezierCurve = function(x0, y0, c0x, c0y, c1x, c1y, x1, y1, p, returnPoint) {\n  var minDT = 0.01;\n  var t0 = 0;\n  var t1 = 1;\n  var p0 = new Point(x0, y0);\n  var p0I = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, minDT);\n  var p1 = new Point(x1, y1);\n  var p1I = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, 1 - minDT);\n  var d0 = Math.pow(p0.x - p.x, 2) + Math.pow(p0.y - p.y, 2);\n  var d0I = Math.pow(p0I.x - p.x, 2) + Math.pow(p0I.y - p.y, 2);\n  var d1 = Math.pow(p1.x - p.x, 2) + Math.pow(p1.y - p.y, 2);\n  var d1I = Math.pow(p1I.x - p.x, 2) + Math.pow(p1I.y - p.y, 2);\n\n  var i;\n\n  var pM;\n  var pMI;\n\n  for(i = 0; i < 10; i++) {\n    pM = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, (t0 + t1) * 0.5);\n    pMI = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, (t0 + t1) * 0.5 + minDT);\n\n    d0 = Math.pow(pM.x - p.x, 2) + Math.pow(pM.y - p.y, 2);\n    d0I = Math.pow(pMI.x - p.x, 2) + Math.pow(pMI.y - p.y, 2);\n\n    if(d0 < d0I) {\n      t1 = (t0 + t1) * 0.5;\n      p1 = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, t1);\n      d1 = Math.pow(p1.x - p.x, 2) + Math.pow(p1.y - p.y, 2);\n    } else {\n      t0 = (t0 + t1) * 0.5;\n      p0 = GeometryOperators.bezierCurvePoints(x0, y0, c0x, c0y, c1x, c1y, x1, y1, t0);\n      d0 = Math.pow(p0.x - p.x, 2) + Math.pow(p0.y - p.y, 2);\n    }\n  }\n\n  if(returnPoint) return p1;\n  return Math.sqrt(Math.min(d0, d1));\n};\n\nGeometryOperators.triangleContainsPoint = function(pT0, pT1, pT2, p) {\n  var a = (pT0.x - p.x) * (pT1.y - p.y) - (pT1.x - p.x) * (pT0.y - p.y);\n  var b = (pT1.x - p.x) * (pT2.y - p.y) - (pT2.x - p.x) * (pT1.y - p.y);\n  var c = (pT2.x - p.x) * (pT0.y - p.y) - (pT0.x - p.x) * (pT2.y - p.y);\n  return(a > 0 && b > 0 && c > 0) || (a >= 0 && b >= 0 && c >= 0);\n};\n\nGeometryOperators.triangleArea = function(triangle) {\n  return Math.abs(triangle.a.x * (triangle.b.y - triangle.c.y) + triangle.b.x * (triangle.c.y - triangle.a.y) + triangle.c.x * (triangle.a.y - triangle.b.y)) / 2;\n};\n\n\n/////////////lines (line is a Point with values m and b in y=mx+b)\n\nGeometryOperators.lineFromTwoPoints = function(point0, point1) {\n  if(point0.x == point1.x) return new Point(Infinity, point0.x);\n  var m = (point1.y - point0.y) / (point1.x - point0.x);\n  return new Point(m, point0.y - m * point0.x);\n};\n\nGeometryOperators.distancePointToLine = function(point, line) {\n  var m2;\n  var b2;\n  if(line.x == 0) {\n    m2 = Infinity;\n    b2 = point.x;\n  } else {\n    m2 = -1 / line.x;\n    b2 = point.y - m2 * point.x;\n  }\n  var interPoint = GeometryOperators.intersectionLines(line, new Point(m2, b2));\n  return Math.sqrt(Math.pow(point.x - interPoint.x, 2) + Math.pow(point.y - interPoint.y, 2));\n};\n\nGeometryOperators.distancePointToSegment = function(point, point0Segment, point1Segment) {\n  var m = point0Segment.x == point1Segment.x ? Infinity : (point1Segment.y - point0Segment.y) / (point1Segment.x - point0Segment.x);\n  var line = m == Infinity ? new Point(Infinity, point0Segment.x) : new Point(m, point0Segment.y - m * point0Segment.x);\n  var m2;\n  var b2;\n  if(line.x == 0) {\n    m2 = Infinity;\n    b2 = point.x;\n  } else {\n    m2 = -1 / line.x;\n    b2 = point.y - m2 * point.x;\n  }\n  var interPoint = GeometryOperators.intersectionLines(line, new Point(m2, b2));\n  if(interPoint.x >= Math.min(point0Segment.x, point1Segment.x) && interPoint.x <= Math.max(point0Segment.x, point1Segment.x)) return point.distanceToPoint(interPoint);\n  return Math.min(point.distanceToPoint(point0Segment), point.distanceToPoint(point1Segment));\n};\n\nGeometryOperators.intersectionLines = function(line0, line1) {\n  if(line0.x == line1.x) {\n    if(line0.y == line1.y) {\n      if(line0.x == Infinity) {\n        return new Point(line0.y, 0);\n      } else {\n        return new Point(0, line0.y);\n      }\n    }\n    return null;\n  }\n  if(line0.x == Infinity) {\n    return new Point(line0.y, line1.x * line0.y + line1.y);\n  } else if(line1.x == Infinity) {\n    return new Point(line1.y, line0.x * line1.y + line0.y);\n  }\n\n  var xx = (line1.y - line0.y) / (line0.x - line1.x);\n  return new Point(xx, line0.x * xx + line0.y);\n};\n\n\nGeometryOperators.VennCircles = function(area0, area1, areaIntersection, centerInLens, precision) {\n  var rA = Math.sqrt(area0 / Math.PI);\n  var rB = Math.sqrt(area1 / Math.PI);\n  var d = GeometryOperators.circleDistancesFromCommonArea(rA, rB, areaIntersection, precision);\n\n  var circle0;\n  var circle1;\n\n  if(centerInLens) {\n    var x0 = (d * d + Math.pow(rA, 2) - Math.pow(rB, 2)) / (2 * d);\n\n    circle0 = new Point3D(-x0, 0, rA);\n    circle1 = new Point3D(d - x0, 0, rB);\n\n  } else {\n    circle0 = new Point3D(-d * 0.5, 0, rA);\n    circle1 = new Point3D(d * 0.5, 0, rB);\n  }\n\n  if(areaIntersection == 0) {\n    circle0.x -= d * 0.1;\n    circle1.x += d * 0.1;\n  }\n\n  return new Polygon3D(circle0, circle1);\n};\n\n/**\n * very lazy and ineficcient solution (Newton algorithm)\n * @param r0\n * @param r1\n * @param areaComun\n * @param precision\n *\n */\nGeometryOperators.circleDistancesFromCommonArea = function(r0, r1, commonArea, precision) {\n  precision = precision || 0.1;\n  var d0 = Math.max(r0, r1) - Math.min(r0, r1);\n  var d1 = r0 + r1;\n  var dM = (d0 + d1) * 0.5;\n\n  var attempts = 0;\n\n  var currentArea = GeometryOperators.circlesCommonArea(r0, r1, dM);\n\n  while(Math.abs(currentArea - commonArea) > precision && attempts < 200) {\n    if(currentArea > commonArea) {\n      d0 = dM;\n      dM = (d1 + dM) * 0.5;\n    } else {\n      d1 = dM;\n      dM = (dM + d0) * 0.5;\n    }\n    attempts++;\n    currentArea = GeometryOperators.circlesCommonArea(r0, r1, dM);\n  }\n  return dM;\n};\n\nGeometryOperators.circlesCommonArea = function(ra, rb, d) {\n  if(d >= (ra + rb)) return 0;\n  if(d + Math.min(ra, rb) <= Math.max(ra, rb)) {\n    return Math.PI * Math.pow(Math.min(ra, rb), 2);\n  }\n\n  var d2 = Math.pow(d, 2);\n  var ra2 = Math.pow(ra, 2);\n  var rb2 = Math.pow(rb, 2);\n\n  return ra2 * Math.acos((d2 + ra2 - rb2) / (2 * d * ra)) + rb2 * Math.acos((d2 + rb2 - ra2) / (2 * d * rb)) - 0.5 * Math.sqrt((-d + ra + rb) * (d + ra - rb) * (d - ra + rb) * (d + ra + rb));\n};\n\n/**\n * This method return the angles required to draw the intersection shape (lens) of two circles\n */\nGeometryOperators.circlesLensAngles = function(circle0, circle1) {\n  if(circle1.x < circle0.x) {\n    var _circle = circle1.clone();\n    circle1 = circle0.clone();\n    circle0 = _circle;\n  }\n  if(circle1.x + circle1.z <= circle0.x + circle0.z) {\n    return null;\n  } else if(circle0.x - circle0.z >= circle1.x - circle1.z) {\n    return null;\n  }\n\n  var d = circle1.x - circle0.x;\n  var x0 = (d * d + Math.pow(circle0.z, 2) - Math.pow(circle1.z, 2)) / (2 * d);\n  var alfa = Math.acos(x0 / circle0.z);\n  var h = circle0.z * Math.sin(alfa);\n  var beta = Math.asin(h / circle1.z);\n\n  if(circle0.x + x0 < circle1.x) {\n    return new NumberList(-alfa, alfa, Math.PI - beta, Math.PI + beta);\n  } else {\n    return new NumberList(-alfa, alfa, beta, -beta);\n  }\n};\n\n\n\n\n//////Delauney\n\nGeometryOperators.delauney = function(polygon) { /// ---> move to Polygon operators, chnge name to getDelauneyTriangulation\n  return _triangulate(polygon);\n};\n\n\nfunction Triangle(a, b, c) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n\n  var A = b.x - a.x,\n    B = b.y - a.y,\n    C = c.x - a.x,\n    D = c.y - a.y,\n    E = A * (a.x + b.x) + B * (a.y + b.y),\n    F = C * (a.x + c.x) + D * (a.y + c.y),\n    G = 2 * (A * (c.y - b.y) - B * (c.x - b.x)),\n    minx, miny, dx, dy;\n\n  /* If the points of the triangle are collinear, then just find the\n   * extremes and use the midpoint as the center of the circumcircle. */\n  if(Math.abs(G) < 0.000001) {\n    minx = Math.min(a.x, b.x, c.x);\n    miny = Math.min(a.y, b.y, c.y);\n    dx = (Math.max(a.x, b.x, c.x) - minx) * 0.5;\n    dy = (Math.max(a.y, b.y, c.y) - miny) * 0.5;\n\n    this.x = minx + dx;\n    this.y = miny + dy;\n    this.r = dx * dx + dy * dy;\n  }\n\n  else {\n    this.x = (D * E - B * F) / G;\n    this.y = (A * F - C * E) / G;\n    dx = this.x - a.x;\n    dy = this.y - a.y;\n    this.r = dx * dx + dy * dy;\n  }\n}\n\n\nfunction byX(a, b) {\n  return b.x - a.x;\n}\n\nfunction dedup(edges) {\n  var j = edges.length,\n    a, b, i, m, n;\n\n  outer: while(j) {\n    b = edges[--j];\n    a = edges[--j];\n    i = j;\n    while(i) {\n      n = edges[--i];\n      m = edges[--i];\n      if((a === m && b === n) || (a === n && b === m)) {\n        edges.splice(j, 2);\n        edges.splice(i, 2);\n        j -= 2;\n        continue outer;\n      }\n    }\n  }\n}\n\nfunction _triangulate(vertices) {\n  /* Bail if there aren't enough vertices to form any triangles. */\n  if(vertices.length < 3)\n    return [];\n\n  /* Ensure the vertex array is in order of descending X coordinate\n   * (which is needed to ensure a subquadratic runtime), and then find\n   * the bounding box around the points. */\n  vertices.sort(byX);\n\n  var i = vertices.length - 1,\n    xmin = vertices[i].x,\n    xmax = vertices[0].x,\n    ymin = vertices[i].y,\n    ymax = ymin;\n\n  while(i--) {\n    if(vertices[i].y < ymin) ymin = vertices[i].y;\n    if(vertices[i].y > ymax) ymax = vertices[i].y;\n  }\n\n  /* Find a supertriangle, which is a triangle that surrounds all the\n   * vertices. This is used like something of a sentinel value to remove\n   * cases in the main algorithm, and is removed before we return any\n   * results.\n   *\n   * Once found, put it in the \"open\" list. (The \"open\" list is for\n   * triangles who may still need to be considered; the \"closed\" list is\n   * for triangles which do not.) */\n  var dx = xmax - xmin,\n    dy = ymax - ymin,\n    dmax = (dx > dy) ? dx : dy,\n    xmid = (xmax + xmin) * 0.5,\n    ymid = (ymax + ymin) * 0.5,\n    open = [\n      new Triangle(\n          {x: xmid - 20 * dmax, y: ymid -      dmax, __sentinel: true},\n          {x: xmid            , y: ymid + 20 * dmax, __sentinel: true},\n          {x: xmid + 20 * dmax, y: ymid -      dmax, __sentinel: true}\n        )\n    ],\n    closed = [],\n    edges = [],\n    j, a, b;\n\n  /* Incrementally add each vertex to the mesh. */\n  i = vertices.length;\n  while(i--) {\n    /* For each open triangle, check to see if the current point is\n     * inside it's circumcircle. If it is, remove the triangle and add\n     * it's edges to an edge list. */\n    edges.length = 0;\n    j = open.length;\n    while(j--) {\n      /* If this point is to the right of this triangle's circumcircle,\n       * then this triangle should never get checked again. Remove it\n       * from the open list, add it to the closed list, and skip. */\n      dx = vertices[i].x - open[j].x;\n      if(dx > 0 && dx * dx > open[j].r) {\n        closed.push(open[j]);\n        open.splice(j, 1);\n        continue;\n      }\n\n      /* If not, skip this triangle. */\n      dy = vertices[i].y - open[j].y;\n      if(dx * dx + dy * dy > open[j].r)\n        continue;\n\n      /* Remove the triangle and add it's edges to the edge list. */\n      edges.push(\n        open[j].a, open[j].b,\n        open[j].b, open[j].c,\n        open[j].c, open[j].a\n      );\n      open.splice(j, 1);\n    }\n\n    /* Remove any doubled edges. */\n    dedup(edges);\n\n    /* Add a new triangle for each edge. */\n    j = edges.length;\n    while(j) {\n      b = edges[--j];\n      a = edges[--j];\n      open.push(new Triangle(a, b, vertices[i]));\n    }\n  }\n\n  /* Copy any remaining open triangles to the closed list, and then\n   * remove any triangles that share a vertex with the supertriangle. */\n  Array.prototype.push.apply(closed, open);\n\n  i = closed.length;\n  while(i--)\n    if(closed[i].a.__sentinel ||\n      closed[i].b.__sentinel ||\n      closed[i].c.__sentinel)\n      closed.splice(i, 1);\n\n    /* Yay, we're done! */\n  return closed;\n}\n","import GeometryOperators from \"src/operators/geometry/GeometryOperators\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport { context, TwoPi } from 'src/Global';\n\n//TODO: delete many functions that are deprectaed, replaced by SimpleGraphics.js functions\n\n//include(frameworksRoot+\"operators/geometry/GeometryOperators.js\");\n/**\n * @classdesc Draw basic shapes\n *\n * @namespace\n * @category geometry\n */\nfunction Draw() {}\nexport default Draw;\n\nDraw.drawSmoothPolygon = function(polygon, closed, amount) { //TODO: add tx, ty\n  amount = amount == null ? 30 : amount;\n  var controlPoints;\n\n  if(polygon.length < 2) return null;\n  if(polygon.length == 2) {\n    var a = Math.atan2(polygon[1].y - polygon[0].y, polygon[1].x - polygon[0].x) - 0.5 * Math.PI;\n    var cosa = amount * Math.cos(a);\n    var sina = amount * Math.sin(a);\n    context.moveTo(polygon[0].x, polygon[0].y);\n    context.bezierCurveTo(\n      polygon[0].x + cosa, polygon[0].y + sina,\n      polygon[1].x + cosa, polygon[1].y + sina,\n      polygon[1].x, polygon[1].y\n    );\n    context.bezierCurveTo(\n      polygon[1].x - cosa, polygon[1].y - sina,\n      polygon[0].x - cosa, polygon[0].y - sina,\n      polygon[0].x, polygon[0].y\n    );\n    return;\n  }\n  var i;\n  var nPoints = polygon.length;\n  var prevPoint = polygon[nPoints - 1];\n  var point = polygon[0];\n  var nextPoint = polygon[1];\n  controlPoints = GeometryOperators.getSoftenControlPoints(prevPoint, point, nextPoint, amount);\n  var prevCP = controlPoints[1];\n  var cP;\n  context.moveTo(point.x, point.y);\n  prevPoint = point;\n  var nSteps = nPoints + Number(closed);\n  for(i = 1; i < nSteps; i++) {\n    point = polygon[i % nPoints];\n    nextPoint = polygon[(i + 1) % nPoints];\n    controlPoints = GeometryOperators.getSoftenControlPoints(prevPoint, point, nextPoint, amount);\n    cP = controlPoints[0];\n    context.bezierCurveTo(prevCP.x, prevCP.y, cP.x, cP.y, point.x, point.y);\n    prevCP = controlPoints[1];\n    prevPoint = point;\n  }\n};\n\n/**\n * modes:\n * 0: adjust to rectangle\n * 1: center and mask\n * 2: center and eventual reduction (image smaller than rectangle)\n * 3: adjust to rectangle preserving proportions (image bigger than rectangle)\n * 4: fill repeated from corner\n * 5: fill repeated from 0,0\n */\nDraw.fillRectangleWithImage = function(rectangle, image, mode, backColor) {\n  if(backColor != null) {\n    context.fillStyle = backColor;\n    context.beginPath();\n    context.fillRect(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    context.fill();\n  }\n\n  var sx;\n  var sy;\n  var dx;\n  var dy;\n  var dWidth;\n  var dHeight;\n\n  switch(mode) {\n\n    case 0:\n      context.drawImage(image, rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n      break;\n    case 1:\n      sx = Math.max(image.width - rectangle.width, 0) * 0.5;\n      sy = Math.max(image.height - rectangle.height, 0) * 0.5;\n      dx = rectangle.x + Math.max(rectangle.width - image.width, 0) * 0.5;\n      dy = rectangle.y + Math.max(rectangle.height - image.height, 0) * 0.5;\n      dWidth = Math.min(image.width, rectangle.width);\n      dHeight = Math.min(image.height, rectangle.height);\n      context.drawImage(image, sx, sy, dWidth, dHeight, dx, dy, dWidth, dHeight);\n      break;\n    case 2:\n      sx = Math.max(image.width - rectangle.width, 0);\n      sy = Math.max(image.height - rectangle.height, 0);\n      dWidth = Math.min(image.width, rectangle.width);\n      dHeight = Math.min(image.height, rectangle.height);\n      var propD = dWidth / dHeight;\n      var propB = image.width / image.height;\n      if(propD < propB) dHeight = dWidth / propB;\n      if(propD > propB) dWidth = dHeight / propB;\n      dx = rectangle.x + (rectangle.width - dWidth) * 0.5;\n      dy = rectangle.y + (rectangle.height - dHeight) * 0.5;\n      context.drawImage(image, 0, 0, image.width, image.height, dx, dy, dWidth, dHeight);\n      break;\n    case 3:\n      var sh, sw;\n      if(rectangle.width / rectangle.height < image.width / image.height) {\n        sh = image.height;\n        sw = sh * rectangle.width / rectangle.height;\n        sx = 0.5 * (image.width - sw);\n        sy = 0;\n\n      } else {\n        sw = image.width;\n        sh = sw * rectangle.height / rectangle.width;\n        sx = 0;\n        sy = 0.5 * (image.height - sh);\n\n      }\n      context.drawImage(image, sx, sy, sw, sh, rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n      break;\n    case 4:\n      break;\n    case 5:\n      break;\n  }\n};\n\n\n/**\n * Draws an ellipse using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The center x coordinate\n * @param {Number} y The center y coordinate\n * @param {Number} rW The horizontal radius of the ellipse\n * @param {Number} rH The vertical radius of the ellipse\n\n */\nDraw.drawEllipse = function(x, y, rW, rH) {\n  var k = 0.5522848, // 4 * ((√(2) - 1) / 3)\n    ox = rW * k, // control point offset horizontal\n    oy = rH * k, // control point offset vertical\n    xe = x + rW, // x-end\n    ye = y + rH; // y-end\n\n  context.moveTo(x - rW, y);\n  context.bezierCurveTo(x - rW, y - oy, x - ox, y - rH, x, y - rH);\n  context.bezierCurveTo(x + ox, y - rH, xe, y - oy, xe, y);\n  context.bezierCurveTo(xe, y + oy, x + ox, ye, x, ye);\n  context.bezierCurveTo(x - ox, ye, x - rW, y + oy, x - rW, y);\n  context.moveTo(x - rW, y);\n};\n\n/**\n * Draws a polygon\n * @param {CanvasRenderingContext2D} context\n * @param {Polygon} Polygon to draw\n * @param {Boolean} close polygon\n * @param {Number} tx horizontal translation\n * @param {Number} ty vertical translation\n */\nDraw.drawPolygon = function(polygon, close, tx, ty) {\n  tx = tx || 0;\n  ty = ty || 0;\n  var i;\n  context.moveTo(tx + polygon[0].x, ty + polygon[0].y);\n  for(i = 1; polygon[i] != null; i++) {\n    context.lineTo(tx + polygon[i].x, ty + polygon[i].y);\n  }\n  if(close) {\n    context.lineTo(tx + polygon[0].x, ty + polygon[0].y);\n  }\n};\n\nDraw.drawPolygonWithControlPoints = function(polygon, controlPoints, tx, ty) {\n  tx = tx || 0;\n  ty = ty || 0;\n  var i;\n  context.moveTo(tx + polygon[0].x, ty + polygon[0].y);\n  for(i = 1; polygon[i] != null; i++) {\n    context.bezierCurveTo(tx + controlPoints[(i - 1) * 2].x, ty + controlPoints[(i - 1) * 2].y,\n      tx + controlPoints[i * 2 - 1].x, ty + controlPoints[i * 2 - 1].y,\n      tx + polygon[i].x, ty + polygon[i].y);\n  }\n};\n\nDraw.drawBezierPolygon = function(bezierPolygon, tx, ty) {\n  tx = tx || 0;\n  ty = ty || 0;\n  var bI;\n  var N = Math.floor((bezierPolygon.length - 1) / 3);\n  var i;\n  context.moveTo(tx + bezierPolygon[0].x, ty + bezierPolygon[0].y);\n  for(i = 0; i < N; i++) {\n    bI = i * 3 + 1;\n\n    context.bezierCurveTo(\n      tx + bezierPolygon[bI].x, ty + bezierPolygon[bI].y,\n      tx + bezierPolygon[bI + 1].x, ty + bezierPolygon[bI + 1].y,\n      tx + bezierPolygon[bI + 2].x, ty + bezierPolygon[bI + 2].y\n    );\n  }\n};\n\nDraw.drawBezierPolygonTransformed = function(bezierPolygon, transformationFunction) {\n  if(bezierPolygon == null ||  bezierPolygon.length == 0) return;\n\n  var bI;\n  var N = Math.floor((bezierPolygon.length - 1) / 3);\n  var i;\n  var p0 = transformationFunction(bezierPolygon[0]);\n  var p1;\n  var p2;\n\n  context.moveTo(p0.x, p0.y);\n  for(i = 0; i < N; i++) {\n    bI = i * 3 + 1;\n\n    p0 = transformationFunction(bezierPolygon[bI]);\n    p1 = transformationFunction(bezierPolygon[bI + 1]);\n    p2 = transformationFunction(bezierPolygon[bI + 2]);\n\n    context.bezierCurveTo(\n      p0.x, p0.y,\n      p1.x, p1.y,\n      p2.x, p2.y\n    );\n  }\n};\n\nDraw.drawPolygonTransformed = function(polygon, transformationFunction) {\n  var p = transformationFunction(polygon[0]);\n  context.moveTo(p.x, p.y);\n  for(var i = 0; polygon[i] != null; i++) {\n    p = transformationFunction(polygon[i]);\n    context.lineTo(p.x, p.y);\n  }\n};\n\n\nDraw.drawSliderRectangle = function(x, y, width, height) {\n  context.arc(x + width * 0.5, y, width * 0.5, Math.PI, TwoPi);\n  context.lineTo(x + width, y);\n  context.arc(x + width * 0.5, y + height, width * 0.5, 0, Math.PI);\n  context.lineTo(x, y);\n  //context.fillRect(x, y, width, height);\n};\n\n\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius. Defaults to 5;\n */\nDraw.drawRoundRect = function(x, y, width, height, radius) {\n  radius = radius || 0;\n  var bottom = y + height;\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(x + width, bottom, x + width - radius, bottom);\n  context.lineTo(x + radius, bottom);\n  context.quadraticCurveTo(x, bottom, x, bottom - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n};\n\nDraw.drawEquilateralTriangle = function(x, y, radius, angle) { //deprecated\n  angle = angle || 0;\n  context.moveTo(radius * Math.cos(angle) + x, radius * Math.sin(angle) + y);\n  context.lineTo(radius * Math.cos(angle + 2.0944) + x, radius * Math.sin(angle + 2.0944) + y);\n  context.lineTo(radius * Math.cos(angle + 4.1888) + x, radius * Math.sin(angle + 4.1888) + y);\n  context.lineTo(radius * Math.cos(angle) + x, radius * Math.sin(angle) + y);\n};\n\nDraw.drawArrowTriangle = function(p0, p1, base) {\n  var angle = p0.angleToPoint(p1);\n  var height = p0.distanceToPoint(p1);\n  Draw.drawTriangleFromBase(p0.x, p0.y, base, height, angle);\n};\n\nDraw.drawTriangleFromBase = function(x, y, base, height, angle) {\n  context.moveTo(x + 0.5 * base * Math.cos(angle + Math.PI * 0.5), y + 0.5 * base * Math.sin(angle + Math.PI * 0.5));\n  context.lineTo(x + 0.5 * base * Math.cos(angle - Math.PI * 0.5), y + 0.5 * base * Math.sin(angle - Math.PI * 0.5));\n  context.lineTo(x + height * Math.cos(angle), y + height * Math.sin(angle));\n  context.lineTo(x + 0.5 * base * Math.cos(angle + Math.PI * 0.5), y + 0.5 * base * Math.sin(angle + Math.PI * 0.5));\n};\n\nDraw.drawHorizontalFlowPiece = function(x0, x1, y0U, y0D, y1U, y1D, offX) {\n  context.moveTo(x0, y0U);\n  context.bezierCurveTo(x0 + offX, y0U, x1 - offX, y1U, x1, y1U);\n  context.lineTo(x1, y1D);\n  context.bezierCurveTo(x1 - offX, y1D, x0 + offX, y0D, x0, y0D);\n  context.lineTo(x0, y0U);\n};\n\n\n\nDraw.drawRectangles = function(rectangleList, x, y, colors, margin, bitmapDataList, bitmapDataDrawMode) {\n  margin = margin || 0;\n  var twoMargin = 2 * margin;\n  var i;\n  var rect;\n  if(colors != null) var nColors = colors.length;\n  var adjustedRect = new Rectangle();\n  for(i = 0; rectangleList[i] != null; i++) {\n    rect = rectangleList[i];\n    if(rect.height <= margin || rect.width <= margin) continue;\n    if(colors != null) context.fillStyle = colors[i % nColors];\n    context.fillRect(rect.x + x + margin, rect.y + y + margin, rect.width - twoMargin, rect.height - twoMargin);\n    if(bitmapDataList != null && bitmapDataList[i] != null) {\n      adjustedRect.x = rect.x + x + margin;\n      adjustedRect.y = rect.y + y + margin;\n      adjustedRect.width = rect.width - twoMargin;\n      adjustedRect.height = rect.height - twoMargin;\n      Draw.fillRectangleWithImage(context, adjustedRect, bitmapDataList[i], bitmapDataDrawMode);\n    }\n  }\n};\n\nDraw.drawQuadrilater = function(p0, p1, p2, p3, close) {\n  close = close == null ? true : close;\n  context.moveTo(p0.x, p0.y);\n  context.lineTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  if(close) context.lineTo(p0.x, p0.y);\n};\n\n/**\n * it assumes that both circles centers have same y coordinates\n */\nDraw.drawLens = function(circle0, circle1) {\n  if(circle1.x < circle0.x) {\n    var _circle = circle1.clone();\n    circle1 = circle0.clone();\n    circle0 = _circle;\n  }\n  if(circle1.x + circle1.z <= circle0.x + circle0.z) {\n    context.arc(circle1.x, circle1.y, circle1.z, 0, TwoPi);\n    return;\n  } else if(circle0.x - circle0.z >= circle1.x - circle1.z) {\n    context.arc(circle0.x, circle0.y, circle0.z, 0, TwoPi);\n    return;\n  }\n\n  var angles = GeometryOperators.circlesLensAngles(circle0, circle1);\n\n  context.arc(circle0.x, circle0.y, circle0.z, angles[0], angles[1]);\n  context.arc(circle1.x, circle1.y, circle1.z, angles[2], angles[3]);\n};\n\n\n// Draw.drawAndCapture = function(drawFunction, frame, target) {\n//   // TODO refactor this to not reassign context as that prevents this\n//   // from building.\n\n//   var defaultContext = context;\n//   context = hiddenContext;\n//   context.canvas.setAttribute('width', frame.width);\n//   context.canvas.setAttribute('height', frame.height);\n//   context.clearRect(0, 0, frame.width, frame.height);\n\n//   context.translate(-frame.x, -frame.y);\n\n//   drawFunction.call(target);\n\n//   var image = new Image();\n//   image.src = context.canvas.toDataURL();\n\n//   context = defaultContext;\n//   return image;\n// };\n","import Polygon from \"src/dataStructures/geometry/Polygon\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Tree from \"src/dataStructures/structures/networks/Tree\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport Draw from \"src/tools/graphic/Draw\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport GeometryOperators from \"src/operators/geometry/GeometryOperators\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport NumberListGenerators from \"src/operators/numeric/numberList/NumberListGenerators\";\nimport {\n  context,\n  clearContext,\n  TwoPi\n} from \"src/Global\";\n\n/**\n * @classdesc Provides a set of tools that work with Polygons\n *\n * @namespace\n * @category geometry\n */\nfunction PolygonOperators() {}\nexport default PolygonOperators;\n\n/**\n * builds a Hull polygon from a set of points\n * @param  {Polygon} polygon set of points\n * @param  {Boolean} returnIndexes if true returns the indexes of external points, connected by the Hull polygon (false by default)\n * @return {List} Hull polygn or list of indexes\n * tags:geometry\n */\nPolygonOperators.hull = function(polygon, returnIndexes) {\n  returnIndexes = returnIndexes == null ? false : returnIndexes;\n  var i;\n  var t;\n  var p = polygon;\n  var n = p.length;\n  var k = 0;\n  var h = new Polygon();\n  if(returnIndexes) var indexes = new NumberList();\n\n  p = PolygonOperators.sortOnXY(p);\n\n  if(returnIndexes) {\n    for(i = 0; i < n; i++) {\n      while(k >= 2 && PolygonOperators.crossProduct3Points(h[k - 2], h[k - 1], p[i]) <= 0)\n        k--;\n      h[k++] = p[i];\n      indexes[k - 1] = i;\n    }\n\n    for(i = n - 2, t = k + 1; i >= 0; i--) {\n      while(k >= t && PolygonOperators.crossProduct3Points(h[k - 2], h[k - 1], p[i]) <= 0)\n        k--;\n      h[k++] = p[i];\n      indexes[k - 1] = i;\n    }\n\n    return NumberList.fromArray(indexes.getSubList(new Interval(0, k - 2)));\n  }\n\n  for(i = 0; i < n; i++) {\n    while(k >= 2 && PolygonOperators.crossProduct3Points(h[k - 2], h[k - 1], p[i]) <= 0)\n      k--;\n    h[k++] = p[i];\n  }\n\n  for(i = n - 2, t = k + 1; i >= 0; i--) {\n    while(k >= t && PolygonOperators.crossProduct3Points(h[k - 2], h[k - 1], p[i]) <= 0)\n      k--;\n    h[k++] = p[i];\n  }\n\n  return Polygon.fromArray(h.getSubList(new Interval(0, k - 2)));\n};\n\n/**\n * builds a dendrogram (tree) from a Polygon (currently using barycenter for distances)\n * @param  {Polygon} polygon\n * @return {Tree} dendrogram\n * tags:geometry\n */\nPolygonOperators.buildDendrogramFromPolygon = function(polygon) {\n  var tree = new Tree();\n  var point, i;\n  var node;\n  var tW;\n  var parent;\n  var leaves = new NodeList();\n\n  var node0, node1, nodeList = new Polygon();\n\n  polygon.forEach(function(point, i) {\n    node = new Node('point_' + i, 'point_' + i);\n    node.weight = 1;\n    node.barycenter = point;\n    node.point = point;\n    node.polygon = new Polygon(point);\n    tree.addNode(node);\n    nodeList.push(node);\n    leaves.push(node);\n  });\n\n  tree.nodeList = tree.nodeList.getReversed();\n\n  //c.l('-');\n\n  var buildNodeFromPair = function(node0, node1) {\n    var parent = new Node(\"(\" + node0.id + \",\" + node1.id + \")\", \"(\" + node0.id + \",\" + node1.id + \")\");\n    parent.polygon = node0.polygon.concat(node1.polygon);\n    //c.l(\"node0.polygon.length, node1.polygon.length, parent.polygon.length\", node0.polygon.length, node1.polygon.length, parent.polygon.length);\n    parent.weight = parent.polygon.length;\n    tW = node0.weight + node1.weight;\n    parent.barycenter = new Point((node0.weight * node0.barycenter.x + node1.weight * node1.barycenter.x) / tW, (node0.weight * node0.barycenter.y + node1.weight * node1.barycenter.y) / tW);\n    //c.l('parent.barycenter.x', parent.barycenter.x, parent.barycenter.y);\n    tree.addNode(parent);\n    tree._newCreateRelation(parent, node0);\n    tree._newCreateRelation(parent, node1);\n    return parent;\n  };\n\n  var closestPair;\n  while(nodeList.length > 1) {\n    closestPair = PolygonOperators._findClosestNodes(nodeList);\n    node0 = nodeList[closestPair[0]];\n    node1 = nodeList[closestPair[1]];\n    parent = buildNodeFromPair(node0, node1);\n    parent.distance = closestPair.distance;\n    console.log('distance:', parent.distance);\n    nodeList.splice(closestPair[0], 1);\n    nodeList.splice(closestPair[1] - 1, 1);\n    nodeList.push(parent);\n  }\n\n  tree.nodeList = tree.nodeList.getReversed();\n\n  var assignLevel = function(node, parentLevel) {\n    var son;\n    node.level = parentLevel + 1;\n    node.toNodeList.forEach(function(son) {\n      assignLevel(son, node.level);\n    });\n  };\n\n  assignLevel(tree.nodeList[0], -1);\n\n  tree.leaves = leaves;\n\n  return tree;\n\n};\n\nPolygonOperators._findClosestNodes = function(nodeList) {\n  var i, j;\n  var d2;\n  var d2Min = 9999999999;\n  var pair;\n\n  for(i = 0; nodeList[i + 1] != null; i++) {\n    for(j = i + 1; nodeList[j] != null; j++) {\n      d2 = Math.pow(nodeList[i].barycenter.x - nodeList[j].barycenter.x, 2) + Math.pow(nodeList[i].barycenter.y - nodeList[j].barycenter.y, 2);\n      if(d2 < d2Min) {\n        d2Min = d2;\n        pair = [i, j];\n      }\n    }\n  }\n\n  pair.distance = d2Min;\n\n  return pair;\n};\n\n\nPolygonOperators.sortOnXY = function(polygon) {\n  return polygon.sort(function(p0, p1) {\n    if(p0.x < p1.x) return -1;\n    if(p0.x == p1.x && p0.y < p1.y) return -1;\n    return 1;\n  });\n};\n\n//TODO: move this to PointOperators\nPolygonOperators.crossProduct3Points = function(o, a, b) {\n  return(a.x - o.x) * (b.y - o.y) - (a.y - o.y) * (b.x - o.x);\n};\n\nPolygonOperators.expandFromBarycenter = function(polygon, factor) {\n  var newPolygon = new Polygon();\n  var barycenter = polygon.getBarycenter();\n\n  for(var i = 0; polygon[i] != null; i++) {\n    newPolygon[i] = polygon[i].expandFromPoint(barycenter, factor);\n  }\n\n  return newPolygon;\n};\n\nPolygonOperators.expandInAngles = function(polygon, amount) { //TODO: test if it works with convex polygons\n  var newPolygon = new Polygon();\n  var p0 = polygon[polygon.length - 1];\n  var p1 = polygon[0];\n  var p2 = polygon[1];\n\n  var a0;\n  var a1;\n  var sign;\n\n  var a = 0.5 * Math.atan2(p1.y - p2.y, p1.x - p2.x) + 0.5 * Math.atan2(p1.y - p0.y, p1.x - p0.x);\n  var globalSign = polygon.containsPoint(new Point(p1.x + Math.floor(amount) * Math.cos(a), p1.y + Math.floor(amount) * Math.sin(a))) ? -1 : 1;\n\n\n  for(var i = 0; polygon[i] != null; i++) {\n    p0 = polygon[(i - 1 + polygon.length) % polygon.length];\n    p1 = polygon[i];\n    p2 = polygon[(i + 1) % polygon.length];\n    a0 = Math.atan2(p1.y - p2.y, p1.x - p2.x);\n    a1 = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n    sign = Math.abs(a1 - a0) < Math.PI ? -1 : 1;\n    a = 0.5 * a0 + 0.5 * a1;\n    //sign = polygon.containsPoint(new Point(p1.x + Math.floor(amount)*Math.cos(a), p1.y + Math.floor(amount)*Math.sin(a)))?-1:1;\n    newPolygon[i] = new Point(p1.x + globalSign * sign * amount * Math.cos(a), p1.y + globalSign * sign * amount * Math.sin(a));\n  }\n\n  return newPolygon;\n};\n\nPolygonOperators.simplifyPolygon = function(polygon, margin) {\n  margin = margin == null || margin == 0 ? 1 : margin;\n  var newPolygon = polygon.clone();\n  var p0;\n  var p1;\n  var p2;\n  var line;\n  var i;\n  var nPoints = polygon.length;\n  for(i = 0; i < nPoints; i++) {\n    p0 = newPolygon[i];\n    p1 = newPolygon[(i + 1) % nPoints];\n    p2 = newPolygon[(i + 2) % nPoints];\n    line = GeometryOperators.lineFromTwoPoints(p0, p2);\n    if(GeometryOperators.distancePointToLine(p1, line) < margin) {\n      //newPolygon.splice((i+1)%nPoints, 1);\n      newPolygon = newPolygon.getWithoutElementAtIndex((i + 1) % nPoints);\n      i--;\n    }\n    nPoints = newPolygon.length;\n  }\n  return newPolygon;\n};\n\n\n/**\n * used techinique: draws the bézier polygon and checks color\n */\nPolygonOperators.bezierPolygonContainsPoint = function(polygon, point, border) {\n  var frame = polygon.getFrame();\n  clearContext();\n  context.fillStyle = 'black';\n  context.fillRect(0, 0, frame.width, frame.height);\n  if(border != null) {\n    context.strokeStyle = 'black';\n    context.lineWidth = border;\n  }\n  context.fillStyle = 'white';\n  context.beginPath();\n  Draw.drawBezierPolygon(context, polygon, -frame.x, -frame.y);\n  context.fill();\n  if(border != null) context.stroke();\n  var data = context.getImageData(point.x - frame.x, point.y - frame.y, 1, 1).data;\n  clearContext();\n  return data[0] > 0;\n};\n\n\n/**\n * used techinique: draws the bézier polygon and checks color\n * best center: the center of biggest circle within the polygon\n * [!] very unefficient\n */\nPolygonOperators.getBezierPolygonBestCenter = function(polygon, nAttempts) {\n  nAttempts = nAttempts == null ? 500 : nAttempts;\n\n  var frame = polygon.getFrame();\n  context.fillStyle = 'black';\n  context.fillRect(0, 0, frame.width, frame.height);\n  context.fillStyle = 'white';\n  context.beginPath();\n  Draw.drawBezierPolygon(context, polygon, -frame.x, -frame.y);\n  context.fill();\n\n  var center;\n  var testPoint;\n  var angle;\n  var r;\n  var rMax = 0;\n  var bestCenter;\n\n\n  for(var i = 0; i < nAttempts; i++) {\n    center = frame.getRandomPoint();\n    for(angle = 0; angle += 0.1; angle <= TwoPi) {\n      r = angle;\n      var data = context.getImageData(center.x + r * Math.cos(angle) - frame.x, center.y + r * Math.sin(angle) - frame.y, 1, 1).data;\n      if(data[0] == 0) {\n        if(r > rMax) {\n          rMax = r;\n          bestCenter = center;\n        }\n        break;\n      }\n    }\n  }\n\n  return bestCenter;\n};\n\n\nPolygonOperators.convexHull = function(polygon, deepness) {\n  var indexesHull = this.hull(polygon, true);\n  var pointsLeftIndexes = NumberListGenerators.createSortedNumberList(polygon.length);\n  pointsLeftIndexes = pointsLeftIndexes.getWithoutElementsAtIndexes(indexesHull);\n  var i;\n  var j;\n  var k;\n  var p0;\n  var p1;\n  var pC = new Point();\n  var p;\n  var d;\n  var dMin = deepness - 1;\n  var jMin;\n  var kMin;\n  var dP;\n  var nHull = indexesHull.length;\n\n  while(dMin < deepness) {\n    //c.log(dMin, deepness, nHull, pointsLeftIndexes.length);\n    dMin = 999999999;\n    for(j = 0; j < nHull; j++) {\n      p0 = polygon[indexesHull[j]];\n      p1 = polygon[indexesHull[(j + 1) % indexesHull.length]];\n      pC.x = (p0.x + p1.x) * 0.5;\n      pC.y = (p0.y + p1.y) * 0.5;\n      dP = Math.sqrt(Math.pow(p1.x - p0.x, 2) + Math.pow(p1.y - p0.y, 2));\n      for(k = 0; pointsLeftIndexes[k] != null; k++) {\n        p = polygon[pointsLeftIndexes[k]];\n        //d = Math.pow(p.x-pC.x, 2)+Math.pow(p.y-pC.y, 2);\n        d = (Math.sqrt(Math.pow(p.x - p0.x, 2) + Math.pow(p.y - p0.y, 2)) + Math.sqrt(Math.pow(p.x - p1.x, 2) + Math.pow(p.y - p1.y, 2))) / Math.pow(dP, 2);\n        if(d < dMin) {\n          dMin = d;\n          jMin = j;\n          kMin = k;\n        }\n      }\n    }\n\n    //c.log(\"  \", dMin);\n\n    for(j = nHull - 1; j > jMin; j--) {\n      indexesHull[j + 1] = indexesHull[j];\n    }\n    indexesHull[jMin + 1] = pointsLeftIndexes[kMin];\n\n    //pointsLeftIndexes.removeElement(pointsLeftIndexes[kMin]); //!!!! TODO: FIX THIS!\n    pointsLeftIndexes.splice(kMin, 1);\n\n    if(pointsLeftIndexes.length == 0) return indexesHull;\n\n    nHull++;\n  }\n  return indexesHull;\n};\n\nPolygonOperators.controlPointsFromPointsAnglesIntensities = function(polygon, angles, intensities) {\n  var controlPoints = new Polygon();\n  for(var i = 0; polygon[i] != null; i++) {\n    if(i > 0) controlPoints.push(new Point(polygon[i].x - intensities[i] * Math.cos(angles[i]), polygon[i].y - intensities[i] * Math.sin(angles[i])));\n    if(i < polygon.length - 1) controlPoints.push(new Point(polygon[i].x + intensities[i] * Math.cos(angles[i]), polygon[i].y + intensities[i] * Math.sin(angles[i])));\n  }\n  return controlPoints;\n};\n\n\nPolygonOperators.placePointsInsidePolygon = function(polygon, nPoints, mode) {\n  var points = new Polygon();\n  var frame = polygon.getFrame();\n  mode = mode || 0;\n  switch(mode) {\n    case 0: //random simple\n      var p;\n      while(points.length < nPoints) {\n        p = new Point(frame.x + Math.random() * frame.width, frame.y + Math.random() * frame.height);\n        if(PolygonOperators.polygonContainsPoint(polygon, p)) points.push(p);\n      }\n      return points;\n      break;\n  }\n};\n\nPolygonOperators.placePointsInsideBezierPolygon = function(polygon, nPoints, mode, border) {\n  var points = new Polygon();\n  var frame = polygon.getFrame();\n  mode = mode || 0;\n  switch(mode) {\n    case 0: //random simple\n      var p;\n      var nAttempts = 0;\n      while(points.length < nPoints && nAttempts < 1000) {\n        p = new Point(frame.x + Math.random() * frame.width, frame.y + Math.random() * frame.height);\n        nAttempts++;\n        if(PolygonOperators.bezierPolygonContainsPoint(polygon, p, border)) {\n          points.push(p);\n          nAttempts = 0;\n        }\n      }\n      return points;\n      break;\n  }\n};\n","import NodeList from 'src/dataStructures/structures/lists/NodeList';\nimport PolygonOperators from 'src/operators/geometry/PolygonOperators';\n\nCountryList.prototype = new NodeList();\nCountryList.prototype.constructor = CountryList;\n\n/**\n * @classdesc A {@link List} structure for storing {@link Country|Countries}.\n *\n * @description Creates a new CountryList instance.\n * @constructor\n * @category geo\n */\nfunction CountryList() {\n  var array = NodeList.apply(this, arguments);\n  //\n  array.name = \"\";\n  //assign methods to array:\n  array = CountryList.fromArray(array);\n  //\n  return array;\n}\nexport default CountryList;\n\nCountryList.fromArray = function(array) {\n  var result = NodeList.fromArray(array);\n  result.type = \"CountryList\";\n  //assign methods to array:\n  result.getCountryFromName = CountryList.prototype.getCountryFromName;\n  //transformative\n  result.removeAntarctica = CountryList.prototype.removeAntarctica;\n  result.removeTinyPolygonsFromCountries = CountryList.prototype.removeTinyPolygonsFromCountries;\n  result.removeTinyCountries = CountryList.prototype.removeTinyCountries;\n  result.simplifyAntarctica = CountryList.prototype.simplifyAntarctica;\n  result.assignValuesToCountriesFromTable = CountryList.prototype.assignValuesToCountriesFromTable;\n  result.simplifyPolygons = CountryList.prototype.simplifyPolygons;\n  return result;\n};\n\n/**\n * each country has several names to try a match\n * ISO id is allowed\n */\nCountryList.prototype.getCountryFromName = function(countryName) {\n  for(var i = 0; this[i] != null; i++) {\n    if(this[i].nameMatches(countryName)) return this[i];\n  }\n  return null;\n};\n\n\n//transformative\n\nCountryList.prototype.removeAntarctica = function() {\n  this.removeNode(this.getNodeById('AQ'));\n};\n\nCountryList.prototype.removeTinyPolygonsFromCountries = function(minArea) {\n  minArea = 0.2 || minArea;\n  var country;\n  var j;\n\n  for(var i = 0; this[i] != null; i++) {\n    country = this[i];\n    for(j = 0; country.polygonList[j] != null; j++) {\n      if(country.polygonList[j].getFrame().getArea() < minArea) {\n        country.polygonList.splice(j, 1);\n        j--;\n      }\n    }\n\n  }\n};\n\nCountryList.prototype.removeTinyCountries = function(minArea) {\n  minArea = 0.5 || minArea;\n  var country;\n  var j;\n  var small;\n  for(var i = 0; this[i] != null; i++) {\n    country = this[i];\n\n    small = true;\n    for(j = 0; country.polygonList[j] != null; j++) {\n      if(country.polygonList[j].getFrame().getArea() > minArea) {\n        small = false;\n        break;\n      }\n    }\n\n    if(small) {\n      this.removeNode(this[i]);\n      i--;\n    }\n  }\n};\n\nCountryList.prototype.simplifyPolygons = function(margin) {\n  var country;\n  var j;\n  var maxPL, jMax;\n\n  for(var i = 0; this[i] != null; i++) {\n    country = this[i];\n    maxPL = 0;\n    for(j = 0; country.polygonList[j] != null; j++) {\n      country.polygonList[j] = PolygonOperators.simplifyPolygon(country.polygonList[j], margin);\n      if(country.polygonList[j].length < 3) {\n        country.polygonList.splice(j, 1);\n        j--;\n      } else {\n        if(country.polygonList[j].length > maxPL) {\n          maxPL = country.polygonList[j].length;\n          jMax = j;\n        }\n      }\n    }\n    country.longestPolygon.destroy();\n    country.longestPolygon = country.polygonList[jMax];\n  }\n};\n\n/**\n * in 2D representations Antarctiva requires 2 extra points, placed on global geo grame corners\n * this method removes them (suitable for 3D representations)\n */\nCountryList.prototype.simplifyAntarctica = function() {\n  var polygonList = this.getNodeById('AQ').simplePolygonList;\n  if(polygonList != null) {\n    polygonList[0].splice(10, 1);\n    polygonList[0].splice(10, 1);\n  }\n  polygonList = this.getNodeById('AQ').polygonList;\n  if(polygonList != null) {\n    //TODO: remove last two points\n  }\n};\n\nCountryList.prototype.assignValuesToCountriesFromTable = function(table, valueToNull) {\n  var j;\n  var country;\n  for(var i = 0; table[0][i] != null; i++) {\n    country = this.getCountryFromName(table[0][i]);\n    if(country != null) {\n      for(j = 1; table[j] != null; j++) {\n        country[table[j].name] = table[j][i] == valueToNull ? null : table[j][i];\n      }\n    }\n  }\n};\n","import List from \"src/dataStructures/lists/List\";\n\nPolygon3DList.prototype = new List();\nPolygon3DList.prototype.constructor = Polygon3DList;\n\n/**\n * @classdesc A {@link List} structure for storing {@link Polygon3D} instances.\n *\n * @description Creates a new Polygon3DList.\n * @constructor\n * @category geometry\n */\nfunction Polygon3DList() {\n  var array = List.apply(this, arguments);\n  array = Polygon3DList.fromArray(array);\n  return array;\n}\nexport default Polygon3DList;\n\nPolygon3DList.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"Polygon3DList\";\n  return result;\n};\n","import List from \"src/dataStructures/lists/List\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\n\nColorList.prototype = new List();\nColorList.prototype.constructor = ColorList;\n\n/**\n * @classdesc A {@link List} for storing Colors.\n *\n * @description Creates a new ColorList.\n * @constructor\n * @category colors\n */\nfunction ColorList() {\n  var args = [];\n  var i;\n  for(i = 0; i < arguments.length; i++) {\n    args[i] = arguments[i];\n  }\n  var array = List.apply(this, args);\n  array = ColorList.fromArray(array);\n\n  return array;\n}\nexport default ColorList;\n\nColorList.fromArray = function(array) {\n  var result = List.fromArray(array);\n  result.type = \"ColorList\";\n  result.getRgbArrays = ColorList.prototype.getRgbArrays;\n  result.getInterpolated = ColorList.prototype.getInterpolated;\n  result.getInverted = ColorList.prototype.getInverted;\n  result.addAlpha = ColorList.prototype.addAlpha;\n  return result;\n};\n\n/**\n * return an arrays of rgb arrays ([rr,gg,bb])\n * @return {array}\n * tags:\n */\nColorList.prototype.getRgbArrays = function() {\n  var rgbArrays = new List();\n\n  for(var i = 0; this[i] != null; i++) {\n    rgbArrays[i] = ColorOperators.colorStringToRGB(this[i]);\n  }\n\n  return rgbArrays;\n};\n\n/**\n * interpolates colors with a given color and measure\n * @param  {String} color to be interpolated with\n * @param  {Number} value intenisty of interpolation [0,1]\n * @return {ColorList}\n * tags:\n */\nColorList.prototype.getInterpolated = function(color, value) {\n  var newColorList = new ColorList();\n\n  for(var i = 0; this[i] != null; i++) {\n    newColorList[i] = ColorOperators.interpolateColors(this[i], color, value);\n  }\n\n  newColorList.name = this.name;\n  return newColorList;\n};\n\n/**\n * inverts all colors\n * @return {ColorList}\n * tags:\n */\nColorList.prototype.getInverted = function() {\n  var newColorList = new ColorList();\n\n  for(var i = 0; this[i] != null; i++) {\n    newColorList[i] = ColorOperators.invertColor(this[i]);\n  }\n\n  newColorList.name = this.name;\n  return newColorList;\n};\n\n/**\n * adds alpha value to all colores\n * @param {Number} alpha alpha value in [0,1]\n * @return {ColorList}\n * tags:\n */\nColorList.prototype.addAlpha = function(alpha) {\n  var newColorList = new ColorList();\n\n  for(var i = 0; this[i] != null; i++) {\n    newColorList[i] = ColorOperators.addAlpha(this[i], alpha);\n  }\n\n  newColorList.name = this.name;\n  return newColorList;\n};\n","import ColorOperators from \"src/operators/graphic/ColorOperators\";\n\n/**\n * @classdesc Default color scales.\n *\n * @namespace\n * @category colors\n */\n\nfunction ColorScales() {}\nexport default ColorScales;\n// *\n//  * return a colorScale from its name\n//  * @param  {String} string name of ColorScale\n//  * @return {Function} ColorScale function\n//  * tags:conversion\n\n// ColorScales.getColorScaleByName = function(string){\n// \treturn ColorScales[string];\n// }\n\nColorScales.blackScale = function(value) {\n  return 'black';\n};\n\nColorScales.grayscale = function(value) {\n  var rgb = ColorOperators.interpolateColorsRGB([0, 0, 0], [255, 255, 255], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorScales.antiGrayscale = function(value) {\n  var rgb = ColorOperators.interpolateColorsRGB([255, 255, 255], [0, 0, 0], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorScales.antiTemperature = function(value) {\n  return ColorScales.temperature(1 - value);\n};\n\nColorScales.temperature = function(value) { //todo:make it efficient\n  if(value < 0.2) {\n    var color = ColorOperators.interpolateColors('#000000', ColorOperators.HSVtoHEX(234, 1, 1), value * 5);\n  } else if(value > 0.85) {\n    color = ColorOperators.interpolateColors(ColorOperators.HSVtoHEX(0, 1, 1), '#FFFFFF', (value - 0.85) / 0.15);\n  } else {\n    color = ColorOperators.HSVtoHEX(Math.round((0.65 - (value - 0.2)) * 360), 1, 1);\n  }\n  return color;\n};\n\nColorScales.sqrtTemperature = function(value) {\n  return ColorScales.temperature(Math.sqrt(value));\n};\n\nColorScales.sqrt4Temperature = function(value) {\n  return ColorScales.temperature(Math.pow(value, 0.25));\n};\n\nColorScales.quadraticTemperature = function(value) {\n  return ColorScales.temperature(Math.pow(value, 2));\n};\n\nColorScales.cubicTemperature = function(value) {\n  return ColorScales.temperature(Math.pow(value, 3));\n};\n\nColorScales.greenToRed = function(value) { //todo:make it efficient\n  var rgb = ColorOperators.interpolateColorsRGB([50, 255, 50], [255, 50, 50], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\nColorScales.greenToBlue = function(value) { //todo:make it efficient\n  var rgb = ColorOperators.interpolateColorsRGB([50, 255, 50], [50, 50, 255], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorScales.grayToOrange = function(value) { //todo:make it efficient\n  var rgb = ColorOperators.interpolateColorsRGB([100, 100, 100], [255, 110, 0], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorScales.blueToRed = function(value) {\n  return 'rgb(' + Math.floor(value * 255) + ',0,' + Math.floor((1 - value) * 255) + ')';\n};\n\nColorScales.blueToRedAlpha = function(value) { //todo:make it efficient\n  return 'rgba(' + Math.floor(value * 255) + ',0,' + Math.floor((1 - value) * 255) + ', 0.5)';\n};\n\nColorScales.whiteToRed = function(value) {\n  var gg = Math.floor(255 - value * 255);\n  return 'rgb(255,' + gg + ',' + gg + ')';\n};\n\nColorScales.redToBlue = function(value) {\n  var rgb = ColorOperators.interpolateColorsRGB([255, 0, 0], [0, 0, 255], value);\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\nColorScales.greenWhiteRed = function(value) {\n  if(value < 0.5) {\n    var rgb = ColorOperators.interpolateColorsRGB([50, 255, 50], [255, 255, 255], value * 2);\n  } else {\n    rgb = ColorOperators.interpolateColorsRGB([255, 255, 255], [255, 50, 50], (value - 0.5) * 2);\n  }\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\n\n\nColorScales.solar = function(value) {\n  var rgb = ColorOperators.interpolateColorsRGB([0, 0, 0], ColorOperators.interpolateColorsRGB([255, 0, 0], [255, 255, 0], value), Math.pow(value * 0.99 + 0.01, 0.2));\n  return ColorOperators.RGBtoHEX(rgb[0], rgb[1], rgb[2]);\n};\nColorScales.antiSolar = function(value) {\n  return ColorOperators.invertColor(ColorScales.solar(value));\n};\n","import DataModel from \"src/dataStructures/DataModel\";\nimport ColorList from \"src/dataStructures/graphic/ColorList\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\n\nColorScale.prototype = new DataModel();\nColorScale.prototype.constructor = ColorScale;\n\n/**\n * @classdesc Color scale.\n *\n * @description Creates a new ColorScale.\n * @param {Function} colorScaleFunction Function.\n * @constructor\n * @category colors\n */\nfunction ColorScale(colorScaleFunction) {\n  DataModel.apply(this, arguments);\n  this.name = \"\";\n  this.type = \"ColorScale\";\n\n  this.colorScaleFunction = colorScaleFunction ? colorScaleFunction : ColorScales.blackScale;\n}\nexport default ColorScale;\n\nColorScale.prototype.getColor = function(value) {\n  return this.colorScaleFunction(value);\n};\n\nColorScale.prototype.getColorList = function(nColors) {\n  var colorList = new ColorList();\n  var i;\n  for(i = 0; i < nColors; i++) {\n    colorList.push(this.getColor(i / (nColors - 1)));\n  }\n  return colorList;\n};\n","import Point from \"src/dataStructures/geometry/Point\";\nimport {\n  addInteractionEventListener,\n  removeInteractionEventListener,\n  mX,\n  mY,\n  cW\n} from \"src/Global\";\n\nfunction Space2D(configuration) {\n  configuration = configuration == null ? {} : configuration;\n\n  this.center = configuration.center == null ? new Point(0, 0) : configuration.center;\n  this.scale = 1;\n\n  if(configuration.interactionActive) this.activeInteraction();\n\n  this.MIN_SCALE = configuration.minScale == null ? 0.05 : configuration.minScale;\n  this.MAX_SCALE = configuration.maxScale == null ? 20 : configuration.maxScale;\n\n  this.active = configuration.interactionActive;\n}\nexport default Space2D;\n\nSpace2D.prototype.activeInteraction = function() {\n  if(this.active) return;\n  this.active = true;\n  addInteractionEventListener('mousedown', this.onMouse, this);\n  addInteractionEventListener('mouseup', this.onMouse, this);\n  addInteractionEventListener('mousewheel', this.wheel, this);\n};\n\nSpace2D.prototype.deActivate = function() {\n  this.active = false;\n  this.dragging = false;\n  removeInteractionEventListener('mousedown', this.onMouse, this);\n  removeInteractionEventListener('mouseup', this.onMouse, this);\n  removeInteractionEventListener('mousemove', this.onMouse, this);\n  removeInteractionEventListener('mousewheel', this.wheel, this);\n};\n\nSpace2D.prototype.stopDragging = function() {\n  removeInteractionEventListener('mousemove', this.onMouse, this);\n};\n\nSpace2D.prototype.project = function(point) {\n  return new Point((point.x - this.center.x) * this.scale, (point.y + this.center.y) * this.scale);\n};\n\nSpace2D.prototype.projectX = function(x) {\n  return(x - this.center.x) * this.scale;\n};\n\nSpace2D.prototype.projectY = function(y) {\n  return(y - this.center.y) * this.scale;\n};\n\n\nSpace2D.prototype.inverseProject = function(point) {\n  return new Point(point.x / this.scale + this.center.x, point.y / this.scale + this.center.y);\n};\n\nSpace2D.prototype.inverseProjectX = function(x) {\n  return x / this.scale + this.center.x;\n};\n\nSpace2D.prototype.inverseProjectY = function(y) {\n  return y / this.scale + this.center.y;\n};\n\nSpace2D.prototype.move = function(vector, projected) {\n  this.center = this.center.subtract(projected ? vector.factor(1 / this.scale) : vector);\n};\n\nSpace2D.prototype.factorScaleFromPoint = function(point, factor) {\n  var k = (1 - 1 / factor) / this.scale;\n  this.center.x = k * point.x + this.center.x;\n  this.center.y = k * point.y + this.center.y;\n\n  this.scale *= factor;\n};\n\nSpace2D.prototype.fixX = function(xDeparture, xArrival) {\n  this.center.x = xDeparture - (xArrival / this.scale);\n};\nSpace2D.prototype.fixY = function(yDeparture, yArrival) {\n  this.center.y = yDeparture - (yArrival / this.scale);\n};\n\nSpace2D.prototype.fixHorizontalInterval = function(departureInterval, arrivalInterval) {\n  this.scale = arrivalInterval.getAmplitude() / departureInterval.getAmplitude();\n  this.fixX((departureInterval.x + departureInterval.y) * 0.5, cW * 0.5);\n};\n\n//////\n\nSpace2D.prototype.onMouse = function(e) {\n  switch(e.type) {\n    case 'mousedown':\n      if(!this.active) return;\n      this.dragging = true;\n      this.prev_mX = mX;\n      this.prev_mY = mY;\n      addInteractionEventListener('mousemove', this.onMouse, this);\n      break;\n    case 'mouseup':\n      this.dragging = false;\n      removeInteractionEventListener('mousemove', this.onMouse, this);\n      break;\n    case 'mousemove':\n      if(!this.active) return;\n      this.center.x += (this.prev_mX - mX) / this.scale;\n      this.center.y += (this.prev_mY - mY) / this.scale;\n      this.prev_mX = mX;\n      this.prev_mY = mY;\n      break;\n  }\n};\n\n\n\nSpace2D.prototype.wheel = function(e) {\n  if(!this.active) return;\n  if(this.scale <= this.MIN_SCALE && e.value > 0) {\n    this.scale = this.MIN_SCALE;\n    return;\n  }\n  if(this.scale >= this.MAX_SCALE && e.value < 0) {\n    this.scale = this.MAX_SCALE;\n    return;\n  }\n  this.factorScaleFromPoint(new Point(mX - 0, mY - 0), (1 - 0.02 * e.value));\n};","import Tree from \"src/dataStructures/structures/networks/Tree\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport DateList from \"src/dataStructures/dates/DateList\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\n\n/**\n * @classdesc Provides a set of tools that work with DateLists.\n *\n * @namespace\n * @category dates\n */\nfunction DateListOperators() {}\nexport default DateListOperators;\n\n\nDateListOperators.buildTimeTreeFromDates = function(dates) {\n  if(dates == null) return;\n\n  var tree = new Tree();\n  var minYear;\n  var maxYear;\n\n  var minDate = dates[0];\n  var maxDate = dates[0];\n\n\n\n  dates.forEach(function(date) {\n    minDate = date < minDate ? date : minDate;\n    maxDate = date > maxDate ? date : maxDate;\n  });\n\n  minYear = minDate.getFullYear();\n  maxYear = minDate.getFullYear();\n\n  var superior = new Node(\"years\", \"years\");\n  tree.addNodeToTree(superior);\n  superior.dates = dates.clone();\n\n  var y, m, d, h, mn, s, ms;\n  var yNode, mNode, dNode, hNode, mnNode, sNode, msNode;\n  var parent;\n\n  //var N=0;\n\n  for(y = minYear; y <= maxYear; y++) {\n    yNode = new Node(String(y), String(y));\n    tree.addNodeToTree(yNode, superior);\n  }\n\n  dates.forEach(function(date) {\n    y = DateListOperators._y(date);\n    yNode = superior.toNodeList[y - minYear];\n\n    if(yNode.dates == null) {\n      yNode.dates = new DateList();\n\n      for(m = 0; m < 12; m++) {\n        mNode = new Node(DateOperators.MONTH_NAMES[m] + \"_\" + y, DateOperators.MONTH_NAMES[m]);\n        tree.addNodeToTree(mNode, yNode);\n        nDaysOnMonth = DateOperators.getNDaysInMonth(y, m + 1);\n      }\n    }\n    yNode.dates.push(date);\n\n\n    m = DateListOperators._m(date);\n    mNode = yNode.toNodeList[m];\n    if(mNode.dates == null) {\n      mNode.dates = new DateList();\n      for(d = 0; d < nDaysOnMonth; d++) {\n        dNode = new Node((d + 1) + \"_\" + mNode.id, String(d + 1));\n        tree.addNodeToTree(dNode, mNode);\n      }\n    }\n    mNode.dates.push(date);\n\n    d = DateListOperators._d(date);\n    dNode = mNode.toNodeList[d];\n    if(dNode.dates == null) {\n      dNode.dates = new DateList();\n      for(h = 0; h < 24; h++) {\n        hNode = new Node(h + \"_\" + dNode.id, String(h) + \":00\");\n        tree.addNodeToTree(hNode, dNode);\n      }\n    }\n    dNode.dates.push(date);\n\n    h = DateListOperators._h(date);\n    hNode = dNode.toNodeList[h];\n    if(hNode.dates == null) {\n      hNode.dates = new DateList();\n      for(mn = 0; mn < 60; mn++) {\n        mnNode = new Node(mn + \"_\" + hNode.id, String(mn));\n        tree.addNodeToTree(mnNode, hNode);\n      }\n    }\n    hNode.dates.push(date);\n\n    mn = DateListOperators._mn(date);\n    mnNode = hNode.toNodeList[mn];\n    if(mnNode.dates == null) {\n      mnNode.dates = new DateList();\n      //c.l(date);\n      // N++;\n      // for(s=0; s<60; s++){\n      // \tsNode = new Node(String(s), s+\"_\"+mnNode.id);\n      // \ttree.addNodeToTree(sNode, mnNode);\n      // }\n    }\n    mnNode.weight++;\n    mnNode.dates.push(date);\n\n    // s = DateListOperators._s(date);\n    // sNode = mnNode.toNodeList[s];\n    // if(sNode.dates==null){\n    // \tsNode.dates = new DateList();\n    // }\n    // sNode.dates.push(date);\n    // sNode.weight++;\n  });\n\n  tree.assignDescentWeightsToNodes();\n\n  //\n\n\n\n  // for(y=minYear; y<=maxYear; y++){\n  // \tyNode = new Node(String(y), String(y));\n  // \ttree.addNodeToTree(yNode, superior);\n\n  // \tfor(m=0; m<12; m++){\n  // \t\tmNode = new Node(DateOperators.MONTH_NAMES[m], DateOperators.MONTH_NAMES[m]+\"_\"+y);\n  // \t\ttree.addNodeToTree(mNode, yNode);\n  // \t\tnDaysOnMonth = DateOperators.getNDaysInMonth(y, m+1);\n\n  // \t\tfor(d=0; d<nDaysOnMonth; d++){\n  // \t\t\tdNode = new Node(String(d+1), (d+1)+\"_\"+mNode.id);\n  // \t\t\ttree.addNodeToTree(dNode, mNode);\n\n  // \t\t\tfor(h=0; h<24; h++){\n  // \t\t\t\thNode = new Node(String(h), h+\"_\"+dNode.id);\n  // \t\t\t\ttree.addNodeToTree(hNode, dNode);\n\n  // \t\t\t\tfor(mn=0; mn<60; mn++){\n  // \t\t\t\t\tmnNode = new Node(String(mn), mn+\"_\"+hNode.id);\n  // \t\t\t\t\ttree.addNodeToTree(mnNode, hNode);\n\n  // \t\t\t\t\tfor(s=0; s<60; s++){\n  // \t\t\t\t\t\tsNode = new Node(String(s), s+\"_\"+mnNode.id);\n  // \t\t\t\t\t\ttree.addNodeToTree(sNode, mnNode);\n  // \t\t\t\t\t}\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t}\n  // }\n\n  return tree;\n};\n\nDateListOperators._y = function(date) {\n  return date.getFullYear();\n};\nDateListOperators._m = function(date) {\n  return date.getMonth();\n};\nDateListOperators._d = function(date) {\n  return date.getDate() - 1;\n};\nDateListOperators._h = function(date) {\n  return date.getHours();\n};\nDateListOperators._mn = function(date) {\n  return date.getMinutes();\n};\nDateListOperators._s = function(date) {\n  return date.getSeconds();\n};\nDateListOperators._ms = function(date) {\n  return date.getMilliseconds();\n};\n","import CountryOperators from 'src/operators/geo/CountryOperators';\n\n/**\n * @classdesc Provides a set of tools that work with {@link countryList|CountryLists}.\n *\n * @namespace\n * @category geo\n */\nfunction CountryListOperators() {}\nexport default CountryListOperators;\n\n\nCountryListOperators.getCountryByName = function(countryList, name) {\n  var simplifiedName = CountryOperators.getSimplifiedName(name);\n\n  for(var i = 0; countryList[i] != null; i++) {\n    if(countryList[i].simplifiedNames.indexOf(simplifiedName) != -1) return countryList[i];\n  }\n\n  return null;\n};\n","import { gradToRad } from \"src/Global\";\n\n/**\n * @classdesc Provides a set of tools for dealing with distances and geometric\n * conversions.\n *\n * @namespace\n * @category geo\n */\nfunction GeoOperators() {}\nexport default GeoOperators;\n\nGeoOperators.EARTH_RADIUS = 6371009;\nGeoOperators.EARTH_DIAMETER = GeoOperators.EARTH_RADIUS * 2;\n\n\nGeoOperators.geoCoordinateToDecimal = function(value) {\n  return Math.floor(value) + (value - Math.floor(value)) * 1.66667;\n};\n\nGeoOperators.geoDistance = function(point0, point1) {\n  var a = Math.pow(Math.sin((point1.y - point0.y) * 0.5 * gradToRad), 2) + Math.cos(point0.y * gradToRad) * Math.cos(point1.y * gradToRad) * Math.pow(Math.sin((point1.x - point0.x) * 0.5 * gradToRad), 2);\n  return GeoOperators.EARTH_DIAMETER * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n};\nGeoOperators.polygonLength = function(polygon) {\n  if(polygon.length < 2) return 0;\n\n  var length = GeoOperators.geoDistance(polygon[0], polygon[1]);\n  for(var i = 2; polygon[i] != null; i++) {\n    length += GeoOperators.geoDistance(polygon[i - 1], polygon[i]);\n  }\n  return length;\n};\n","import Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\n\n/**\n * @classdesc Tools to convert geometric data types.\n *\n * @namespace\n * @category geometry\n */\nfunction GeometryConvertions() {}\nexport default GeometryConvertions;\n\n//include(frameworksRoot+\"operators/strings/StringOperators.js\")\n\n// GeometryConvertions.StringToPolygonList=function(string, sep0, sep1, sep2){\n// sep0 = sep0 || \",\";\n// sep1 = sep1 || \" \";\n// sep2 = sep2 || \"\\n\";\n//\n// var polygonList = new PolygonList();\n// var polygon;\n// var point;\n//\n// lines = StringOperators.splitString(string, sep2);\n//\n// var i;\n// var j;\n// for(i=0; lines[i]!=null; i++){\n// polygon = new Polygon();\n// var points = StringOperators.splitString(lines[i], sep1);\n// for(j=0; points[j]!=null; j++){\n// var sPoint = StringOperators.splitString(points[j], sep0);\n// point = new Point(Number(sPoint[0]), Number(sPoint[1]));\n// polygon.push(point);\n// }\n// polygonList.push(polygon);\n// }\n// return polygonList;\n// }\n\nGeometryConvertions.twoNumberListsToPolygon = function(numberList0, numberList1) { //TODO:change name to NumberTableToPolygon\n  var n = Math.min(numberList0.length, numberList1.length);\n  var polygon = new Polygon();\n  for(var i = 0; i < n; i++) {\n    polygon[i] = new Point(numberList0[i], numberList1[i]);\n  }\n  return polygon;\n};\n\n/**\n * converts a Polygon into a NumberTable\n * @param {Polygon} polygon\n * @return {NumberTable}\n * tags:conversion\n */\nGeometryConvertions.PolygonToNumberTable = function(polygon) {\n  if(polygon == null) return null;\n\n  var numberTable = new NumberTable();\n  numberTable[0] = new NumberList();\n  numberTable[1] = new NumberList();\n\n  polygon.forEach(function(p) {\n    numberTable[0].push(p.x);\n    numberTable[1].push(p.y);\n  });\n\n  return numberTable;\n};\n","import Point from \"src/dataStructures/geometry/Point\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\n\n/**\n * @classdesc Functions to create Polygons from a set of points\n *\n * @namespace\n * @category geometry\n */\nfunction PolygonGenerators() {}\nexport default PolygonGenerators;\n\nPolygonGenerators.createPolygon = function(nPoints, mode, frame) {\n  var polygon = new Polygon();\n\n  switch(mode) {\n    case 0: //random\n      for(var i = 0; i < nPoints; i++) {\n        polygon.push(new Point(frame.x + frame.width * Math.random(), frame.y + frame.height * Math.random()));\n      }\n      break;\n    case 1: //circle\n      break;\n  }\n\n  return polygon;\n};\n\n// PolygonGenerators.getCirclesDisposedInSpiral=function(weights, frame){ //TODO: this method belongs to another class (?)\n// \tvar sortedCenters;\n// \tvar centers = new Polygon();\n// \tvar sortedRadius;\n// \tvar radius = new NumberList();\n// \tvar sortArray = weights.sortNumericIndexedDescending();\n// \t//trace(\"sortArray:\", weights, sortArray);\n// \tvar maxWeight = 0;\n// \tvar nElements = weights.length;\n// \tvar i;\n// \tvar j;\n\n// \tif(nElements==1){\n// \t\tvar table=new Table();\n// \t\tvar pointList=new Polygon();\n// \t\tvar point=new Point()\n// \t\tpointList.push(point);\n// \t\ttable.push(pointList);\n// \t\tvar list=new List();\n// \t\tlist.push(1);\n// \t\ttable.push(list);\n// \t\treturn table;\n// \t}\n// \tmaxWeight =weights.getMax();\n\n\n// \tif(maxWeight==0) return null;\n\n// \tvar MIN_SPACE_BETWEEN_CIRCLES = 0.1;\n\n// \tsortedRadius = new NumberList(Math.sqrt(weights[sortArray[0]]/maxWeight), Math.sqrt(weights[sortArray[1]]/maxWeight));\n// \tsortedCenters = new Polygon(new Point(0,0), new Point(sortedRadius[0] + sortedRadius[1] + MIN_SPACE_BETWEEN_CIRCLES,0));\n// \t//trace(\"sortedCenters:\", sortedCenters),\n// \tcenters[sortArray[0]] = sortedCenters[0];\n// \tradius[sortArray[0]] = sortedRadius[0];\n\n// \tcenters[sortArray[1]] = sortedCenters[1];\n// \tradius[sortArray[1]] = sortedRadius[1];\n// \t//trace(centers);\n// \t//trace(radius);\n// \tvar r;\n// \tvar rI;\n// \tvar angle = 0;\n\n// \tvar testPoint = new Point(0, 0);\n// \tvar externR = sortedCenters[1].x + sortedRadius[1];\n\n// \t//var ACCUM_J:Number=0;\n\n// \tfor(i=2; i<nElements; i++){\n// \t\trI = Math.sqrt(weights[sortArray[i]]/maxWeight);\n// \t\t//trace(i, \"rI\", rI);\n// \t\tr = sortedRadius[0] + rI + MIN_SPACE_BETWEEN_CIRCLES;\n// \t\tangle = i;\n\n// \t\tfor(j=0; j<100000; j++){\n// \t\t\ttestPoint.x = r*Math.cos(angle);\n// \t\t\ttestPoint.y = r*Math.sin(angle);\n\n// \t\t\tr+=0.01;\n// \t\t\tangle+=r*0.04;\n\n// \t\t\tif(Polygon.testCircleAtPoint(testPoint, rI+MIN_SPACE_BETWEEN_CIRCLES, sortedCenters, sortedRadius) || j==99999){\n// \t\t\t\tsortedCenters.push(new Point(testPoint.x, testPoint.y));\n// \t\t\t\tsortedRadius.push(rI);\n// \t\t\t\tcenters[sortArray[i]] = sortedCenters[i];\n// \t\t\t\tradius[sortArray[i]] = sortedRadius[i];\n// \t\t\t\texternR = Math.max(externR, Math.sqrt(Math.pow(testPoint.x, 2)+Math.pow(testPoint.y, 2)) + rI);\n// \t\t\t\tbreak;\n// \t\t\t}\n// \t\t}\n// \t\t//ACCUM_J+=j\n\n// \t}\n// \t//trace(\"   packingCircles:ACCUM_J\", ACCUM_J);\n// \t//trace(\"c:\", centers);\n// \t//trace(\"r:\", radius);\n// \tvar mulVal=1/externR;\n// \tfor(i=0; i<centers.length; i++){\n// \t\tcenters[i].x*=mulVal;\n// \t\tcenters[i].y*=mulVal;\n// \t}\n// \tfor(i=0; i<radius.length; i++){\n// \t\tradius[i]*=mulVal;\n// \t}\n// \t//centers = centers.multiply();\n// \t//radius = radius.multiply(1/externR);\n// \t//trace(\"c2:\", centers);\n// \t//trace(\"r2:\", radius);\n\n// \treturn new Array(centers, radius);\n// }\n","import PolygonList from \"src/dataStructures/geometry/PolygonList\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\n/**\n * @classdesc Encode and Decode {@link Polygon} as a String.\n *\n * @namespace\n * @category geometry\n */\nfunction PolygonListEncodings() {}\nexport default PolygonListEncodings;\n\n/**\n * converts a simple format for polygons into a PolygonList\n * @param {String} string\n *\n * @param {String} separatorCoordinates \",\" by default\n * @param {String} separatorPolygons \"/\" by default\n * @return {PolygonList}\n * tags:encoding\n */\nPolygonListEncodings.StringToPolygonList = function(string, separatorCoordinates, separatorPolygons) {\n  separatorCoordinates = separatorCoordinates || \",\";\n  separatorPolygons = separatorPolygons || \"/\";\n\n  var polygonList = new PolygonList();\n  var polygon;\n  var point;\n\n  var pols = StringOperators.splitString(string, separatorPolygons);\n\n  var j;\n  var numbers;\n  for(var i = 0; pols[i] != null; i++) {\n    polygon = new Polygon();\n    numbers = StringOperators.splitString(pols[i], separatorCoordinates);\n    for(j = 0; numbers[j] != null; j += 2) {\n      point = new Point(Number(numbers[j]), Number(numbers[j + 1]));\n      polygon.push(point);\n    }\n    polygonList.push(polygon);\n  }\n  return polygonList;\n};\n\n/**\n * converts a polygonList into a simple text format\n * @param {PolygonList} polygonList\n *\n * @param {String} separatorCoordinates \",\" by default\n * @param {String} separatorPolygons \"/\" by default\n * @return {String}\n * tags:encoding\n */\nPolygonListEncodings.PolygonListToString = function(polygonList, separatorCoordinates, separatorPolygons) {\n  separatorCoordinates = separatorCoordinates || \",\";\n  separatorPolygons = separatorPolygons || \"/\";\n\n  var i;\n  var j;\n  var t = '';\n  for(i = 0; polygonList[i] != null; i++) {\n    t += (i == 0 ? '' : separatorPolygons);\n    for(j = 0; polygonList[i][j] != null; j++) {\n      t += (j == 0 ? '' : separatorCoordinates) + polygonList[i][j].x + separatorCoordinates + polygonList[i][j].y;\n    }\n  }\n  return t;\n};\n","import PolygonList from \"src/dataStructures/geometry/PolygonList\";\nimport PolygonOperators from \"src/operators/geometry/PolygonOperators\";\n\n/**\n * @classdesc Tools to manipulate {@link PolygonList|Polygon Lists}.\n *\n * @namespace\n * @category geometry\n */\nfunction PolygonListOperators() {}\nexport default PolygonListOperators;\n\nPolygonListOperators.simplifyPolygons = function(polygonList, margin, removeEmptyPolygons) {\n  var newPolygonList = new PolygonList();\n  var newPolygon;\n  for(var i = 0; polygonList[i] != null; i++) {\n    newPolygon = PolygonOperators.simplifyPolygon(polygonList[i], margin);\n    if(newPolygon.length > 0 || !removeEmptyPolygons) {\n      newPolygonList.push(newPolygon);\n    }\n  }\n  return newPolygonList;\n};\n","import Interval from \"src/dataStructures/numeric/Interval\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport List from \"src/dataStructures/lists/List\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport RectangleList from \"src/dataStructures/geometry/RectangleList\";\nimport ListGenerators from \"src/operators/lists/ListGenerators\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\n/**\n * @classdesc Provides a set of tools that work with Rectangles\n *\n * @namespace\n * @category geometry\n */\nfunction RectangleOperators() {}\nexport default RectangleOperators;\n\n\n/**\n *\n * 0: quadrification\n * 1: vertical\n * 2: horizontal\n * 3: continental quadrigram (Africa, Asia, Australasia, Europe, North America, South America)\n * 4: europe quadrigram\n * 5: vertical strips quadrification\n * 6: horizontal strips quadrification\n */\nRectangleOperators.packingRectangles = function(weights, packingMode, rectangle, param) {\n  //TODO: return RectangleList instead of List\n  if(rectangle == null) rectangle = new Rectangle(0, 0, 1, 1);\n  packingMode = packingMode ? packingMode : 0;\n  switch(packingMode) {\n    //0: quadrification\n    //1: vertical\n    //2: horizontal\n    //3: continental quadrigram (Africa, Asia, Australasia, Europe, North America, South America)\n    //4: europe quadrigram\n    //5:vertical strips\n    case 0:\n      return RectangleOperators.squarify(rectangle, weights);\n    case 1:\n      var minMax = weights.getMinMaxInterval();\n      if(minMax.min < 0) {\n        weights = weights.add(-minMax.min);\n        minMax = new Interval(0, minMax.max - minMax.min);\n      }\n\n      var sum = weights.getSum();\n\n      var rectangleList = new List(); //RectangleList();\n      var dY = rectangle.y;\n      var h;\n      var vFactor = rectangle.height / sum;\n      var i;\n      for(i = 0; weights[i] != null; i++) {\n        h = vFactor * weights[i];\n        rectangleList.push(new Rectangle(rectangle.x, dY, rectangle.width, h));\n        dY += h;\n      }\n      return rectangleList;\n    case 2:\n      minMax = weights.getMinMaxInterval();\n      if(minMax.min < 0) {\n        weights = weights.add(-minMax.min);\n        minMax = new Interval(0, minMax.max - minMax.min);\n      }\n      sum = weights.getSum();\n\n      rectangleList = new List(); //RectangleList();\n      var dX = rectangle.x;\n      var w;\n      var hFactor = rectangle.width / sum;\n      for(i = 0; weights[i] != null; i++) {\n        w = hFactor * weights[i];\n        rectangleList.push(new Rectangle(dX, rectangle.y, w, rectangle.height));\n        dX += w;\n      }\n      return rectangleList;\n      //var newNumberList:NumberList = OperatorsNumberList.accumulationNumberList(OperatorsNumberList.normalizeNumberListToInterval(weights, new Interval(weights.min, 1)));\n    case 3:\n      if(weights.length < 6) {\n\n      } else if(weights.length == 6) {\n        var rAfrica = new Rectangle(0.44, 0.36, 0.16, 0.45);\n        var rAsia = new Rectangle(0.6, 0.15, 0.3, 0.3);\n        var rAustralasia = new Rectangle(0.72, 0.45, 0.28, 0.32);\n        var rEurope = new Rectangle(0.38, 0.04, 0.22, 0.32);\n\n        var pivotEuroafrasia = new Point(0.6, 0.36);\n        rAfrica = expandRectangle(rAfrica, Math.sqrt(weights[0]), pivotEuroafrasia);\n        rAsia = expandRectangle(rAsia, Math.sqrt(weights[1]), pivotEuroafrasia);\n        rEurope = expandRectangle(rEurope, Math.sqrt(weights[3]), pivotEuroafrasia);\n\n        rAustralasia.x = rAsia.x + rAsia.width * 0.5;\n        rAustralasia.y = rAsia.bottom;\n        var pivotAustralasia = new Point(rAustralasia.x + rAustralasia.width * 0.3, rAsia.bottom);\n        rAustralasia = expandRectangle(rAustralasia, Math.sqrt(weights[2]), pivotAustralasia);\n        rAustralasia.y += rAustralasia.height * 0.2;\n\n        var pivotAmericas = new Point(0.26, 0.36 + Math.max(rAfrica.height * 0.3, rEurope.height * 0.2));\n\n        var rNorthAmerica = new Rectangle(0.1, pivotAmericas.y - 0.4, 0.2, 0.4);\n        var rSouthAmerica = new Rectangle(0.22, pivotAmericas.y, 0.16, 0.5);\n\n        rNorthAmerica = expandRectangle(rNorthAmerica, Math.sqrt(weights[4]), pivotAmericas);\n        rSouthAmerica = expandRectangle(rSouthAmerica, Math.sqrt(weights[5]), pivotAmericas);\n\n        var separation = Math.max(rEurope.width, rAfrica.width, rSouthAmerica.right - pivotAmericas.x, rNorthAmerica.right - pivotAmericas.x) * 0.2;\n        var delta = Math.min(rEurope.x, rAfrica.x) - Math.max(rNorthAmerica.right, rSouthAmerica.right) - separation;\n\n        rSouthAmerica.x += delta;\n        rNorthAmerica.x += delta;\n\n        return new List(rAfrica, rAsia, rAustralasia, rEurope, rNorthAmerica, rSouthAmerica); //RectangleList\n\n      } else {\n\n      }\n    case 4:\n      return europeQuadrigram(weights);\n    case 5:\n      param = param || 0;\n      if(param == 0) {\n        var nLists = Math.round(Math.sqrt(weights.length));\n      } else {\n        nLists = Math.round(weights.length / param);\n      }\n      var nRows = Math.ceil(weights.length / nLists);\n\n      var nMissing = nLists * nRows - weights.length;\n\n      var average = weights.getAverage();\n      var weigthsCompleted = ListOperators.concat(weights, ListGenerators.createListWithSameElement(nMissing, average));\n      var table = ListOperators.slidingWindowOnList(weigthsCompleted, nRows, nRows, 0);\n      var sumList = table.getSums();\n      var rectangleColumns = this.packingRectangles(sumList, 2, rectangle);\n\n      rectangleList = List(); //new RectangleList();\n\n      for(i = 0; i < nLists; i++) {\n        rectangleList = ListOperators.concat(rectangleList, this.packingRectangles(table[i], 1, rectangleColumns[i]));\n      }\n\n      return rectangleList;\n    case 6: //horizontal strips\n  }\n  return null;\n};\n\nRectangleOperators.quadrification = RectangleOperators.squarify; //old name\n\n/**\n * Squarified algorithm as described in (http://www.win.tue.nl/~vanwijk/stm.pdf)\n * @param {Rectangle} bounds Rectangle\n * @param {NumberList} list of weights\n *\n * @param {Boolean} weights are normalized\n * @param {Boolean} weights are sorted\n * @return {List} a list of Rectangles\n * tags:\n */\nRectangleOperators.squarify = function(frame, weights, isNormalizedWeights, isSortedWeights) { //, funcionEvaluacionnWeights:Function=null):Array{\n  if(weights == null) return;\n  if(weights.length == 0) return new RectangleList();\n  if(weights.length == 1) return new RectangleList(frame);\n\n  isNormalizedWeights = isNormalizedWeights ? isNormalizedWeights : false;\n  isSortedWeights = isSortedWeights ? isSortedWeights : false;\n  var newWeightList;\n\n  if(isNormalizedWeights) {\n    newWeightList = weights; // new NumberList(arregloPesos);\n  } else {\n    newWeightList = weights.getNormalizedToSum();\n  }\n\n  if(!isSortedWeights) {\n    var newPositions = newWeightList.getSortIndexes(); // ListOperators.sortListByNumberList();// newWeightList.sortNumericIndexedDescending();\n    newWeightList = ListOperators.sortListByNumberList(newWeightList, newWeightList);\n  }\n\n  var area = frame.width * frame.height;\n  var rectangleList = new RectangleList();\n  var freeRectangle = frame.clone();\n  var subWeightList;\n  var subRectangleList = new List(); //RectangleList();//\n  var prevSubRectangleList;\n  var proportion;\n  var worstProportion;\n  var index = 0;\n  var subArea;\n  var freeSubRectangle = new Rectangle();\n  var nWeights = weights.length;\n  var lastRectangle;\n\n  if(nWeights > 2) {\n    var i, j, k;\n    var sum;\n    for(i = index; i < nWeights; i++) {\n      proportion = Number.MAX_VALUE;\n      if(newWeightList[i] == 0) {\n        rectangleList.push(new Rectangle(freeSubRectangle.x, freeSubRectangle.y, 0, 0));\n      } else {\n        for(j = 1; j < nWeights; j++) {\n          subWeightList = newWeightList.slice(i, i + j); //NumberList.fromArray(newWeightList.slice(i, i+j));//\n          prevSubRectangleList = subRectangleList.slice(); //.clone();\n          sum = subWeightList.getSum();\n          subArea = sum * area;\n          freeSubRectangle.x = freeRectangle.x;\n          freeSubRectangle.y = freeRectangle.y;\n          if(freeRectangle.width > freeRectangle.height) { //column\n            freeSubRectangle.width = subArea / freeRectangle.height;\n            freeSubRectangle.height = freeRectangle.height;\n          } else { //fila\n            freeSubRectangle.width = freeRectangle.width;\n            freeSubRectangle.height = subArea / freeRectangle.width;\n          }\n\n          subRectangleList = RectangleOperators.partitionRectangle(freeSubRectangle, subWeightList, sum);\n          worstProportion = subRectangleList.highestRatio; // RectangleOperators._getHighestRatio(subRectangleList);//\n          if(proportion <= worstProportion) {\n            break;\n          } else {\n            proportion = worstProportion;\n          }\n        }\n\n        if(prevSubRectangleList.length == 0) {\n          rectangleList.push(new Rectangle(freeRectangle.x, freeRectangle.y, freeRectangle.width, freeRectangle.height)); //freeRectangle.clone());\n          if(rectangleList.length == nWeights) {\n            if(!isSortedWeights) {\n              var newRectangleList = new List(); //RectangleList();\n              for(i = 0; rectangleList[i] != null; i++) {\n                newRectangleList[newPositions[i]] = rectangleList[i];\n              }\n              return newRectangleList;\n            }\n            return rectangleList;\n          }\n          index++;\n        } else {\n          rectangleList = rectangleList.concat(prevSubRectangleList);\n          if(rectangleList.length == nWeights) {\n            if(!isSortedWeights) {\n              newRectangleList = new List();\n              for(i = 0; rectangleList[i] != null; i++) {\n                newRectangleList[newPositions[i]] = rectangleList[i];\n              }\n              return newRectangleList;\n            }\n            return rectangleList;\n          }\n          index += prevSubRectangleList.length;\n          lastRectangle = prevSubRectangleList[prevSubRectangleList.length - 1];\n          if(freeRectangle.width > freeRectangle.height) {\n            freeRectangle.x = (lastRectangle.width + lastRectangle.x);\n            freeRectangle.width -= lastRectangle.width;\n          } else {\n            freeRectangle.y = (lastRectangle.height + lastRectangle.y);\n            freeRectangle.height -= lastRectangle.height;\n          }\n        }\n        i = index - 1;\n      }\n    }\n  } else if(nWeights == 2) {\n    subWeightList = newWeightList.slice(); //.clone();\n    freeSubRectangle = frame.clone();\n    rectangleList = RectangleOperators.partitionRectangle(freeSubRectangle, subWeightList, subWeightList.getSum());\n  } else {\n    rectangleList[0] = new Rectangle(frame.x, frame.y, frame.width, frame.height); //frame.clone();\n  }\n\n\n  if(!isSortedWeights) {\n    newRectangleList = new List(); //RectangleList();//\n    for(i = 0; rectangleList[i] != null; i++) {\n      newRectangleList[newPositions[i]] = rectangleList[i];\n    }\n    return newRectangleList;\n  }\n\n  return rectangleList;\n};\n\n/**\n * partitionRectangle\n * @param {Rectangle} bounds Rectangle\n * @param {NumberList} normalizedWeight List\n *\n * @return {List} a list of Rectangles\n */\nRectangleOperators.partitionRectangle = function(rectangle, normalizedWeightList, sum) {\n  var area = rectangle.width * rectangle.height;\n  var rectangleList = new List(); //RectangleList();\n  var freeRectangle = new Rectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height); //rectangle.clone();\n  var areai;\n  var i;\n  var rect;\n  var highestRatio = 1;\n  for(i = 0; i < normalizedWeightList.length; i++) {\n    areai = normalizedWeightList[i] * area / sum;\n    if(rectangle.width > rectangle.height) {\n      rect = new Rectangle(freeRectangle.x, freeRectangle.y, areai / freeRectangle.height, freeRectangle.height);\n      rectangleList.push(rect);\n      freeRectangle.x += areai / freeRectangle.height;\n      //rect.ratio = rect.width/rect.height;\n    } else {\n      rect = new Rectangle(freeRectangle.x, freeRectangle.y, freeRectangle.width, areai / freeRectangle.width);\n      rectangleList.push(rect);\n      freeRectangle.y += areai / freeRectangle.width;\n      //rect.ratio = rect.height/rect.width;\n    }\n    rect.ratio = Math.max(rect.width, rect.height) / Math.min(rect.width, rect.height);\n    highestRatio = Math.max(highestRatio, rect.ratio);\n  }\n\n  rectangleList.highestRatio = highestRatio;\n\n  return rectangleList;\n};\n\n/**\n * returns the highest ratio from a list of Rectangles\n * @param {List} rectangleList a Rectangle List\n *\n * @return {Number} highestRatio\n */\nRectangleOperators._getHighestRatio = function(rectangleList) {\n  var highestRatio = 1;\n  var rectangle;\n  var i;\n  for(i = 0; i < rectangleList.length; i++) {\n    rectangle = rectangleList[i];\n    highestRatio = Math.max(highestRatio, rectangle.getRatio());\n  }\n  return highestRatio;\n};\n","/**\n * @classdesc Tools for generating colors.\n *\n * @namespace\n * @category colors\n */\nfunction ColorGenerators() {}\nexport default ColorGenerators;\n\n\nColorGenerators.randomColor = function(alpha) {\n  alpha = alpha == null ? 1 : alpha;\n  return 'rgba(' + Math.floor(256 * Math.random()) + ',' + Math.floor(256 * Math.random()) + ',' + Math.floor(256 * Math.random()) + ',' + alpha + ')';\n};\n","import ColorList from \"src/dataStructures/graphic/ColorList\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport NumberListGenerators from \"src/operators/numeric/numberList/NumberListGenerators\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport List from \"src/dataStructures/lists/List\";\n\nColorListGenerators._HARDCODED_CATEGORICAL_COLORS = new ColorList(\n  \"#dd4411\", \"#2200bb\", \"#1f77b4\", \"#ff660e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\", \"#dd8811\",\n  \"#dd0011\", \"#221140\", \"#1f66a3\", \"#ff220e\", \"#2ba01c\", \"#442728\", \"#945600\", \"#8c453a\", \"#e37700\"\n);\n\n/**\n * @classdesc Tools for generating {@link List|Lists} of colors.\n *\n * @namespace\n * @category colors\n */\nfunction ColorListGenerators() {}\nexport default ColorListGenerators;\n\n/**\n * create a simple list of categorical colors\n * @param  {Number} nColors\n *\n * @param  {Number} alpha 1 by default\n * @param {Boolean} invert invert colors\n * @return {ColorList}\n * tags:generator\n */\nColorListGenerators.createDefaultCategoricalColorList = function(nColors, alpha, invert) {\n  alpha = alpha == null ? 1 : alpha;\n  var colors = ColorListGenerators.createCategoricalColors(1, nColors).getInterpolated('black', 0.15);\n  if(alpha < 1) colors = colors.addAlpha(alpha);\n\n  if(invert) colors = colors.getInverted();\n\n  return colors;\n};\n\n\n/**\n * create a colorList based on a colorScale and values from a numberList (that will be normalized)\n * @param  {NumberList} numberList\n * @param  {ColorScale} colorScale\n * \n * @param  {Number} mode 0:normalize numberList\n * @return {ColorList}\n * tags:generator\n */\nColorListGenerators.createColorListFromNumberList = function(numberList, colorScale, mode) {\n  if(numberList==null) return null;\n  \n  mode = mode == null ? 0 : mode;\n\n  var colorList = new ColorList();\n  var newNumberList;\n  var i;\n\n  switch(mode) {\n    case 0: //0 to max\n      newNumberList = numberList.getNormalizedToMax();\n      break;\n    case 1: //min to max\n      break;\n    case 2: //values between 0 and 1\n      break;\n  }\n\n  for(i = 0; newNumberList[i] != null; i++) {\n    colorList.push(colorScale(newNumberList[i]));\n  }\n\n  return colorList;\n};\n\n\nColorListGenerators.createColorListWithSingleColor = function(nColors, color) {\n  var colorList = new ColorList();\n  for(var i = 0; i < nColors; i++) {\n    colorList.push(color);\n  }\n  return colorList;\n};\n\n\n/**\n * Creates a ColorList of categorical colors\n * @param {Number} mode 0:simple picking from color scale function, 1:random (with seed), 2:hardcoded colors, 3:, 4:, 5:evolutionary algorithm, guarantees non consecutive similar colors\n * @param {Number} nColors\n *\n * @param {ColorScale} colorScaleFunction\n * @param {Number} alpha transparency\n * @param {String} interpolateColor color to interpolate\n * @param {Number} interpolateValue interpolation value [0, 1]\n * @return {ColorList} ColorList with categorical colors\n * tags:generator\n */\nColorListGenerators.createCategoricalColors = function(mode, nColors, colorScaleFunction, alpha, interpolateColor, interpolateValue) {\n  colorScaleFunction = colorScaleFunction == null ? ColorScales.temperature : colorScaleFunction;\n\n  var i;\n  var colorList = new ColorList();\n  switch(mode) {\n    case 0: //picking from ColorScale\n      for(i = 0; i < nColors; i++) {\n        colorList[i] = colorScaleFunction(i / (nColors - 1));\n      }\n      break;\n    case 1: //seeded random numbers\n      var values = NumberListGenerators.createRandomNumberList(nColors, null, 0);\n      for(i = 0; i < nColors; i++) {\n        colorList[i] = colorScaleFunction(values[i]);\n      }\n      break;\n    case 2:\n      for(i = 0; i < nColors; i++) {\n        colorList[i] = ColorListGenerators._HARDCODED_CATEGORICAL_COLORS[i % ColorListGenerators._HARDCODED_CATEGORICAL_COLORS.length];\n      }\n      break;\n    case 5:\n      var randomNumbersSource = NumberListGenerators.createRandomNumberList(1001, null, 0);\n      var positions = NumberListGenerators.createSortedNumberList(nColors);\n      var randomNumbers = NumberListGenerators.createRandomNumberList(nColors, null, 0);\n      var randomPositions = ListOperators.sortListByNumberList(positions, randomNumbers);\n\n      var nGenerations = Math.floor(nColors * 2) + 100;\n      var nChildren = Math.floor(nColors * 0.6) + 5;\n      var bestEvaluation = ColorListGenerators._evaluationFunction(randomPositions);\n      var child;\n      var bestChildren = randomPositions;\n      var j;\n      var nr = 0;\n      var evaluation;\n\n      for(i = 0; i < nGenerations; i++) {\n        for(j = 0; j < nChildren; j++) {\n          child = ColorListGenerators._sortingVariation(randomPositions, randomNumbersSource[nr], randomNumbersSource[nr + 1]);\n          nr = (nr + 2) % 1001;\n          evaluation = ColorListGenerators._evaluationFunction(child);\n          if(evaluation > bestEvaluation) {\n            bestChildren = child;\n            bestEvaluation = evaluation;\n          }\n        }\n        randomPositions = bestChildren;\n      }\n\n      for(i = 0; i < nColors; i++) {\n        colorList.push(colorScaleFunction((1 / nColors) + randomPositions[i] / (nColors + 1))); //TODO: make more efficient by pre-nuilding the colorList\n      }\n      break;\n  }\n\n  if(interpolateColor != null && interpolateValue != null) {\n    colorList = colorList.getInterpolated(interpolateColor, interpolateValue);\n  }\n\n  if(alpha) {\n    colorList = colorList.addAlpha(alpha);\n  }\n\n  return colorList;\n};\n\nColorListGenerators._sortingVariation = function(numberList, rnd0, rnd1) { //private\n  var newNumberList = numberList.clone();\n  var pos0 = Math.floor(rnd0 * newNumberList.length);\n  var pos1 = Math.floor(rnd1 * newNumberList.length);\n  var cache = newNumberList[pos1];\n  newNumberList[pos1] = newNumberList[pos0];\n  newNumberList[pos0] = cache;\n  return newNumberList;\n};\nColorListGenerators._evaluationFunction = function(numberList) { //private\n  var sum = 0;\n  var i;\n  for(i = 0; numberList[i + 1] != null; i++) {\n    sum += Math.sqrt(Math.abs(numberList[i + 1] - numberList[i]));\n  }\n  return sum;\n};\n\n\n/**\n * Creates a ColorList of categorical colors based on an input List. All entries with the same value will get the same color.\n * @param {List} the list containing categorical data\n *\n * @param {ColorList} ColorList with categorical colors\n * @param {Number} alpha transparency\n * @param {String} color to mix\n * @param {Number} interpolation value (0-1) for color mix\n * @param {Boolean} invert invert colors\n * @return {ColorList} ColorList with categorical colors that match the given list\n * @return {List} elements list of elemnts that match colors (equivalent to getWithoutRepetions)\n * @return {ColorList} ColorList with different categorical colors\n * @return {Table} dictionary dictionary table with elemnts and matching colors\n * tags:generator\n */\nColorListGenerators.createCategoricalColorListForList = function(list, colorList, alpha, color, interpolate, invert)\n{\n\n  if(!list)\n    return new ColorList();\n  if(!alpha)\n    alpha = 1;\n  if(!color)\n    color = \"#fff\";\n  if(!interpolate)\n    interpolate = 0;\n\n  list = List.fromArray(list);\n  var diffValues = list.getWithoutRepetitions();\n  var diffColors;\n  if(colorList) {\n    diffColors = colorList.getInterpolated(color, interpolate);\n  } else {\n    diffColors = ColorListGenerators.createCategoricalColors(2, diffValues.length, null, alpha, color, interpolate);\n    //diffColors = ColorListGenerators.createDefaultCategoricalColorList( diffValues.length, 1 ).getInterpolated( color, interpolate );\n  }\n  diffColors = diffColors.addAlpha(alpha);\n\n  if(invert) diffColors = diffColors.getInverted();\n\n  var colorDict = Table.fromArray([diffValues, diffColors]);\n  var fullColorList = ListOperators.translateWithDictionary(list, colorDict, \"NULL\");\n\n  fullColorList = ColorList.fromArray(fullColorList);\n\n  return [\n    {\n      value: fullColorList,\n      type: 'ColorList'\n    }, {\n      value: diffValues,\n      type: diffValues.type\n    }, {\n      value: diffColors,\n      type: 'ColorList'\n    }, {\n      value: new Table(diffValues, fullColorList),\n      type: 'Table'\n    }\n  ];\n};\n","import ColorList from \"src/dataStructures/graphic/ColorList\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport Polygon3D from \"src/dataStructures/geometry/Polygon3D\";\n\n/**\n * @classdesc Tools for working with Lists of colors.\n *\n * @namespace\n * @category colors\n */\nfunction ColorListOperators() {}\nexport default ColorListOperators;\n\n/**\n * receives n arguments and performs addition\n */\nColorListOperators.colorListFromColorScale = function(colorScale, nColors) {\n  return colorScale.getColorList.apply(colorScale, [nColors]);\n};\n\nColorListOperators.colorListFromColorScaleFunction = function(colorScaleFunction, nColors) {\n  var colorList = new ColorList();\n  var i;\n  for(i = 0; i < nColors; i++) {\n    colorList[i] = colorScaleFunction(i / (nColors - 1));\n  }\n  return colorList;\n};\n\n\nColorListOperators.colorListFromColorScaleFunctionAndNumberList = function(colorScaleFunction, numberList, normalize) {\n  normalize = normalize == null ? true : normalize;\n\n  if(normalize) numberList = numberList.getNormalized();\n\n  var colorList = new ColorList();\n  var i;\n  for(i = 0; numberList[i] != null; i++) {\n    colorList[i] = colorScaleFunction(numberList[i]);\n  }\n  return colorList;\n};\n\n\n\nColorListOperators.polygon3DToColorList = function(polygon3D) {\n  var nPoints = polygon3D.length;\n  var colorList = new ColorList();\n  var i;\n  for(i = 0; i < nPoints; i++) {\n    colorList.push(ColorOperators.point3DToColor(polygon3D[i]));\n  }\n  return colorList;\n};\nColorListOperators.colorListToPolygon3D = function(colorList) {\n  var nColors = colorList.length;\n  var polygon3D = new Polygon3D();\n  var i;\n  for(i = 0; i < nColors; i++) {\n    polygon3D.push(ColorOperators.colorToPoint3D(colorList[i]));\n  }\n  return polygon3D;\n};\n","/**\n * @classdesc Generate {@link ColorScale|ColorScales} with various properties.\n *\n * @namespace\n * @category colors\n */\nfunction ColorScaleGenerators() {}\nexport default ColorScaleGenerators;\n\n\n/**\n * creates a ColorScale function from colors and positions, a numberList with values in (0,1) (positions lenth must be colorList length minus 2)\n * @param  {ColorList} colorList\n * @param  {NumberList} positions\n * @return {ColorScale}\n * tags:generator\n */\nColorScaleGenerators.createColorScaleFromColors = function(colorList, positions) {\n  if(colorList == null || positions == null || !colorList.length > 0 || !positions.length > 0 || colorList.length != (positions.length + 2)) return null;\n\n  if(colorList.rgbs == null) {\n    colorList.rgbs = colorList.getRgbArrays();\n  }\n\n  positions = positions.slice();\n  positions.unshift(0);\n  positions.push(1);\n\n  var cS = function(t) {\n    var i;\n    var intert, antit;\n\n    for(i = 0; positions[i + 1] != null; i++) {\n      if(t < positions[i + 1]) {\n        intert = (t - positions[i]) / (positions[i + 1] - positions[i]);\n        antit = 1 - intert;\n\t\t\t\treturn 'rgb('\n\t\t\t\t\t+Math.floor( antit*colorList.rgbs[i][0] + intert*colorList.rgbs[i+1][0] )+','\n\t\t\t\t\t+Math.floor( antit*colorList.rgbs[i][1] + intert*colorList.rgbs[i+1][1] )+','\n\t\t\t\t\t+Math.floor( antit*colorList.rgbs[i][2] + intert*colorList.rgbs[i+1][2] )+')';\n      }\n    }\n  };\n\n  return cS;\n};\n","import List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\n\nfunction TableConversions() {}\nexport default TableConversions;\n\n/**\n * Convert an object (or more typically an Array of objects) into a Table\n * @param {Object} object or array of objects\n *\n * @param {List} list of field names to include (by default will take all from first element in array of objects)\n * @return {Table} resulting Table\n * tags:decoder,dani\n */\nTableConversions.ObjectToTable = function(object, fields) {\n  // Formats:\n  // 1: normal list of objects\n  // 2: Object with single property, containing normal list of obejcts\n  // 3: Object as CSV (each property represents a column)\n  var format;\n\n  // If it's an array, then it's format 1\n  if(Array.isArray(object)) {\n    format = 1;\n    // If not field names supplied, get them from first element\n    if(!fields)\n    {\n      fields = [];\n      for(var p in object[0]) {\n        fields.push(p);\n      }\n    }\n    // Else (not array), it's an object\n  } else {\n    // Check how many properties the object has\n    var properties = [];\n    for(var p in object) {\n      properties.push(p);\n    }\n\n    // If it has only one, and it's an array, it's foramt 2, so assume it's just a capsule\n    // and extract the array as format 1\n    if(properties.length == 1 && Array.isArray(object[properties[0]]))\n    {\n      format = 1;\n      object = object[properties[0]];\n\n      // If not field names supplied, get them from first element\n      if(!fields)\n      {\n        fields = [];\n        for(var p in object[0]) {\n          fields.push(p);\n        }\n      }\n    } else {\n      // Finally, if the object has many properties, we assume it's a csv encoded as JSON\n      // ( each property of the object represents a column of the CSV )\n      format = 3;\n\n      // If not fields supplied, use all properties\n      if(!fields)\n        fields = properties;\n    }\n  }\n\n\n  // Create table and columns\n  var result = new Table();\n  for(var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i];\n    var column = new List();\n    result[i] = column;\n    column.name = fieldName;\n  }\n\n  // Fill the table\n  if(format == 1)\n  {\n    for(var i = 0; i < object.length; i++) {\n      var row = object[i];\n      for(var f = 0; f < fields.length; f++) {\n        result[f].push(row[fields[f]]);\n      }\n    }\n  } else {\n    for(var f = 0; f < fields.length; f++) {\n      var column = object[fields[f]];\n      for(var i = 0; i < column.length; i++) {\n        result[f].push(column[i]);\n      }\n    }\n  }\n\n  // Improve columns\n  for(var i = 0; i < result.length; i++) {\n    result[i] = result[i].getImproved();\n  }\n\n  //if(result.getLengths.getMax()==1) return result.getRow(0);\n\n  // Improve table\n  result = result.getImproved();\n\n  // Return best possible\n  return result;\n};\n\n\n/**\n * Convert an object (or more typically an Array of objects) into a Table\n * @param {Object} object or array of objects\n *\n * @param {List} list of field names to include (by default will take all from first element in array of objects)\n * @return {List} resulting list (probably a table)\n * tags:decoder\n */\nTableConversions.ObjectToList = function(object, fields) {\n  var result = TableConversions.ObjectToTable(object, fields);\n\n  if(result.getLengths.getMax() == 1) return result.getRow(0);\n};\n\n\n\n/**\n * Convert a Table into an Object or Array of objects\n * @param {Object} table to be converted\n *\n * @param {List} list of field names to include (by default will take all from table)\n * @return {Object} containing list of rows from input Table\n * tags:decoder,dani\n */\nTableConversions.TableToObject = function(table, fields) { // To-Do: should return a List instead of Array?\n    if(!table)\n      return;\n\n    // If no field names supplied, take them from first element\n    if(!fields)\n    {\n      fields = table.getNames();\n    }\n    var result = [];\n    for(var i = 0; i < table[0].length; i++) {\n      var row = {};\n      for(var f = 0; f < fields.length; f++)\n      {\n        row[fields[f]] = table[f][i];\n      }\n      result.push(row);\n    }\n    return {\n      array: result\n    };\n  };\n  // Tests ObjectToTable / TableToObject\n  /*\n  var input = [ {name:\"dani\", age:36, other:\"eee\"}, {name:\"alejandro\", age:34}, {name:\"anna\", age:37} ];\n  var table = TableEncodings.ObjectToTable( input );\n  console.log( \"ObjectToTable: \", table );\n  var obj = TableEncodings.TableToObject(table);\n  console.log( \"ObjectToTable INVERSE: \", obj );\n  */","import ListGenerators from \"src/operators/lists/ListGenerators\";\nimport Table from \"src/dataStructures/lists/Table\";\n\nfunction TableGenerators() {}\nexport default TableGenerators;\n\nTableGenerators.createTableWithSameElement = function(nLists, nRows, element) {\n  var table = new Table();\n  for(var i = 0; i < nLists; i++) {\n    table[i] = ListGenerators.createListWithSameElement(nRows, element);\n  }\n  return table.getImproved();\n};","import List from \"src/dataStructures/lists/List\";\n\n/**\n * @classdesc Provides a set of tools that work with Interval Lists.\n *\n * @namespace\n * @category numbers\n */\nfunction IntervalListOperators() {}\nexport default IntervalListOperators;\n\n\nIntervalListOperators.scaleIntervals = function(intervalList, value) {\n  var newIntervalList = new List();\n  newIntervalList.name = intervalList.name;\n  for(var i = 0; intervalList[i] !== null; i++) {\n    newIntervalList[i] = intervalList[i].getScaled(value);\n  }\n  return newIntervalList;\n};\n","import Table from \"src/dataStructures/lists/Table\";\nimport IntervalListOperators from \"src/operators/numeric/interval/IntervalListOperators\";\n\n/**\n * @classdesc Provides a set of tools that work with {@link Table|Tables} of\n * Intervals.\n *\n * @namespace\n * @category numbers\n */\nfunction IntervalTableOperators() {}\nexport default IntervalTableOperators;\n\n\nIntervalTableOperators.scaleIntervals = function(intervalTable, value) {\n  var newIntervalTable = new Table();\n  newIntervalTable.name = intervalTable.name;\n  for(var i = 0; intervalTable[i] !== null; i++) {\n    newIntervalTable[i] = IntervalListOperators.scaleIntervals(intervalTable[i], value);\n  }\n  return newIntervalTable;\n};\n","import Matrix from \"src/dataStructures/numeric/Matrix\";\n\n/**\n * @classdesc Create default Matrix instances.\n *\n * @namespace\n * @category basics\n */\nfunction MatrixGenerators() {}\nexport default MatrixGenerators;\n\n\n\n//all Matrix objects and methods should be ported to NumberTable (same at Matrix.json)\n\n\n/**\n * Returns a transformation matrix from a triangle mapping\n *\n * @returns Matrix\n *\n **/\n// TODO: resolve particular cases (right angles)\nMatrixGenerators.createMatrixFromTrianglesMapping = function(v0, v1, v2, w0, w1, w2) {\n  if(v1.y != v0.y) {\n    var k = (v2.y - v0.y) / (v1.y - v0.y);\n\n    var a = (w2.x - w0.x - (w1.x - w0.x) * k) / (v2.x - v0.x - (v1.x - v0.x) * k);\n    var b = k * (w1.x - w0.x) / (v2.y - v0.y) - a * (v1.x - v0.x) / (v1.y - v0.y);\n\n    var c = (w2.y - w0.y - (w1.y - w0.y) * k) / (v2.x - v0.x - (v1.x - v0.x) * k);\n    var d = k * (w1.y - w0.y) / (v2.y - v0.y) - c * (v1.x - v0.x) / (v1.y - v0.y);\n  } else {\n    a = (w1.x - w0.x) / (v1.x - v0.x);\n    b = (w2.x - w0.x) / (v2.y - v0.y) - a * (v2.x - v0.x) / (v2.y - v0.y);\n\n    c = (w1.y - w0.y) / (v1.x - v0.x);\n    d = (w2.y - w0.y) / (v2.y - v0.y) - c * (v2.x - v0.x) / (v2.y - v0.y);\n  }\n\n  return new Matrix(a, c, b, d, w0.x - a * v0.x - b * v0.y, w0.y - c * v0.x - d * v0.y);\n};\n\n\n//TODO: place this in the correct place\nMatrixGenerators.applyTransformationOnCanvasFromPoints = function(context, v0, v1, v2, w0, w1, w2) {\n  if(v1.y != v0.y) {\n    var k = (v2.y - v0.y) / (v1.y - v0.y);\n\n    var a = (w2.x - w0.x - (w1.x - w0.x) * k) / (v2.x - v0.x - (v1.x - v0.x) * k);\n    var b = k * (w1.x - w0.x) / (v2.y - v0.y) - a * (v1.x - v0.x) / (v1.y - v0.y);\n\n    var c = (w2.y - w0.y - (w1.y - w0.y) * k) / (v2.x - v0.x - (v1.x - v0.x) * k);\n    var d = k * (w1.y - w0.y) / (v2.y - v0.y) - c * (v1.x - v0.x) / (v1.y - v0.y);\n  } else {\n    a = (w1.x - w0.x) / (v1.x - v0.x);\n    b = (w2.x - w0.x) / (v2.y - v0.y) - a * (v2.x - v0.x) / (v2.y - v0.y);\n\n    c = (w1.y - w0.y) / (v1.x - v0.x);\n    d = (w2.y - w0.y) / (v2.y - v0.y) - c * (v2.x - v0.x) / (v2.y - v0.y);\n  }\n  context.transform(a, c, b, d, w0.x - a * v0.x - b * v0.y, w0.y - c * v0.x - d * v0.y);\n};\n\n\n\n\n/**\n * Creates a matrix transformation that corresponds to the given rotation,\n * around (0,0) or the specified point.\n * @see Matrix#rotate\n *\n * @param {Number} theta Rotation in radians.\n * @param {Point} [aboutPoint] The point about which this rotation occurs. Defaults to (0,0).\n * @returns {Matrix}\n */\nMatrixGenerators.createRotationMatrix = function(theta, aboutPoint) {\n  var rotationMatrix = Matrix(\n    Math.cos(theta),\n    Math.sin(theta),\n    -Math.sin(theta),\n    Math.cos(theta)\n  );\n\n  if(aboutPoint) {\n    rotationMatrix =\n      Matrix.translation(aboutPoint.x, aboutPoint.y).concat(\n        rotationMatrix\n      ).concat(\n        Matrix.translation(-aboutPoint.x, -aboutPoint.y)\n      );\n  }\n\n  return rotationMatrix;\n};\n\n/**\n * Returns a matrix that corresponds to scaling by factors of sx, sy along\n * the x and y axis respectively.\n * If only one parameter is given the matrix is scaled uniformly along both axis.\n * If the optional aboutPoint parameter is given the scaling takes place\n * about the given point.\n * @see Matrix#scale\n *\n * @param {Number} sx The amount to scale by along the x axis or uniformly if no sy is given.\n * @param {Number} [sy] The amount to scale by along the y axis.\n * @param {Point} [aboutPoint] The point about which the scaling occurs. Defaults to (0,0).\n * @returns {Matrix} A matrix transformation representing scaling by sx and sy.\n */\nMatrixGenerators.createScaleMatrix = function(sx, sy, aboutPoint) {\n  sy = sy || sx;\n\n  var scaleMatrix = Matrix(sx, 0, 0, sy);\n\n  if(aboutPoint) {\n    scaleMatrix =\n      Matrix.translation(aboutPoint.x, aboutPoint.y).concat(\n        scaleMatrix\n      ).concat(\n        Matrix.translation(-aboutPoint.x, -aboutPoint.y)\n      );\n  }\n\n  return scaleMatrix;\n};\n\n\n/**\n * Returns a matrix that corresponds to a translation of tx, ty.\n * @see Matrix#translate\n *\n * @param {Number} tx The amount to translate in the x direction.\n * @param {Number} ty The amount to translate in the y direction.\n * @returns {Matrix} A matrix transformation representing a translation by tx and ty.\n */\nMatrixGenerators.createTranslationMatrix = function(tx, ty) {\n  return Matrix(1, 0, 0, 1, tx, ty);\n};\n//\n// /**\n// * A constant representing the identity matrix.\n// * @name IDENTITY\n// * @fieldOf Matrix\n// */\n// Matrix.IDENTITY = Matrix();\n// /**\n// * A constant representing the horizontal flip transformation matrix.\n// * @name HORIZONTAL_FLIP\n// * @fieldOf Matrix\n// */\n// Matrix.HORIZONTAL_FLIP = Matrix(-1, 0, 0, 1);\n// /**\n// * A constant representing the vertical flip transformation matrix.\n// * @name VERTICAL_FLIP\n// * @fieldOf Matrix\n// */\n// Matrix.VERTICAL_FLIP = Matrix(1, 0, 0, -1);\n","import NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\n\nfunction NumberListOperators() {}\nexport default NumberListOperators;\n\n/**\n * cosine similarity, used to compare two NumberLists regardless of norm (see: http://en.wikipedia.org/wiki/Cosine_similarity)\n * @param  {NumberList} numberList0\n * @param  {NumberList} numberList1\n * @return {Number}\n * tags:statistics\n */\nNumberListOperators.cosineSimilarity = function(numberList0, numberList1) {\n  var norms = numberList0.getNorm() * numberList1.getNorm();\n  if(norms == 0) return 0;\n  return numberList0.dotProduct(numberList1) / norms;\n};\n\n/**\n * calculates the covariance between two numberLists\n * @param  {NumberList} numberList0\n * @param  {NumberList} numberList1\n * @return {Number}\n * tags:statistics\n */\nNumberListOperators.covariance = function(numberList0, numberList1) {\n  if(numberList0==null || numberList1==null) return;\n\n  var l = Math.min(numberList0.length, numberList1.length);\n  var i;\n  var av0 = numberList0.getAverage();\n  var av1 = numberList1.getAverage();\n  var s = 0;\n\n  for(i = 0; i<l; i++) {\n    s += (numberList0[i] - av0)*(numberList1[i] - av1);\n  }\n\n  return s/l;\n};\n\n/**\n * calculates k-means clusters of values in a numberList\n * @param  {NumberList} numberList\n * @param  {Number} k number of clusters\n *\n * @param {Boolean} returnIndexes return clusters of indexes rather than values (false by default)\n * @return {NumberTable} numberLists each being a cluster\n * tags:ds\n */\nNumberListOperators.linearKMeans = function(numberList, k, returnIndexes) {\n  if(numberList == null || k == null || !k > 0) return null;\n\n  var interval = numberList.getInterval();\n\n  var min = interval.x;\n  var max = interval.y;\n  var clusters = new NumberTable();\n  var i, j;\n  var jK;\n  var x;\n  var dX = (max - min) / k;\n  var d;\n  var dMin;\n  var n;\n  var actualMean;\n  var N = 1000;\n  var means = new NumberList();\n  var nextMeans = new NumberList();\n  var nValuesInCluster = new NumberList();\n\n  var initdMin = 1 + max - min;\n\n  for(i = 0; i < k; i++) {\n    clusters[i] = new NumberList();\n    nextMeans[i] = min + (i + 0.5) * dX;\n  }\n\n  for(n = 0; n < N; n++) {\n\n    for(i = 0; i < k; i++) {\n      nValuesInCluster[i] = 0;\n      means[i] = nextMeans[i];\n      nextMeans[i] = 0;\n    }\n\n    for(i = 0; numberList[i] != null; i++) {\n      x = numberList[i];\n      dMin = initdMin;\n      jK = 0;\n\n      for(j = 0; j < k; j++) {\n        d = Math.abs(x - means[j]);\n        if(d < dMin) {\n          dMin = d;\n          jK = j;\n        }\n      }\n      if(n == N - 1) {\n        returnIndexes ? clusters[jK].push(i) : clusters[jK].push(x);\n      }\n\n      nValuesInCluster[jK]++;\n\n      nextMeans[jK] = ((nValuesInCluster[jK] - 1) * nextMeans[jK] + x) / nValuesInCluster[jK];\n    }\n  }\n\n  return clusters;\n};\n\n\nNumberListOperators.standardDeviationBetweenTwoNumberLists = function(numberList0, numberList1) {\n  var s = 0;\n  var l = Math.min(numberList0.length, numberList1.length);\n\n  for(var i = 0; i < l; i++) {\n    s += Math.pow(numberList0[i] - numberList1[i], 2);\n  }\n\n  return s/l;\n};\n\n/**\n * returns Pearson Product Moment Correlation, the most common correlation coefficient ( covariance/(standard_deviation0*standard_deviation1) )\n * @param  {NumberList} numberList0\n * @param  {NumberList} numberList1\n * @return {Number}\n * tags:statistics\n */\nNumberListOperators.pearsonProductMomentCorrelation = function(numberList0, numberList1) { //TODO:make more efficient\n  return NumberListOperators.covariance(numberList0, numberList1) / (numberList0.getStandardDeviation() * numberList1.getStandardDeviation());\n};\n\n\n/**\n * smooth a numberList by calculating averages with neighbors\n * @param  {NumberList} numberList\n * @param  {Number} intensity weight for neighbors in average (0<=intensity<=0.5)\n * @param  {Number} nIterations number of ieterations\n * @return {NumberList}\n * tags:statistics\n */\nNumberListOperators.averageSmoother = function(numberList, intensity, nIterations) {\n  nIterations = nIterations == null ? 1 : nIterations;\n  intensity = intensity == null ? 0.1 : intensity;\n\n  intensity = Math.max(Math.min(intensity, 0.5), 0);\n  var anti = 1 - 2 * intensity;\n  var n = numberList.length - 1;\n\n  var newNumberList = new NumberList();\n  var i;\n\n  newNumberList.name = numberList.name;\n\n  for(i = 0; i < nIterations; i++) {\n    if(i == 0) {\n      numberList.forEach(function(val, i) {\n        newNumberList[i] = anti * val + (i > 0 ? (numberList[i - 1] * intensity) : 0) + (i < n ? (numberList[i + 1] * intensity) : 0);\n      });\n    } else {\n      newNumberList.forEach(function(val, i) {\n        newNumberList[i] = anti * val + (i > 0 ? (newNumberList[i - 1] * intensity) : 0) + (i < n ? (newNumberList[i + 1] * intensity) : 0);\n      });\n    }\n  }\n\n  newNumberList.name = numberList.name;\n\n  return newNumberList;\n};\n\n\n/**\n * accepted comparison operators: \"<\", \"<=\", \">\", \">=\", \"==\", \"!=\"\n */\nNumberListOperators.filterNumberListByNumber = function(numberList, value, comparisonOperator, returnIndexes) {\n  returnIndexes = returnIndexes || false;\n  var newNumberList = new NumberList();\n  var i;\n\n  if(returnIndexes) {\n    switch(comparisonOperator) {\n      case \"<\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] < value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n      case \"<=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] <= value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n      case \">\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] > value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n      case \">=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] >= value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n      case \"==\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] == value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n      case \"!=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] != value) {\n            newNumberList.push(i);\n          }\n        }\n        break;\n    }\n\n  } else {\n    switch(comparisonOperator) {\n      case \"<\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] < value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n      case \"<=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] <= value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n      case \">\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] > value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n      case \">=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] >= value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n      case \"==\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] == value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n      case \"!=\":\n        for(i = 0; numberList[i] != null; i++) {\n          if(numberList[i] != value) {\n            newNumberList.push(numberList[i]);\n          }\n        }\n        break;\n    }\n  }\n\n  return newNumberList;\n};\n\n/**\n * creates a NumberList that contains the union of two NumberList (removing repetitions)\n *\n * @param  {NumberList} x list A\n * @param  {NumberList} y list B\n *\n * @return {NumberList} the union of both NumberLists\n * tags:\n */\nNumberListOperators.union = function(x, y) {//TODO: this should be refactored, and placed in ListOperators\n  // Borrowed from here: http://stackoverflow.com/questions/3629817/getting-a-union-of-two-arrays-in-javascript\n  var obj = {};\n  for(var i = x.length - 1; i >= 0; --i)\n    obj[x[i]] = x[i];\n  for(var i = y.length - 1; i >= 0; --i)\n    obj[y[i]] = y[i];\n  var res = new NumberList();\n  for(var k in obj) {\n    if(obj.hasOwnProperty(k)) // <-- optional\n      res.push(obj[k]);\n  }\n  return res;\n};\n\n/**\n * creates a NumberList that contains the intersection of two NumberList (elements present in BOTH lists)\n * @param  {NumberList} list A\n * @param  {NumberList} list B\n *\n * @return {NumberList} the intersection of both NumberLists\n * tags:deprecated\n */\nNumberListOperators.intersection = function(a, b) {//TODO: refactor this method that should be at ListOperators\n  // Borrowed from here: http://stackoverflow.com/questions/1885557/simplest-code-for-array-intersection-in-javascript\n  //console.log( \"arguments: \", arguments );\n  if(arguments.length > 2) {\n    var sets = [];\n    for(var i = 0; i < arguments.length; i++) {\n      sets.push(arguments[i]);\n    }\n    sets.sort(function(a, b) {\n      return a.length - b.length;\n    });\n    console.log(\"sets: \", sets);\n    var resultsTrail = sets[0];\n    for(var i = 1; i < sets.length; i++) {\n      var newSet = sets[i];\n      resultsTrail = NumberListOperators.intersection(resultsTrail, newSet);\n    }\n    return resultsTrail;\n  }\n\n  var result = new NumberList();\n  a = a.slice();\n  b = b.slice();\n  while(a.length > 0 && b.length > 0)\n  {\n    if(a[0] < b[0]) {\n      a.shift();\n    }\n    else if(a[0] > b[0]) {\n      b.shift();\n    }\n    else /* they're equal */\n    {\n      result.push(a.shift());\n      b.shift();\n    }\n  }\n\n  return result;\n};","import Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Point from \"src/dataStructures/geometry/Point\";\n\nfunction NumberTableConversions() {}\nexport default NumberTableConversions;\n\n/**\n * converts a numberTable with at least two lists into a Polygon\n * @param  {NumberTable} numberTable with at least two numberLists\n * @return {Polygon}\n * tags:conversion\n */\nNumberTableConversions.numberTableToPolygon = function(numberTable) {\n  if(numberTable.length < 2) return null;\n\n  var i;\n  var n = Math.min(numberTable[0].length, numberTable[1].length);\n  var polygon = new Polygon();\n\n  for(i = 0; i < n; i++) {\n    polygon[i] = new Point(numberTable[0][i], numberTable[1][i]);\n  }\n\n  return polygon;\n};","import NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport List from \"src/dataStructures/lists/List\";\n\nfunction NumberTableFlowOperators() {}\nexport default NumberTableFlowOperators;\n\nNumberTableFlowOperators.getFlowTable = function(numberTable, normalized, include0s) {\n  if(numberTable == null) return;\n\n  normalized = normalized || false;\n  var nElements = numberTable.length;\n  var nRows = numberTable[0].length;\n  var numberList;\n  var minList = new NumberList();\n  var maxList = new NumberList();\n  var sums = new NumberList();\n  var minInRow;\n  var maxInRow;\n  var sumInRow;\n  var MAX = -9999999;\n  var MIN = 9999999;\n  var MAXSUMS = -9999999;\n  var i, j;\n  for(i = 0; i < nRows; i++) {\n    minInRow = 9999999; //TODO: what's the max Number?\n    maxInRow = -9999999;\n    sumInRow = 0;\n    for(j = 0; j < nElements; j++) {\n      numberList = numberTable[j];\n      if(numberList.length != nRows) return;\n\n      maxInRow = Math.max(maxInRow, numberList[i]);\n      minInRow = Math.min(minInRow, numberList[i]);\n      sumInRow += numberList[i];\n    }\n    minList.push(minInRow);\n    maxList.push(maxInRow);\n    sums.push(sumInRow);\n    MIN = Math.min(MIN, minInRow);\n    MAX = Math.max(MAX, maxInRow);\n    MAXSUMS = Math.max(MAXSUMS, sumInRow);\n  }\n\n  var dMINMAX = MAXSUMS - MIN;\n  var flowTable = new NumberTable();\n  var flowNumberList;\n  var minToNormalize;\n  var maxToNormalize;\n\n  var include0Add = include0s ? 1 : 0;\n\n\n  if(normalized && include0s) {\n    var max;\n\n    flowTable = new NumberTable(numberTable.length + 1);\n\n    numberTable[0].forEach(function() {\n      flowTable[0].push(0);\n    });\n\n    numberTable.forEach(function(list, iList) {\n      list.forEach(function(val, j) {\n        var sum = sums[j];\n        flowTable[iList + 1][j] = val / (sum == 0 ? 0.00001 : sum) + flowTable[iList][j];\n      });\n    });\n\n    return flowTable;\n  }\n\n  flowTable = new NumberTable();\n\n  if(!normalized) {\n    minToNormalize = MIN;\n    maxToNormalize = dMINMAX;\n  } else {\n    minToNormalize = Math.max(MIN, 0);\n  }\n  for(i = 0; i < nElements; i++) {\n    flowNumberList = new NumberList();\n    flowTable.push(flowNumberList);\n  }\n  if(include0s) flowTable.push(new NumberList());\n\n  for(i = 0; i < nRows; i++) {\n    numberList = numberTable[0];\n    if(normalized) {\n      maxToNormalize = sums[i] - minToNormalize;\n    }\n    if(include0s) {\n      flowTable[0][i] = 0;\n    }\n    if(maxToNormalize == 0) maxToNormalize = 0.00001;\n    flowTable[include0Add][i] = (numberList[i] - minToNormalize) / maxToNormalize;\n    for(j = 1; j < nElements; j++) {\n      numberList = numberTable[j];\n      flowTable[j + include0Add][i] = ((numberList[i] - minToNormalize) / maxToNormalize) + flowTable[j - 1 + include0Add][i];\n    }\n  }\n  return flowTable;\n};\n\nNumberTableFlowOperators.getFlowTableIntervals = function(numberTable, normalized, sorted, stacked) {\n  if(numberTable == null) return null;\n\n  var table = NumberTableFlowOperators.getFlowTable(numberTable, normalized, true);\n\n  var intervalTable = new Table();\n  var i, j;\n\n  var nElements = table.length;\n  var nRows = table[0].length;\n\n  var intervalList;\n\n  var maxCols = new NumberList();\n\n  for(i = 1; i < nElements; i++) {\n    numberList = table[i];\n    intervalList = new List();\n    intervalTable[i - 1] = intervalList;\n    for(j = 0; j < nRows; j++) {\n      intervalList.push(new Interval(table[i - 1][j], table[i][j]));\n      if(i == nElements - 1) maxCols[j] = table[i][j];\n    }\n\n  }\n\n  if(sorted) {\n    var amplitudes;\n    var interval;\n    var yy;\n    for(j = 0; j < nRows; j++) {\n      amplitudes = new NumberList();\n      intervalList = intervalTable[i];\n      for(i = 0; i < nElements - 1; i++) {\n        amplitudes.push(intervalTable[i][j].getAmplitude());\n      }\n      var indexes = amplitudes.getSortIndexes();\n\n      yy = (normalized || stacked) ? 0 : (1 - maxCols[j]) * 0.5;\n\n      for(i = 0; i < nElements - 1; i++) {\n        interval = intervalTable[indexes[i]][j];\n        interval.y = yy + interval.getAmplitude();\n        interval.x = yy;\n        yy = interval.y;\n      }\n    }\n  } else if(!normalized) {\n    for(j = 0; j < nRows; j++) {\n      for(i = 0; i < nElements - 1; i++) {\n        interval = intervalTable[i][j];\n        if(stacked) {\n          intervalTable[i][j].x = 1 - intervalTable[i][j].x;\n          intervalTable[i][j].y = 1 - intervalTable[i][j].y;\n        } else {\n          intervalTable[i][j] = interval.add((1 - maxCols[j]) * 0.5);\n        }\n\n      }\n    }\n  }\n\n  return intervalTable;\n};","import NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport NumberListOperators from \"src/operators/numeric/numberList/NumberListOperators\";\nimport List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\nimport { instantiateWithSameType } from \"src/tools/utils/code/ClassUtils\";\n\nfunction NumberTableOperators() {}\nexport default NumberTableOperators;\n\n/**\n * a NumberTable as a matrix: has n lists, each with m values, being a mxn matrix\n * the following NumberTable:\n * [ [0, 4, 7], [3, 8, 1] ]\n * is notated:\n * | 0   4   7 |\n * | 3   8   1 |\n */\n\n\n\n/**\n * normlizes each NumberList to min and max values (redundant with NumberTable.getNumberListsNormalized)\n * @param  {NumberTable} numberTable\n * @return {NumberTable}\n * tags:statistics,deprecated\n */\nNumberTableOperators.normalizeLists = function(numberTable) {//TODO: redundant with NumberTable.getNumberListsNormalized\n  return numberTable.getNumberListsNormalized();\n};\n\nNumberTableOperators.normalizeListsToMax = function(numberTable) {\n  var newNumberTable = new NumberTable();\n  newNumberTable.name = numberTable.name;\n  var i;\n  for(i = 0; numberTable[i] != null; i++) {\n    newNumberTable[i] = numberTable[i].getNormalizedToMax();\n  }\n  return newNumberTable;\n};\n\n/**\n * smooth numberLists by calculating averages with neighbors\n * @param  {NumberTable} numberTable\n *\n * @param  {Number} intensity weight for neighbors in average (0<=intensity<=0.5)\n * @param  {Number} nIterations number of ieterations\n * @return {NumberTable}\n * tags:statistics\n */\nNumberTableOperators.averageSmootherOnLists = function(numberTable, intensity, nIterations) {\n  if(numberTable == null) return;\n\n  intensity = intensity || 0.5;\n  nIterations = nIterations || 1;\n\n  var newNumberTable = new NumberTable();\n  newNumberTable.name = numberTable.name;\n  numberTable.forEach(function(nL, i) {\n    newNumberTable[i] = NumberListOperators.averageSmoother(numberTable[i], intensity, nIterations);\n  });\n  return newNumberTable;\n};\n\n/**\n * builds a k-nearest neighbors function, that calculates a class membership or a regression, taking the vote or average of the k nearest instances, using Euclidean distance, and applies it to a list of points, see: http://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm\n * <br>[!] regression still not built\n * @param  {NumberTable} numberTable\n * @param  {List} propertyList categories or values\n *\n * @param  {Polygon} vectorList optional list of points to be tested, if provided classes or regressions are calculated, if not the function is returned\n * @param  {Number} k number of neighbors\n * @param  {Boolean} calculateClass if true propertyList is a list of categories for membership calculation, if false a numberList for regression\n * @param {Number} matrixN if provided, the result will be a numberTable with values in a grid in the numberTable ranges\n * @return {Object} kNN Function or a matrix (grid) of values if matrixN is provided, or classes or values from points if vectorList is provided\n * tags:ds\n */\nNumberTableOperators.kNN = function(numberTable, propertyList, vectorList, k, calculateClass, matrixN) {\n  if(numberTable == null ||  propertyList == null) return null;\n\n  k = k || 1;\n  calculateClass = calculateClass == null ? true : calculateClass;\n\n  var i, j;\n\n  var fKNN = function(vector) {\n    var i, j;\n    var d2;\n\n    var table = new NumberTable();\n\n    table[0] = new NumberList();\n    table[1] = new NumberList();\n    numberTable[0].forEach(function(val, i) {\n      d2 = 0;\n      numberTable.forEach(function(nList, j) {\n        d2 += Math.pow(nList[i] - vector[j], 2);\n      });\n      if(table[1].length < k || table[1][k - 1] > d2) {\n        var inserted = false;\n        for(j = 0; table[1][j] < k; j++) {\n          if(d2 < table[1][j]) {\n            table[1].splice(j, 0, d2);\n            table[0].splice(j, 0, i);\n            inserted = true;\n            break;\n          }\n        }\n        if(!inserted && table[1].length < k) {\n          table[1].push(d2);\n          table[0].push(i);\n        }\n      }\n    });\n\n\n\n    //table = table.getListsSortedByList(table[1]);\n\n    if(calculateClass) {\n      var classTable = new Table();\n      classTable[0] = new List();\n      classTable[1] = new NumberList();\n      for(i = 0; i < k; i++) {\n        var clas = propertyList[table[0][i]];\n        var index = classTable[0].indexOf(clas);\n        if(index == -1) {\n          classTable[0].push(clas);\n          classTable[1].push(1);\n        } else {\n          classTable[1][index]++;\n        }\n      }\n      var max = classTable[1][0];\n      var iMax = 0;\n      classTable[1].slice(1).forEach(function(val, i) {\n        if(val > max) {\n          max = val;\n          iMax = i + 1;\n        }\n      });\n      return classTable[0][iMax];\n    }\n\n    var val;\n    var combination = 0;\n    var sumD = 0;\n    for(i = 0; i < k; i++) {\n      val = propertyList[table[0][i]];\n      combination += val / (table[1][i] + 0.000001);\n      sumD += (1 / (table[1][i] + 0.000001));\n    }\n\n    console.log('vector:', vector[0], vector[1], 'colsest:', Math.floor(100000000 * table[1][0]), Math.floor(100000000 * table[1][1]), 'categories', propertyList[table[0][0]], propertyList[table[0][1]], 'result', combination / sumD);\n\n    return combination / sumD;\n\n    //regression\n    //…\n  };\n\n  if(vectorList == null) {\n\n    if(matrixN != null && matrixN > 0) {\n      var propertiesNumbers = {};\n      var n = 0;\n\n      propertyList.forEach(function(val) {\n        if(propertiesNumbers[val] == null) {\n          propertiesNumbers[val] = n;\n          n++;\n        }\n      });\n\n      var p;\n      var matx = new NumberTable();\n      var ix = numberTable[0].getMinMaxInterval();\n      var minx = ix.x;\n      var kx = ix.getAmplitude() / matrixN;\n      var iy = numberTable[1].getMinMaxInterval();\n      var miny = iy.x;\n      var ky = iy.getAmplitude() / matrixN;\n\n      for(i = 0; i < matrixN; i++) {\n        matx[i] = new NumberList();\n\n        for(j = 0; j < matrixN; j++) {\n          p = [\n            minx + kx * i,\n            miny + ky * j\n          ];\n\n          fKNN(p);\n\n          matx[i][j] = calculateClass ? propertiesNumbers[fKNN(p)] : fKNN(p);\n        }\n      }\n      //return matrix\n      return matx;\n    }\n\n    //return Function\n    return fKNN;\n  }\n\n  var results = instantiateWithSameType(propertyList);\n\n  vectorList.forEach(function(vector) {\n    results.push(fKNN(vector));\n  });\n\n  //return results\n  return results;\n};\n\n\n\n//TODO: move to NumberTableConversions\nNumberTableOperators.numberTableToNetwork = function(numberTable, method, tolerance) {\n  tolerance = tolerance == null ? 0 : tolerance;\n\n  var network = new Network();\n\n  var list0;\n  var list1;\n\n  var i;\n  var j;\n\n  var node0;\n  var node1;\n  var relation;\n\n\n  switch(method) {\n    case 0: // standard deviation\n\n      var sd;\n      var w;\n\n      for(i = 0; numberTable[i + 1] != null; i++) {\n        list0 = numberTable[i];\n\n        if(i == 0) {\n          node0 = new Node(list0.name, list0.name);\n          network.addNode(node0);\n        } else {\n          node0 = network.nodeList[i];\n        }\n\n\n        for(j = i + 1; numberTable[j] != null; j++) {\n          list1 = numberTable[j];\n\n          if(i == 0) {\n            node1 = new Node(list1.name, list1.name);\n            network.addNode(node1);\n          } else {\n            node1 = network.nodeList[j];\n          }\n\n\n\n          list1 = numberTable[j];\n          sd = NumberListOperators.standardDeviationBetweenTwoNumberLists(list0, list1);\n\n          w = 1 / (1 + sd);\n\n          if(w >= tolerance) {\n            relation = new Relation(i + \"_\" + j, node0.name + \"_\" + node1.name, node0, node1, w);\n            network.addRelation(relation);\n          }\n        }\n      }\n\n      break;\n    case 1:\n      break;\n    case 2:\n      break;\n  }\n\n  return network;\n};\n\n\n/**\n * calculates the matrix product of two Numbertables\n * @param  {NumberTable} numberTable0 first numberTable\n * @param  {NumberTable} numberTable1 second numberTable\n * @return {NumberTable} result\n */\nNumberTableOperators.product = function(numberTable0, numberTable1){\n  if(numberTable0==null || numberTable1==null) return;\n  var n = numberTable0.length;\n  var m = numberTable0[0].length;\n  if(n==0 || m==0 || n!=numberTable1[0].length || m!=numberTable1.length) return;\n\n  var newTable = new NumberTable();\n  var i, j, k;\n  var val;\n\n  for(i=0; i<n; i++){\n    newTable[i] = new NumberList();\n    for(j=0; j<n; j++){\n      val = 0;\n      for(k=0; k<m; k++){\n        val+=numberTable0[i][k]*numberTable1[k][j];\n      }\n      newTable[i][j] = val;\n    }\n  }\n\n  return newTable;\n}\n\n\n\n/**\n * calculates the covariance matrix\n * @param  {NumberTable} numberTable\n * @return {NumberTable}\n * tags:statistics\n */\nNumberTableOperators.getCovarianceMatrix = function(numberTable){//TODO:build more efficient method\n  if(numberTable==null) return;\n  return NumberTableOperators.product(numberTable, numberTable.getTransposed()).factor(1/numberTable.length);\n}\n\n\n\n\n\n","import Network from \"src/dataStructures/structures/networks/Network\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\n\n/**\n * @classdesc Includes functions to convert Networks into other DataTypes.\n *\n * @namespace\n * @category networks\n */\nfunction NetworkConvertions() {}\nexport default NetworkConvertions;\n\n/**\n * Builds a Network based on a two columns Table, creating relations on co-occurrences.\n *\n * @param {Table} table table with at least two columns (commonly strings)\n *\n * @param {NumberList} numberList Weights of relations.\n * @param {Number} threshold Minimum weight or number of co-occurrences to create a relation.\n * @param {Boolean} allowMultipleRelations\n * @param {Number} minRelationsInNode Remove nodes with number of relations below threshold.\n * @param {StringList} stringList Contents of relations.\n * @return {Network}\n * tags:conversion\n */\nNetworkConvertions.TableToNetwork = function(table, numberList, threshold, allowMultipleRelations, minRelationsInNode, stringList) {\n  if(table == null || !table.isTable || table[0] == null || table[1] == null) return;\n\n  //trace(\"••••••• createNetworkFromPairsTable\", table);\n  if(allowMultipleRelations == null) allowMultipleRelations = false;\n  if(table.length < 2) return null;\n  var network = new Network();\n\n  if(numberList == null) {\n    var nElements = Math.min(table[0].length, table[1].length);\n  } else {\n    nElements = Math.min(table[0].length, table[1].length, numberList.length);\n  }\n\n  //trace(\"nElements\", nElements);\n\n  if(numberList == null && table.length > 2 && typeOf(table[2]) == NumberList && table[2].length >= nElements) numberList = table[2];\n\n\n  if(typeOf(table[0]) == NodeList && typeOf(table[1]) == NodeList) {\n    //....    different methodology here\n  }\n\n  var node0;\n  var node1;\n  var name0;\n  var name1;\n  var relation;\n  var i;\n  for(i = 0; i < nElements; i++) {\n    name0 = \"\" + table[0][i];\n    name1 = \"\" + table[1][i];\n    //trace(\"______________ i, name0, name1:\", i, name0, name1);\n    node0 = network.nodeList.getNodeById(name0);\n    if(node0 == null) {\n      node0 = new Node(name0, name0);\n      network.addNode(node0);\n    } else {\n      node0.weight++;\n    }\n    node1 = network.nodeList.getNodeById(name1);\n    if(node1 == null) {\n      node1 = new Node(name1, name1);\n      network.addNode(node1);\n    } else {\n      node1.weight++;\n    }\n    if(numberList == null) {\n      relation = network.relationList.getFirstRelationByIds(node0.id, node1.id, false);\n      if(relation == null ||  allowMultipleRelations) {\n        relation = new Relation(name0 + \"_\" + name1 + network.relationList.length, name0 + \"_\" + name1, node0, node1, 1);\n        network.addRelation(relation);\n      } else {\n        relation.weight++;\n      }\n    } else if(numberList[i] > threshold) {\n      relation = new Relation(name0 + \"_\" + name1, name0 + \"_\" + name1, node0, node1, numberList[i]);\n      network.addRelation(relation);\n    }\n\n    if(stringList) relation.content = stringList[i];\n  }\n\n  if(minRelationsInNode) {\n    for(i = 0; network.nodeList[i] != null; i++) {\n      if(network.nodeList[i].relationList.length < minRelationsInNode) {\n        network.removeNode(network.nodeList[i]);\n        i--;\n      }\n    }\n  }\n\n  return network;\n};\n","import { typeOf } from \"src/tools/utils/code/ClassUtils\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport TableEncodings from \"src/operators/lists/TableEncodings\";\nimport DateList from \"src/dataStructures/dates/DateList\";\nimport NetworkConvertions from \"src/operators/structures/NetworkConvertions\";\n\nfunction ObjectConversions() {}\nexport default ObjectConversions;\n\n// *\n//  * convert an object into a json string (JSON.stringify(object))\n//  * @param  {Object} object to convert\n//  * @return {String} string in format json\n//  * tags:conversion\n// ObjectConversions.objectToString = function(object){\n// \treturn JSON.stringify(object);\n// }\n\n/**\n * converts any Object into the desirde type, using the most obvious conversion (if exists)\n * @param  {Object} object\n * @param  {String} toType can be literal (ex: \"string\", \"NumberList\") or short (ex: \"s\", \"#L\")\n * @return {Object} Object of the specified type\n * tags:conversion\n */\nObjectConversions.conversor = function(object, toType) {\n  if(object==null || toType==null) return;\n\n  var i;\n  var type = typeOf(object);\n  var pairType = type + \"_\" + toType;\n  var newList;\n\n  console.log('ObjectConversions.conversor, pairType:', pairType);\n\n  switch(pairType) {\n    case 'Array_List':\n      return ObjectConversions.ArrayToList(object);\n    case 'NumberTable_Polygon':\n      var polygon = new Polygon();\n      var length2 = object.length > 1;\n      for(i = 0; object[0][i] != null; i++) {\n        polygon[i] = new Point(object[0][i], length2 ? object[1][i] : 0);\n      }\n      return polygon;\n    case 'date_string':\n      return DateOperators.dateToString(object);\n    case 'string_date':\n      return DateOperators.stringToDate(object);\n    case 'date_number':\n      return object.getTime();\n    case 'number_date':\n      return new Date(object);\n    case 'List_StringList':\n    case 'NumberList_StringList':\n      return object.toStringList();\n    case 'StringList_NumberList':\n      return object.toNumberList();\n    case 'Object_string':\n      return JSON.stringify(object, null, \"\\t\");\n    case 'string_Object':\n      return JSON.parse(object);\n    case 'string_ColorScale':\n      return ColorScales[object]; //todo: not working, fix\n    case 'string_Table':\n      return TableEncodings.CSVtoTable(object);\n    case 'StringList_DateList': //TODO: solve cases of lists\n      newList = new DateList();\n      object.forEach(function(string) {\n        newList.push(DateOperators.stringToDate(string));\n      });\n      newList.name = object.name;\n      return newList;\n    case 'DateList_NumberList': //TODO: solve cases of lists\n      return object.getTimes();\n    case 'Table_Network':\n      return NetworkConvertions.TableToNetwork(object, null, 0, false);\n\n  }\n\n  switch(toType) {\n    case 'string':\n      return object.toString();\n    case 'number':\n      return Number(object);\n  }\n\n  // var short = TYPES_SHORT_NAMES_DICTIONARY[toType];\n  // if(short!=null && short!=toType){\n  //   return ObjectConversions.conversor(object, short);\n  // }\n\n  return null;\n};\n\n/**\n * converts an array into an improved List\n * @param {Array} array\n * tags:conversion\n */\nObjectConversions.ArrayToList = function(array){\n  return List.fromArray(object).getImproved();\n}","import StringList from \"src/dataStructures/strings/StringList\";\nimport List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Point3D from \"src/dataStructures/geometry/Point3D\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport DateInterval from \"src/dataStructures/dates/DateInterval\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport ObjectConversions from \"src/operators/objects/ObjectConversions\";\n\nfunction ObjectOperators() {}\nexport default ObjectOperators;\n\n\n/**\n * identity function\n * @param  {Object} object\n * @return {Object}\n * tags:special\n */\nObjectOperators.identity = function(object) {\n  return object;\n};\n\n\n/**\n * builds a string report of the object\n * @param  {Object} object\n * @return {String}\n * tags:special\n */\nObjectOperators.getReport = function(object) {\n  if(object == null) return null;\n\n  if(object.getReport) return object.getReport();\n\n  var text = \"///////////report of instance of Object//////////\";\n\n  var string = ObjectConversions.objectToString(object);\n\n  if(string.length < 2000) {\n    text += \"\\n\" + string;\n    return text;\n  }\n\n  var propertyNames = new StringList();\n  var propertyValues = new StringList();\n  var popertyTypes = new StringList();\n\n  for(var propName in object) {\n    propertyNames.push(propName);\n  }\n\n  if(propertyNames.length < 100) {\n    text += \"\\nproperties: \" + propertyNames.join(\", \");\n  } else {\n    text += \"\\nfirst 100 properties: \" + propertyNames.slice(0, 100).join(\", \");\n  }\n\n  return text;\n\n};\n\n/**\n * uses a boolean to decide which of two objects it returns\n * @param  {Boolean} boolean\n * @param  {Object} object0 returned if boolean is true\n * @param  {Object} object1 returned if boolean is false\n * @return {Object}\n * tags:\n */\nObjectOperators.booleanGate = function(boolean, object0, object1) {\n  return boolean ? object0 : object1;\n};\n\n/**\n * return a property value from its name\n * @param  {Object} object\n * @param  {String} property_value\n * @return {Object}\n * tags:\n */\nObjectOperators.getPropertyValue = function(object, property_value) {\n  if(object == null) return;\n\n  return object == null ? null : object[property_value];\n};\n\n/**\n * return a a stringList of property names\n * @param  {Object} object\n * @return {StringList}\n * tags:\n */\nObjectOperators.getPropertiesNames = function(object) {\n  if(object == null) return;\n\n  return StringList.fromArray(Object.getOwnPropertyNames(object));\n};\n\n/**\n * return a table with a stringList of property names and a list of respective values\n * @param  {Object} object\n * @return {Table}\n * tags:\n */\nObjectOperators.getPropertiesNamesAndValues = function(object) {\n  if(object == null) return;\n\n  var table = new Table();\n  var i;\n  var value;\n\n  table[0] = ObjectOperators.getPropertiesNames(object);\n  table[1] = new List();\n\n  table[0].forEach(function(value, i) {\n    table[1][i] = object[value];\n  });\n\n  table[1] = table[1].getImproved();\n\n  return table;\n};\n\n\n/**\n * interpolates two different objects of the same type<br>currently working with numbers, intervals and numberLists\n * @param  {Object} object0\n * @param  {Object} object1\n *\n * @param  {Number} value\n * @param {Number} minDistance if objects are close enough, it delivers the orginal object\n * @return {Object}\n * tags:\n */\nObjectOperators.interpolateObjects = function(object0, object1, value, minDistance) {\n  var type = typeOf(object0);\n  var i;\n  if(type != typeOf(object1)) return object0;\n\n  value = value == null ? 0.5 : value;\n  var antivalue = 1 - value;\n\n  switch(type) {\n    case 'number':\n      if(minDistance && Math.abs(object0 - object1) <= minDistance) return object0;\n      return antivalue * object0 + value * object1;\n    case 'Interval':\n      if(minDistance && (Math.abs(object0.x - object1.x) + Math.abs(object0.y - object1.y)) <= minDistance) return object0;\n      return new Interval(antivalue * object0.x + value * object1.x, antivalue * object0.y + value * object1.y);\n    case 'NumberList':\n      if(minDistance && Math.abs(object0.subtract(object1).getSum()) <= minDistance) return object0;\n      var minL = Math.min(object0.length, object1.length);\n      var newNumberList = new NumberList();\n      for(i = 0; i < minL; i++) {\n        newNumberList[i] = antivalue * object0[i] + value * object1[i];\n      }\n      return newNumberList;\n  }\n  return null;\n};\n\n\n// ObjectOperators.fusionObjects = function(object, objectToFusion){\n\n// }\n\n/**\n * replaces an object by another if it matches the obectToReplace\n * @param  {Object} object to be replaced if equals to obectToReplace\n * @param  {Object} obectToReplace object to check\n * @param  {Object} objectToPlace to be delivered instead of given object (in case the object matches obectToReplace)\n * @return {Object} original object or replaced object\n * tags:\n */\nObjectOperators.replaceObject = function(object, obectToReplace, objectToPlace) {\n  return object == obectToReplace ? objectToPlace : object;\n};\n\n\n/**\n * create an improved list from an Array\n * @param  {Array} array\n * @return {List}\n * tags:conversion\n */\nObjectOperators.toList = function(array) {\n  return List.fromArray(array).getImproved();\n};\n\n\n/////universal operators\n\n\n\n//////unibersal algebra\n\n\n/**\n * adds two or more objects, addition is performed according to the different types\n * @param {Object} object0\n *\n * @param {Object} object1\n * @param {Object} object2\n * @param {Object} object3\n * @param {Object} object4\n * @param {Object} object5\n * @return {Object}\n * tags:math\n */\nObjectOperators.addition = function() {\n  //console.log(\"addition__________________________________arguments:\", arguments);\n  var objectType;\n  var result;\n  var i;\n  if(arguments.length < 2) {\n    if(arguments.length == 1 && arguments[0] != null && arguments[0].isList) {\n      var result = arguments[0][0];\n      for(i = 1; arguments[0][i] != null; i++) {\n        result = ObjectOperators.addition(result, arguments[0][i]);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  if(arguments.length == 2) {\n    if(arguments[0] != null && arguments[0].isList && arguments[1] != null && arguments[1].isList) {\n      return ObjectOperators._applyBinaryOperatorOnLists(arguments[0], arguments[1], ObjectOperators.addition);\n    } else if(arguments[0] != null && arguments[0].isList) {\n      //console.log('list versus object');\n      return ObjectOperators._applyBinaryOperatorOnListWithObject(arguments[0], arguments[1], ObjectOperators.addition);\n    } else if(arguments[1] != null && arguments[1].isList) {\n      //console.log('object versus list');\n      return ObjectOperators._applyBinaryOperatorOnObjectWithList(arguments[0], arguments[1], ObjectOperators.addition);\n    }\n\n    var a0 = arguments[0];\n    var a1 = arguments[1];\n    var a0Type = typeOf(a0);\n    var a1Type = typeOf(a1);\n    //console.log('ObjectOperators.addition, a0Type, a1Type:['+a0Type, a1Type+']');\n    var reversed = false;\n\n    if(a1Type < a0Type && a1Type != \"string\" && a0Type != \"string\") {\n      a0 = arguments[1];\n      a1 = arguments[0];\n      a0Type = typeOf(a0);\n      a1Type = typeOf(a1);\n      reversed = true;\n    }\n\n    var pairType = a0Type + \"_\" + a1Type;\n    //console.log('ObjectOperators.addition, pairType:['+pairType+']');\n    //\n    switch(pairType) {\n      case 'boolean_boolean':\n        return a0 && a1;\n      case 'date_string':\n        return reversed ? a1 + DateOperators.dateToString(a0) : DateOperators.dateToString(a0) + a1;\n      case 'number_string':\n      case 'string_string':\n      case 'string_number':\n      case 'boolean_number':\n      case 'number_number':\n        return a0 + a1;\n      case 'Point_Point':\n        return new Point(a0.x + a1.x, a0.y + a1.y);\n      case 'Point3D_Point3D':\n        return new Point3D(a0.x + a1.x, a0.y + a1.y, a0.z + a1.z);\n      case 'number_Point':\n        return new Point(a0.x + a1, a0.y + a1);\n      case 'number_Point3D':\n        return new Point3D(a0.x + a1, a0.y + a1, a0.z + a1);\n      case 'Interval_number':\n        return new Interval(a0.x + a1, a0.y + a1);\n      case 'Interval_Point':\n        return new Point(a0.getMin() + a1.x, a0.getMax() + a1.y);\n      case 'Interval_Interval':\n        return new Point(a0.getMin() + a1.getMin(), a0.getMax() + a1.getMax());\n      case 'Point_Rectangle':\n        return new Rectangle(a0.x + a1.x, a0.y + a1.y, a1.width, a1.height);\n      case 'Interval_Rectangle':\n        return new Rectangle(a0.getMin() + a1.x, a0.getMax() + a1.y, a1.width, a1.height);\n      case 'Rectangle_Rectangle':\n        return new Rectangle(a0.x + a1.x, a0.y + a1.y, a0.width + a1.width, a0.height + a1.height);\n      case 'date_number':\n        return new Date(a0.getTime() + (a1 / DateOperators.millisecondsToDays));\n      case 'date_date':\n        return new Date(Number(a0.getTime() + a1.getTime())); //?\n      case 'date_DateInterval':\n        return new DateInterval(ObjectOperators.addition(a0, a1.date0), ObjectOperators.addition(a0, a1.date1));\n      case 'DateInterval_number':\n        return new DateInterval(ObjectOperators.addition(a0.date0, a1), ObjectOperators.addition(a0.date1, a1));\n      case 'DateInterval_Interval':\n        return new DateInterval(ObjectOperators.addition(a0.date0, a1.min), ObjectOperators.addition(a0.date1, a1.max));\n      case 'DateInterval_DateInterval':\n        return new DateInterval(ObjectOperators.addition(a0.date0, a1.date0), ObjectOperators.addition(a0.date1, a1.date1));\n      case 'string_StringList':\n        return a1.append(a0, false);\n      case 'StringList_string':\n        return a1.append(a0, true);\n      default:\n        console.log(\"[!] addition didn't manage to resolve:\", pairType, a0 + a1);\n        return null;\n\n    }\n    return a0 + a1;\n\n  }\n\n  result = arguments[0];\n  for(i = 1; i < arguments.length; i++) {\n    //console.log(i, 'result:', result);\n    result = ObjectOperators.addition(result, arguments[i]);\n  }\n  return result;\n};\n\n\n/**\n * multiplies two or more objects, multiplication is performed according to the different types\n * @param {Object} object0\n *\n * @param {Object} object1\n * @param {Object} object2\n * @param {Object} object3\n * @param {Object} object4\n * @param {Object} object5\n * @return {Object}\n * tags:math\n */\nObjectOperators.multiplication = function() {\n  //console.log(\"multiplication__________________________________arguments:\", arguments);\n  var objectType;\n  var result;\n  var i;\n  if(arguments.length < 2) {\n    if(arguments.length == 1 && arguments[0].isList) {\n      var result = arguments[0][0];\n      for(i = 1; arguments[0][i] != null; i++) {\n        result = ObjectOperators.multiplication(result, arguments[0][i]);\n      }\n      return result;\n    }\n    return null;\n  }\n\n  var a0 = arguments[0];\n  var a1 = arguments[1];\n  var a0Type = typeOf(a0);\n  var a1Type = typeOf(a1);\n  var pairType = a0Type + \"_\" + a1Type;\n\n  //c.log('pairType:['+pairType+']');\n\n  if(arguments.length == 2) {\n    if(arguments[0] == null) return null;\n\n    if(pairType=='NumberTable_NumberTable') return NumberTableOperators.product(a0, a1);\n\n    if(arguments[0].isList && arguments[1].isList) {\n      return ObjectOperators._applyBinaryOperatorOnLists(arguments[0], arguments[1], ObjectOperators.multiplication);\n    } else if(arguments[0].isList) {\n      //console.log('list versus object');\n      return ObjectOperators._applyBinaryOperatorOnListWithObject(arguments[0], arguments[1], ObjectOperators.multiplication);\n    } else if(arguments[1].isList) {\n      return ObjectOperators._applyBinaryOperatorOnListWithObject(arguments[1], arguments[0], ObjectOperators.multiplication);\n    }\n\n    if(a1Type < a0Type){\n      a0 = arguments[1];\n      a1 = arguments[0];\n      a0Type = typeOf(a0);\n      a1Type = typeOf(a1);\n    }\n\n    var pairType = a0Type + \"_\" + a1Type;\n    //console.log('pairType:['+pairType+']');\n\n    //\n    switch(pairType) {\n      case 'number_number':\n      case 'boolean_boolean':\n      case 'boolean_number':\n      case 'Date_string':\n      case 'number_string':\n      case 'string_string':\n        return a0 * a1; //todo: what to do with strings?\n      case 'Point_Point':\n        return new Point(a0.x * a1.x, a0.y * a1.y);\n      case 'Point3D_Point3D':\n        return new Point3D(a0.x * a1.x, a0.y * a1.y, a0.z * a1.z);\n      case 'number_Point':\n        return new Point(a0.x * a1, a0.y * a1);\n      case 'number_Point3D':\n        return new Point3D(a0.x * a1, a0.y * a1, a0.z * a1);\n      case 'Interval_number':\n        return new Interval(a0.getMin() * a1, a0.getMax() * a1);\n      case 'Interval_Point':\n        return new Point(a0.getMin() * a1.x, a0.getMax() * a1.y);\n      case 'Interval_Interval':\n        return new Point(a0.getMin() + a1.getMin(), a0.getMax() + a1.getMax());\n      case 'Point_Rectangle':\n        return new Rectangle(a0.x * a1.x, a0.y * a1.y, a1.width, a1.height); //todo: no\n      case 'Interval_Rectangle':\n        return new Rectangle(a0.getMin() * a1.x, a0.getMax() * a1.y, a1.width, a1.height); //todo: no\n      case 'Rectangle_Rectangle':\n        return new Rectangle(a0.x * a1.x, a0.y * a1.y, a0.width * a1.width, a0.height * a1.height);\n      case 'date_number':\n        return new Date(a0.getTime() * (a1 / DateOperators.millisecondsToDays));\n      case 'date_date':\n        return new Date(Number(a0.getTime() + a1.getTime())); //todo: ???\n      case 'date_DateInterval':\n        return new DateInterval(ObjectOperators.multiplication(a0, a1.date0), ObjectOperators.multiplication(a0, a1.date1)); //todo: ???\n      case 'DateInterval_number':\n        return new DateInterval(ObjectOperators.multiplication(a0.date0, a1), ObjectOperators.multiplication(a0.date1, a1)); //todo: ???\n      case 'DateInterval_Interval':\n        return new DateInterval(ObjectOperators.multiplication(a0.date0, a1.min), ObjectOperators.multiplication(a0.date1, a1.max)); //todo: ???\n      case 'DateInterval_DateInterval':\n        return new DateInterval(ObjectOperators.multiplication(a0.date0, a1.date0), ObjectOperators.multiplication(a0.date1, a1.date1)); //todo: ???\n      default:\n        console.log(\"[!] multiplication didn't manage to resolve:\", pairType, a0 * a1);\n        return null;\n\n    }\n    return a0 * a1;\n  }\n\n  result = arguments[0];\n  for(i = 1; i < arguments.length; i++) {\n    //console.log(i, 'result:', result);\n    result = ObjectOperators.multiplication(result, arguments[i]);\n  }\n  return result;\n};\n\n/**\n * divides two or more objects, division is performed according to the different types\n * @param {Object} object0\n *\n * @param {Object} object1\n * @param {Object} object2\n * @param {Object} object3\n * @param {Object} object4\n * @param {Object} object5\n * @return {Object}\n * tags:math\n */\nObjectOperators.division = function() {\n  //console.log(\"addition__________________________________arguments:\", arguments);\n  var objectType;\n  var result;\n  var i;\n  if(arguments.length < 2) {\n    if(arguments.length == 1 && arguments[0] && arguments[0].isList) {\n      var result = arguments[0][0];\n      for(i = 1; arguments[0][i] != null; i++) {\n        result = ObjectOperators.division(result, arguments[0][i]);\n      }\n      return result;\n    }\n    return null;\n  }\n  if(arguments.length == 2) {\n    if(arguments[0] != null && arguments[0].isList && arguments[1] != null && arguments[1].isList) {\n      return ObjectOperators._applyBinaryOperatorOnLists(arguments[0], arguments[1], ObjectOperators.division);\n    } else if(arguments[0] != null && arguments[0].isList) {\n      //console.log('list versus object');\n      return ObjectOperators._applyBinaryOperatorOnListWithObject(arguments[0], arguments[1], ObjectOperators.division);\n    } else if(arguments[1] != null && arguments[1].isList) {\n      return ObjectOperators._applyBinaryOperatorOnListWithObject(arguments[1], arguments[0], ObjectOperators.division);\n    }\n\n    var a0 = arguments[0];\n    var a1 = arguments[1];\n    var a0Type = typeOf(a0);\n    var a1Type = typeOf(a1);\n\n    if(a1Type < a0Type) {\n      a0 = arguments[1];\n      a1 = arguments[0];\n      a0Type = typeOf(a0);\n      a1Type = typeOf(a1);\n    }\n\n    var pairType = a0Type + \"_\" + a1Type;\n    //console.log('pairType:['+pairType+']');\n    //\n    switch(pairType) {\n      case 'number_number':\n      case 'boolean_boolean':\n      case 'boolean_number':\n      case 'Date_string':\n      case 'number_string':\n      case 'string_string':\n        return a0 / a1; //todo: what to do with strings?\n      case 'Point_Point':\n        return new Point(a0.x / a1.x, a0.y / a1.y);\n      case 'Point3D_Point3D':\n        return new Point3D(a0.x / a1.x, a0.y / a1.y, a0.z / a1.z);\n      case 'number_Point':\n        return new Point(a0.x / a1, a0.y / a1);\n      case 'number_Point3D':\n        return new Point3D(a0.x / a1, a0.y / a1, a0.z / a1);\n      case 'Interval_number':\n        return new Interval(a0.getMin() / a1, a0.getMax() / a1);\n      case 'Interval_Point':\n        return new Point(a0.getMin() / a1.x, a0.getMax() / a1.y);\n      case 'Interval_Interval':\n        return new Point(a0.getMin() + a1.getMin(), a0.getMax() + a1.getMax());\n      case 'Point_Rectangle':\n        return new Rectangle(a0.x / a1.x, a0.y / a1.y, a1.width, a1.height); //todo: no\n      case 'Interval_Rectangle':\n        return new Rectangle(a0.getMin() / a1.x, a0.getMax() / a1.y, a1.width, a1.height); //todo: no\n      case 'Rectangle_Rectangle':\n        return new Rectangle(a0.x / a1.x, a0.y / a1.y, a0.width / a1.width, a0.height / a1.height);\n      case 'date_number':\n        return new Date(a0.getTime() / (a1 / DateOperators.millisecondsToDays));\n      case 'date_date':\n        return new Date(Number(a0.getTime() + a1.getTime())); //todo: ???\n      case 'date_DateInterval':\n        return new DateInterval(ObjectOperators.division(a0, a1.date0), ObjectOperators.division(a0, a1.date1)); //todo: ???\n      case 'DateInterval_number':\n        return new DateInterval(ObjectOperators.division(a0.date0, a1), ObjectOperators.division(a0.date1, a1)); //todo: ???\n      case 'DateInterval_Interval':\n        return new DateInterval(ObjectOperators.division(a0.date0, a1.min), ObjectOperators.division(a0.date1, a1.max)); //todo: ???\n      case 'DateInterval_DateInterval':\n        return new DateInterval(ObjectOperators.division(a0.date0, a1.date0), ObjectOperators.division(a0.date1, a1.date1)); //todo: ???\n      default:\n        console.log(\"[!] division didn't manage to resolve:\", pairType, a0 / a1);\n        return null;\n\n    }\n    return a0 / a1;\n  }\n\n  result = arguments[0];\n  for(i = 1; i < arguments.length; i++) {\n    //console.log(i, 'result:', result);\n    result = ObjectOperators.division(result, arguments[i]);\n  }\n  return result;\n};\n\n\n\n\n\n//removed, added an approach method in NumberList and Polygon\n\n/**\n * modifies and object, making it closer to another (convergent asymptotic vector aka destiny) object, objects need to be vectors\n * @param  {Object} objectToModify object that will be modified\n * @param  {Object} objectDestiny  object guide (convergent asymptotic vector)\n * @param  {Number} speed speed of convergence\n */\n// ObjectOperators.approach = function(objectToModify, objectDestiny, speed){\n// \tvar type = typeOf(objectToModify);\n// \tif(type!=typeOf(objectDestiny)) return null;\n// \tspeed = speed||0.5;\n// \tvar antispeed = 1-speed;\n\n// \tswitch(type){\n// \t\tcase \"NumberList\":\n// \t\t\tobjectToModify.forEach(function(n, i){objectToModify[i] = antispeed*objectToModify[i] + speed*objectDestiny[i];});\n// \t\t\tbreak;\n// \t}\n// }\n\n\n\n\n\nObjectOperators._applyBinaryOperatorOnLists = function(list0, list1, operator) {\n  var n = Math.min(list0.length, list1.length);\n  var i;\n  var resultList = new List();\n  for(i = 0; i < n; i++) {\n    resultList.push(ObjectOperators._applyBinaryOperator(list0[i], list1[i], operator));\n  }\n  return resultList.getImproved();\n};\nObjectOperators._applyBinaryOperatorOnListWithObject = function(list, object, operator) {\n  var i;\n  var resultList = new List();\n  for(i = 0; i < list.length; i++) {\n    resultList.push(ObjectOperators._applyBinaryOperator(list[i], object, operator));\n  }\n  return resultList.getImproved();\n};\nObjectOperators._applyBinaryOperatorOnObjectWithList = function(object, list, operator) {\n  var i;\n  var resultList = new List();\n  for(i = 0; i < list.length; i++) {\n    resultList.push(ObjectOperators._applyBinaryOperator(object, list[i], operator));\n  }\n  return resultList.getImproved();\n};\nObjectOperators._applyBinaryOperator = function(object0, object1, operator) {\n  return operator(object0, object1);\n};","function StringConversions() {}\nexport default StringConversions;\n\n\n\n/**\n * converts a string in json format into an Object (JSON.parse(string))\n * @param  {String} string in format json\n * @return {Object}\n * tags:conversion\n */\nStringConversions.stringToObject = function(string) {\n  try {\n    return JSON.parse(string);\n  } catch(err) {\n    return null;\n  }\n};","import StringList from \"src/dataStructures/strings/StringList\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport TableOperators from \"src/operators/lists/TableOperators\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport NumberListOperators from \"src/operators/numeric/numberList/NumberListOperators\";\nimport Table from \"src/dataStructures/lists/Table\";\n\n\nfunction StringListOperators() {}\nexport default StringListOperators;\n\n/**\n * receives n arguments and performs addition\n */\nStringListOperators.concatStrings = function(stringList, joinString) { //deprecated\n  if(joinString == null) joinString = \"\";\n  return StringList.fromArray(stringList.join(joinString));\n};\n\n/**\n * join strings with a character\n * @param  {StringList} StringList strings to be joined\n *\n * @param  {String} join character\n * @param  {String} prefix\n * @param  {String} sufix\n * @return {String}\n * tags:\n */\nStringListOperators.join = function(stringList, character, prefix, sufix) {\n  if(stringList == null) return;\n\n  character = character == null ? \"\" : character;\n  prefix = prefix == null ? \"\" : prefix;\n  sufix = sufix == null ? \"\" : sufix;\n  return prefix + stringList.join(character) + sufix;\n};\n\n\n/**\n * filters a StringList by a string\n * @param  {StringList} stringList    to be filtered\n * @param  {String} string        filter criteria (string or word that will be search in each string of the stringList)\n *\n * @param  {Boolean} asWord        if true a word (string surrounded by separators such as space or punctuation) will be used as criteria, false by default\n * @param  {Boolean} returnIndexes if true a numberList with indexes will be returned, instead of a stringList\n * @return {List}               stringList or numberlist with filtered strings or indexes\n * tags:filter\n */\nStringListOperators.filterStringListByString = function(stringList, string, asWord, returnIndexes) {\n  var i;\n  var newList = returnIndexes ? new NumberList() : new StringList();\n  if(asWord) var regex = new RegExp(\"\\\\b\" + string + \"\\\\b\");\n\n  for(i = 0; stringList[i] != null; i++) {\n    if(asWord) {\n      if(stringList[i].match(regex).length > 0) {\n        newList.push(returnIndexes ? i : stringList[i]);\n      }\n    } else {\n      if(stringList[i].indexOf(string) != -1) {\n        newList.push(returnIndexes ? i : stringList[i]);\n      }\n    }\n  }\n  return newList;\n};\n\n\n// var regex = new RegExp(\"\\\\b\"+word+\"\\\\b\");\n// var match = string.match(regex);\n// return match==null?0:match.length;\n\n/**\n * a classic function, but now it works with patterns!\n */\nStringListOperators.countStringsOccurrencesOnTexts = function(strings, texts) {\n  var occurrencesTable = new NumberTable();\n\n  var i;\n  var j;\n  var pattern;\n  var numberList;\n  var splitArray;\n\n  for(i = 0; strings[i] != null; i++) {\n    pattern = strings[i];\n    numberList = new NumberList();\n    numberList.name = pattern;\n    for(j = 0; texts[j] != null; j++) {\n      splitArray = texts[j].split(pattern);\n      numberList[j] = splitArray.length - 1;\n    }\n    occurrencesTable[i] = numberList;\n  }\n  return occurrencesTable;\n};\n\n/**\n * builds a table with a list of occurrent words and numberLists for occurrences in each string\n * @param  {StringList} strings\n *\n * @param  {StringList} stopWords words to be excluded from the list\n * @param  {Boolean} includeLinks\n * @param  {Number} wordsLimitPerString number of words extracted per string\n * @param  {Number} totalWordsLimit final number of words\n * @param  {Boolean} normalize normalize lists to sum\n * @param {Boolean} stressUniqueness divide number of occurrences in string by total number of occurrences (words that appear in one or only few texts become more weighed)\n * @param {Boolean} sortByTotalWeight sort all columns by total weights of words\n * @param  {Number} minSizeWords\n * @return {Table}\n * tags:count\n */\nStringListOperators.getWordsOccurrencesMatrix = function(strings, stopWords, includeLinks, wordsLimitPerString, totalWordsLimit, normalize, stressUniqueness, sortByTotalWeight, minSizeWords) {\n  var i;\n\n  wordsLimitPerString = wordsLimitPerString || 500;\n  totalWordsLimit = totalWordsLimit || 1000;\n  normalize = normalize == null ? true : normalize;\n  stressUniqueness = stressUniqueness || false;\n  sortByTotalWeight = (sortByTotalWeight || true);\n  minSizeWords = minSizeWords == null ? 3 : minSizeWords;\n\n  var matrix = StringOperators.getWordsOccurrencesTable(strings[0], stopWords, includeLinks, wordsLimitPerString, minSizeWords);\n\n  var table;\n  for(i = 1; strings[i] != null; i++) {\n    table = StringOperators.getWordsOccurrencesTable(strings[i], stopWords, includeLinks, wordsLimitPerString, minSizeWords);\n    matrix = TableOperators.mergeDataTables(matrix, table);\n  }\n\n\n  if(matrix[0].length > totalWordsLimit) sortByTotalWeight = true;\n\n  if(stressUniqueness || sortByTotalWeight) {\n    var totalList = new NumberList();\n    totalList = matrix[1].clone();\n    matrix.forEach(function(occurrences, i) {\n      if(i < 2) return;\n      occurrences.forEach(function(value, j) {\n        totalList[j] += value;\n      });\n    });\n\n    if(stressUniqueness) {\n      matrix.forEach(function(occurrences, i) {\n        if(i == 0) return;\n        occurrences.forEach(function(value, j) {\n          occurrences[j] = value / totalList[j];\n        });\n      });\n    }\n\n    if(sortByTotalWeight) {\n      matrix = matrix.getListsSortedByList(totalList, false);\n    }\n  }\n\n  if(normalize) {\n    matrix.forEach(function(occurrences, i) {\n      if(i == 0) return;\n      matrix[i] = matrix[i].getNormalizedToSum();\n    });\n  }\n\n\n  if(totalWordsLimit > 0) matrix = matrix.sliceRows(0, totalWordsLimit - 1);\n\n  return matrix;\n};\n\n//good approach for few large texts, to be tested\nStringListOperators.createTextsNetwork = function(texts, stopWords, stressUniqueness, relationThreshold) {\n  var i, j;\n  var network = new Network();\n\n  var matrix = StringListOperators.getWordsOccurrencesMatrix(texts, stopWords, false, 600, 800, false, true, false, 3);\n\n  texts.forEach(function(text, i) {\n    var node = new Node(\"_\" + i, \"_\" + i);\n    node.content = text;\n    node.wordsWeights = matrix[i + 1];\n    network.addNode(node);\n  });\n\n  for(i = 0; network.nodeList[i + 1] != null; i++) {\n    var node = network.nodeList[i];\n    for(j = i + 1; network.nodeList[j] != null; j++) {\n      var node1 = network.nodeList[j];\n\n      var weight = NumberListOperators.cosineSimilarity(node.wordsWeights, node1.wordsWeights);\n\n      if(i == 0 && j == 1) {\n        console.log(node.wordsWeights.length, node1.wordsWeights.length, weight);\n        console.log(node.wordsWeights.type, node.wordsWeights);\n        console.log(node1.wordsWeights.type, node1.wordsWeights);\n        console.log(node.wordsWeights.getNorm() * node1.wordsWeights.getNorm());\n      }\n\n      if(weight > relationThreshold) {\n        var relation = new Relation(node.id + \"_\" + node1.id, node.id + \"_\" + node1.id, node, node1, weight);\n        network.addRelation(relation);\n      }\n    }\n  }\n\n  return network;\n};\n\n\n/**\n * builds a network out of a list of short strings, adds a property wordsTable to each node (with words and weights)\n * @param  {StringList} texts\n *\n * @param  {StringList} stopWords\n * @param  {Number} relationThreshold threshold to create a relation\n * @param {Number} mode <br>0:pseudoentropy, by finding key words with low entropy (words occurring in a single text or in all texts have maximum entropy, occuring in 0.25 texts minimum entropy (max weight))<br>1:originality<br>2:skewed entropy<br>3:originality except isolation\n * @param {Boolean} applyIntensity takes into account occurrences of word into each text\n * @param {Table} [varname] if a words frquency table is provided, les frequent words are weighed\n * @return {Network}\n * tags:generator\n */\nStringListOperators.createShortTextsNetwork = function(texts, stopWords, relationThreshold, mode, applyIntensity, wordsFrequencyTable) {\n  if(texts == null ||  texts.length == null || texts.length == 0) return;\n\n  var _time = new Date().getTime();\n\n  var network = new Network();\n  var joined = texts.join(' *** ').toLowerCase();\n  var textsLowerCase = joined.split(' *** ');\n  var n_texts = texts.length;\n  var i, j;\n  var word;\n  var w;\n  var nWords;\n  var n_words;\n  var weights;\n  var weight;\n  var maxWeight = 0;\n\n  relationThreshold = relationThreshold || 0.2;\n  mode = mode || 0;\n\n  if(wordsFrequencyTable) {\n    wordsFrequencyTable[0] = wordsFrequencyTable[0].toLowerCase();\n    var maxFreq = wordsFrequencyTable[1][0];\n    var index;\n  }\n\n  var weightFunction;\n  switch(mode) {\n    case 0: //pseudo-entropy\n      weightFunction = function(nOtherTexts) {\n        return 1 - Math.pow(2 * nOtherTexts / (n_texts - 1) - 1, 2);\n      };\n      break;\n    case 1: //originality\n      weightFunction = function(nOtherTexts) {\n        return 1 / (nOtherTexts + 1);\n      };\n      break;\n    case 2: //skewed entropy (favoring very few external occurrences)\n      weightFunction = function(nOtherTexts) {\n        return 1 - Math.pow(2 * Math.pow(nOtherTexts / (n_texts - 1), 0.2) - 1, 2);\n      };\n    default: //originality except isolation\n      weightFunction = function(nOtherTexts) {\n        if(nOtherTexts == 0) return 0;\n        return 1 / nOtherTexts;\n      };\n  }\n\n  console.log('A ===> StringListOperators.createShortTextsNetwork took:', new Date().getTime() - _time);\n  _time = new Date().getTime();\n\n  texts.forEach(function(text, i) {\n    var node = new Node(\"_\" + i, \"_\" + i);\n    network.addNode(node);\n    node.content = text;\n    var words = StringOperators.getWords(text, true, stopWords, false, false, 0, 3);\n\n    n_words = words.length;\n    weights = new NumberList();\n    //words.forEach(function(word, j){\n    for(j = 0; words[j] != null; j++) {\n      word = words[j];\n      var nOtherTexts = 0;\n      textsLowerCase.forEach(function(text, k) {\n        if(i == k) return;\n        nOtherTexts += Number(text.indexOf(word) != -1); //is this the fastest way?\n      });\n\n      if(nOtherTexts == 0) {\n        words.splice(j, 1);\n        j--;\n        continue;\n      }\n\n      weights[j] = weightFunction(nOtherTexts); //1-Math.pow(2*Math.pow(nOtherTexts/(n_texts-1), 0.25)-1, 2);\n\n      if(applyIntensity) weights[j] *= (1 - 1 / (StringOperators.countOccurrences(textsLowerCase[i], word) + 1));\n\n      if(wordsFrequencyTable) {\n        index = wordsFrequencyTable[0].indexOf(word);\n        //console.log(' •>•>•>•>•>•>•>•>•>•>•>•>•>•>•>•>•> ', word, weights[j], index==-1?1:(1 - Math.pow(wordsFrequencyTable[1][index]/maxFreq, 0.2)) )\n        weights[j] *= (index == -1 ? 1 : (1 - Math.pow(wordsFrequencyTable[1][index] / maxFreq, 0.2)));\n      }\n\n      maxWeight = Math.max(maxWeight, weights[j]);\n    }\n\n    nWords = Math.floor(Math.log(n_words + 1) * 3);\n\n    words = words.getSortedByList(weights, false).slice(0, nWords);\n\n    words.position = {};\n    words.forEach(function(word, j) {\n      words.position[word] = j;\n    });\n\n    weights = weights.getSorted(false).slice(0, nWords);\n    node.wordsTable = new Table();\n    node.wordsTable[0] = words;\n    node.wordsTable[1] = weights;\n  });\n\n\n  console.log('B ===> StringListOperators.createShortTextsNetwork took:', new Date().getTime() - _time);\n  _time = new Date().getTime();\n\n  for(i = 0; network.nodeList[i + 1] != null; i++) {\n    var node = network.nodeList[i];\n    for(j = i + 1; network.nodeList[j] != null; j++) {\n      var node1 = network.nodeList[j];\n      weight = 0;\n      node.wordsTable[0].forEach(function(word, i) {\n        //index = node1.wordsTable[0].indexOf(word);//TODO:this could be improved (as seen in forums, indexOf might be unneficient for arrays\n        index = node1.wordsTable[0].position[word];\n        if(index != null) weight += node.wordsTable[1][i] * node1.wordsTable[1][index];\n      });\n      weight = Math.sqrt((weight / maxWeight) / Math.max(node.wordsTable[0].length, node1.wordsTable[0].length));\n      if(weight > relationThreshold) {\n        var relation = new Relation(node.id + \"_\" + node1.id, node.id + \"_\" + node1.id, node, node1, weight);\n        network.addRelation(relation);\n      }\n    }\n  }\n\n  console.log('C ===> StringListOperators.createShortTextsNetwork took:', new Date().getTime() - _time);\n\n  return network;\n};","import Node from \"src/dataStructures/structures/elements/Node\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\nimport StringListOperators from \"src/operators/strings/StringListOperators\";\nimport NumberListOperators from \"src/operators/numeric/numberList/NumberListOperators\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport NetworkEncodings from \"src/operators/structures/NetworkEncodings\";\n\n/**\n * @classdesc NetworkGenerators provides a set of tools to generate Network\n * instances from a variety of sources.\n * @namespace\n * @category networks\n */\nfunction NetworkGenerators() {}\nexport default NetworkGenerators;\n\n\n/**\n * Build a random network based on the provided options\n * tags:generator\n * @param {Number} nNodes number of nodes\n * @param {Number} pRelation probability of a relation being created between 2 nodes\n *\n * @param {Number} mode 0:simple random 1:clusterized\n * @param {Boolean} randomRelationsWeights adds a random weigth to relations\n * @return {Network}\n * @example\n * // generate a sparsely connected network with 2000 Nodes\n * network = NetworkGenerators.createRandomNetwork(2000, 0.0006, 1);\n */\nNetworkGenerators.createRandomNetwork = function(nNodes, pRelation, mode, randomRelationsWeights) {\n  if(nNodes == null || pRelation == null) return null;\n\n  mode = mode == null ? 0 : mode;\n\n  var i, j;\n  var network = new Network();\n  var node;\n\n  for(i = 0; i < nNodes; i++) {\n    network.addNode(new Node(\"n\" + i, \"n\" + i));\n  }\n\n  switch(mode) {\n    case 0:\n      for(i = 0; i < nNodes - 1; i++) {\n        node = network.nodeList[i];\n        for(j = i + 1; j < nNodes; j++) {\n          if(Math.random() < pRelation) network.addRelation(new Relation(i + \"_\" + j, i + \"_\" + j, node, network.nodeList[j], randomRelationsWeights ? Math.random() : 1));\n        }\n      }\n      return network;\n    case 1:\n      var nPairs = nNodes * (nNodes - 1) * 0.5;\n      var pending;\n      var maxDegree = 0;\n      var otherNode;\n      var id;\n      for(i = 0; i < nPairs; i++) {\n        if(Math.random() < pRelation) {\n          pending = true;\n          while(pending) {\n            node = network.nodeList[Math.floor(network.nodeList.length * Math.random())];\n            if(Math.random() < (node.nodeList.length + 1) / (maxDegree + 1)) {\n              while(pending) {\n                otherNode = network.nodeList[Math.floor(network.nodeList.length * Math.random())];\n                id = node.id + \"_\" + otherNode.id;\n                if(network.relationList.getNodeById(id) != null || network.relationList.getNodeById(otherNode.id + \"_\" + node.id) != null) continue;\n                if(Math.random() < (otherNode.nodeList.length + 1) / (maxDegree + 1)) {\n                  network.addRelation(new Relation(id, id, node, otherNode, randomRelationsWeights ? Math.random() : 1));\n                  pending = false;\n                }\n              }\n            }\n          }\n        }\n      }\n      return network;\n  }\n\n};\n\n/**\n * @param strings\n * @param texts\n * @param {Number} weightsForRelationsMethod\n * <ul>\n * <li><strong>0</strong>: dotProduct (more efficient)</li>\n * <li><strong>1</strong>: {@link http://en.wikipedia.org/wiki/Cosine_similarity|cosinus similarity}</li>\n *\n */\nNetworkGenerators.createTextsCoOccurrencesNetwork = function(strings, texts, weightsForRelationsMethod, minimum) {\n  var occurrencesTable = StringListOperators.countStringsOccurrencesOnTexts(strings, texts, weightsForRelationsMethod, minimum);\n  return NetworkGenerators.createNetworkFromOccurrencesTable(occurrencesTable);\n};\n\nNetworkGenerators.createNetworkFromOccurrencesTable = function(occurrencesTable, weightsForRelationsMethod, minimum) {\n  weightsForRelationsMethod = weightsForRelationsMethod == null ? 0 : weightsForRelationsMethod;\n  minimum = minimum == null ? 0 : minimum;\n\n  var network = new Network();\n  var i;\n  var j;\n  var string0;\n  var string1;\n  var weight;\n  var node0;\n  var node1;\n  var norm0;\n  var norm1;\n  for(i = 0; occurrencesTable[i] != null; i++) {\n    string0 = occurrencesTable[i].name;\n    if(i == 0) {\n      node0 = new Node(string0, string0);\n      network.addNode(node0);\n    } else {\n      node0 = network.nodeList[i];\n    }\n    norm0 = occurrencesTable[i].getSum();\n    node0.weight = norm0;\n    for(j = i + 1; occurrencesTable[j] != null; j++) {\n      string1 = occurrencesTable[j].name;\n      if(i == 0) {\n        node1 = new Node(string1, string1);\n        network.addNode(node1);\n      } else {\n        node1 = network.nodeList[j];\n      }\n      norm1 = occurrencesTable[j].getSum();\n      node1.weight = norm1;\n\n      switch(weightsForRelationsMethod) {\n        case 0:\n          weight = occurrencesTable[i].dotProduct(occurrencesTable[j]);\n          break;\n        case 1:\n          weight = NumberListOperators.cosinus(occurrencesTable[i], occurrencesTable[j]);\n          break;\n      }\n\n      if(weight > minimum) {\n        network.createRelation(node0, node1, string0 + \"_\" + string1, weight);\n      }\n    }\n  }\n\n  return network;\n};\n\n/**\n * Creates a network using a list and measuring the relation weight with a given method\n * a Relation is created between two nodes if and only if the returned weight is > 0\n * @param {List} list List of objects that define the nodes\n * @param {Function} weightFunction method used to eval each pair of nodes\n * @param {StringList} names optional, names of Nodes\n * @return {Network} a network with number of nodes equal to the length of the List\n */\nNetworkGenerators.createNetworkFromListAndFunction = function(list, weightFunction, names) {\n  var i;\n  var j;\n  var w;\n  var node;\n  var network = new Network();\n\n  for(var i = 0; list[i + 1] != null; i++) {\n    if(i == 0) network.addNode(new Node(\"n_0\", names == null ? \"n_0\" : names[i]));\n    node = network.nodeList[i];\n    for(var j = i + 1; list[j] != null; j++) {\n      if(i == 0) network.addNode(new Node(\"n_\" + j, names == null ? \"n_\" + j : names[j]));\n      w = weightFunction(list[i], list[j]);\n      if(w > 0) {\n        network.addRelation(new Relation(i + \"_\" + j, i + \"_\" + j, node, network.nodeList[j], w));\n      }\n    }\n  }\n\n  return network;\n};\n\n\n/**\n * Builds a network from a text, using previously detected words or noun phrases, and with relations built from co-occurrences in sentences\n * relations contain as description the part of the sentence that ends with the second node name (thus being compatible with NoteWork)\n * @param  {String} text\n * @param  {StringList} nounPhrases words, n-grams or noun phrases\n *\n * @param {String} splitCharacters split blocks by characters defined as string regexp expression (defualt:\"\\.|\\n\"), blocks determine relations\n * @return {Network}\n * tags:\n */\nNetworkGenerators.createNetworkFromTextAndWords = function(text, nounPhrases, splitCharacters) {\n  if(text == null || nounPhrases == null) return null;\n\n  var np;\n  var i;\n\n  splitCharacters = splitCharacters == null ? \"\\\\.|\\\\n\" : splitCharacters;\n\n  var network = new Network();\n\n  nounPhrases = nounPhrases.getWithoutElements(new StringList(\"\", \" \", \"\\n\"));\n\n  nounPhrases.forEach(function(np) {\n    np = NetworkEncodings._simplifyForNoteWork(np);\n    if(np) nounPhrases.push(np);\n  });\n\n  nounPhrases = nounPhrases.getWithoutRepetitions();\n\n  var sentences = text.split(new RegExp(splitCharacters, \"g\"));\n\n  var np1;\n  var sentence;\n  var node, relation;\n  var index, index2;\n  var node0, node1;\n  var regex;\n  var id;\n\n  var mat;\n\n  var nodesInSentence;\n  var maxWeight, maxNode;\n\n  nounPhrases.forEach(function(np) {\n    node = new Node(np, np);\n    network.addNode(node);\n    mat = text.match(NetworkEncodings._regexWordForNoteWork(np));\n    node.weight = mat == null ? 1 : mat.length;\n  });\n\n  sentences.forEach(function(sentence) {\n    sentence = sentence.trim();\n    nodesInSentence = new NodeList();\n    maxWeight = 0;\n    nounPhrases.forEach(function(np) {\n      node0 = network.nodeList.getNodeById(np);\n      regex = NetworkEncodings._regexWordForNoteWork(np);\n      index = sentence.search(regex);\n\n      if(index != -1) {\n        maxNode = node0.weight > maxWeight ? node0 : maxNode;\n        maxWeight = Math.max(node0.weight, maxWeight);\n        if(node0 != maxNode) nodesInSentence.push(node0);\n        // nounPhrases.forEach(function(np1){\n        // \tregex = NetworkEncodings._regexWordForNoteWork(np1);\n        // \tindex2 = sentence.search(regex);\n        // \tif(index2!=-1){\n        // \t\tnode1 = network.nodeList.getNodeById(np1);\n\n        // \t\trelation = network.relationList.getFirstRelationBetweenNodes(node0, node1, false);\n\n        // \t\tif(relation==null){\n        // \t\t\tif(index<index2){\n        // \t\t\t\tid = node0.id+\"_\"+node1.id+\"|\"+sentence;\n        // \t\t\t\trelation = new Relation(id, id, node0, node1);\n        // \t\t\t} else {\n        // \t\t\t\tid = node1.id+\"_\"+node0.id+\"|\"+sentence;\n        // \t\t\t\trelation = new Relation(id, id, node1, node0);\n        // \t\t\t}\n        // \t\t\trelation.content = sentence;//.substr(0, index3+1).trim();\n        // \t\t\trelation.paragraphs = new StringList(relation.content);\n        // \t\t\tnetwork.addRelation(relation);\n        // \t\t} else {\n        // \t\t\trelation.paragraphs.push(sentence);\n        // \t\t}\n        // \t}\n        // });\n      }\n    });\n\n\n    nodesInSentence.forEach(function(node0) {\n      id = maxNode.id + \"_\" + node0.id + \"|\" + sentence;\n      relation = new Relation(id, id, maxNode, node0);\n      relation.content = sentence;\n      network.addRelation(relation);\n    });\n\n\n  });\n\n  //nested NPs (example: \"health\", \"health consequences\")\n  network.nodeList.forEach(function(node0) {\n    regex = NetworkEncodings._regexWordForNoteWork(node0.id);\n    network.nodeList.forEach(function(node1) {\n      if(node0 != node1 && node1.id.search(regex) != -1) {\n        id = node1.id + \"_\" + node0.id + \"|contains \" + node0.id;\n        relation = new Relation(id, id, node1, node0);\n        relation.content = \"contains \" + node0.id;\n        network.addRelation(relation);\n      }\n    });\n  });\n\n  return network;\n};\n","import ListOperators from \"src/operators/lists/ListOperators\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Tree from \"src/dataStructures/structures/networks/Tree\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\nimport NetworkEncodings from \"src/operators/structures/NetworkEncodings\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\n\n/**\n * @classdesc Provides a set of tools that work with Networks.\n *\n * @namespace\n * @category networks\n */\nfunction NetworkOperators() {}\nexport default NetworkOperators;\n\n/**\n * Filters Network in-place to remove Nodes with less then minDegree connections.\n *\n * @param {Network} network Network to filter\n * @param {Number} minDegree The minimum number of Relations a\n * Node must have to remain in the Network.\n * @return {null}\n */\nNetworkOperators.filterNodesByMinDegree = function(network, minDegree) {\n  var i;\n  for(i = 0; network.nodeList[i] != null; i++) {\n    if(network.nodeList[i].nodeList.length < minDegree) {\n      network.removeNode(network.nodeList[i]);\n      i--;\n    }\n  }\n  return null;\n};\n\n\n/**\n *\n * @param {Network} network Network to work on.\n * @param {Node} node0 Source Node.\n * @param {Node} node1 Destination Node\n * @return {Number}\n */\nNetworkOperators.degreeBetweenNodes = function(network, node0, node1) {\n  if(network == null || node0 == null || node1 == null) return null;\n\n  if(node0 == node1) return 0;\n  var nodes = node0.nodeList;\n  var d = 1;\n  var newNodes;\n  var i;\n\n  //while(nodes.indexOf(node1)==-1){//TODO: check if getNodeById is faster\n  while(nodes.getNodeById(node1.id) == null) {\n    newNodes = nodes.clone();\n    for(i = 0; nodes[i] != null; i++) {\n      newNodes = ListOperators.concat(newNodes, nodes[i].nodeList); //TODO: check if obsolete concat + check if a concatIfNew could be useful, specially if overriden in NodeList, with getNodeById\n    }\n    newNodes = newNodes.getWithoutRepetitions();\n    if(nodes.length == newNodes.length) return -1;\n    nodes = newNodes;\n    d++;\n  }\n\n  return d;\n};\n\n/**\n * Returns a NodeList with the Nodes in the Network that are part of the\n * first shortest path found between the two input nodes.\n *\n * @param {Network} network Network to work on.\n * @param {Node} node0 Source Node.\n * @param {Node} node1 Destination Node.\n * @param {Boolean} includeExtremes If true, include node0 and node1 in the returned list.\n * @return {NodeList} Nodes in the shortest path between node0 and node1.\n */\nNetworkOperators.shortestPath = function(network, node0, node1, includeExtremes) {\n  if(network == null || node0 == null || node1 == null) return null;\n\n  var tree = NetworkOperators.spanningTree(network, node0, node1);\n  var path = new NodeList();\n  if(includeExtremes) path.addNode(node1);\n  var node = tree.nodeList.getNodeById(node1.id);\n  if(node == null) return null;\n  while(node.parent.id != node0.id) {\n    path.addNode(node.parent.node);\n    node = node.parent;\n    if(node == null) return null;\n  }\n  if(includeExtremes) path.addNode(node0);\n  return path.getReversed();\n};\n\n\n/**\n * Finds all shortest paths between two nodes.\n *\n * @param  {Network} network Network to work on.\n * @param  {Node} node0 Source Node.\n * @param  {Node} node1 Destination Node.\n *\n * @param  {NodeList} shortPath In case a shortPath has been calculated previously\n * @return {Table} List of paths (NodeLists)\n */\nNetworkOperators.shortestPaths = function(network, node0, node1, shortPath) {\n  if(network == null || node0 == null || node1 == null) return null;\n\n  if(shortPath == null) shortPath = NetworkOperators.shortestPath(network, node0, node1, true);\n\n  var lengthShortestPaths = shortPath.length;\n\n  var allPaths = new Table();\n  var firstPath = new NodeList();\n  var i;\n\n  firstPath.addNode(node0);\n  allPaths.push(firstPath);\n\n\n  var all = NetworkOperators._extendPaths(allPaths, node1, lengthShortestPaths);\n\n  console.log('1. all.length', all.length);\n\n  for(i = 0; all[i] != null; i++) {\n    if(all[i][all[i].length - 1] != node1) {\n      all.splice(i, 1);\n      i--;\n    }\n  }\n\n  console.log('2. all.length', all.length);\n\n  return all;\n};\n\n/**\n * @ignore\n */\nNetworkOperators._extendPaths = function(allPaths, nodeDestiny, maxLength) {\n\n  if(allPaths[0].length >= maxLength) return allPaths;\n\n  var i, j;\n  var next;\n  var node;\n\n  var newPaths = new Table();\n  var path, newPath;\n\n  for(i = 0; allPaths[i] != null; i++) {\n    path = allPaths[i];\n    node = path[path.length - 1];\n    next = node.nodeList.getWithoutRepetitions();\n\n    for(j = 0; next[j] != null; j++) {\n      if(path.getNodeById(next[j].id) == null) {\n        newPath = path.clone();\n        newPath.addNode(next[j]);\n        newPaths.push(newPath);\n      }\n    }\n\n  }\n\n  allPaths = newPaths;\n\n  return NetworkOperators._extendPaths(allPaths, nodeDestiny, maxLength);\n\n};\n\n/**\n * Finds all loops in the network\n *\n * @param  {Network} network\n * @param {Number} minSize minimum size of loops\n * @return {Table} list of nodeLists\n * tags:analytics\n */\nNetworkOperators.loops = function(network, minSize) {\n  if(network == null) return null;\n\n  var i, j, k, loops;\n\n  var allLoops = new Table();\n\n  for(i = 0; network.nodeList[i] != null; i++) {\n    loops = NetworkOperators._getLoopsOnNode(network.nodeList[i]);\n\n    for(k = 0; allLoops[k] != null; k++) {\n      for(j = 0; loops[j] != null; j++) {\n        if(NetworkOperators._sameLoop(loops[j], allLoops[k])) {\n          loops.splice(j, 1);\n          j--;\n        }\n      }\n    }\n    allLoops = allLoops.concat(loops);\n  }\n\n  if(minSize) allLoops = allLoops.getFilteredByPropertyValue(\"length\", minSize, \"greater\");\n\n  allLoops.sort(function(a0, a1) {\n    return a0.length > a1.length ? -1 : 1;\n  });\n\n  allLoops.forEach(function(loop) {\n    console.log(loop.getIds().join('-'));\n  });\n\n  var same = NetworkOperators._sameLoop(allLoops[0], allLoops[1]);\n\n  return allLoops;\n};\nNetworkOperators._sameLoop = function(loop0, loop1) {\n  if(loop0.length != loop1.length) return false;\n  if(loop1.getNodeById(loop0[0].id) == null) return false;\n\n  var i1 = loop1.indexOf(loop0[0]);\n  var l = loop0.length;\n  for(var i = 1; loop0[i] != null; i++) {\n    if(loop0[i] != loop1[(i + i1) % l]) return false;\n  }\n  return true;\n};\n\n/**\n * @ignore\n */\nNetworkOperators._getLoopsOnNode = function(central) {\n  if(central.toNodeList.length == 0 || central.fromNodeList.length == 0) return [];\n\n  var columns = new Table();\n  var nl = new NodeList();\n  var n, i, j;\n  var node;\n\n  nl.addNode(central);\n  columns.push(nl);\n\n  NetworkOperators._loopsColumns(central.toNodeList, 1, columns, 1);\n\n  //purge\n  for(n = 1; columns[n]; n++) {\n    for(i = 1; columns[i] != null; i++) {\n      for(j = 0; columns[i][j] != null; j++) {\n        node = columns[i][j];\n        delete node.onColumn;\n        if(node.toNodeList.length == 0) {\n          columns[i].removeNodeAtIndex(j);\n          j--;\n        }\n      }\n    }\n  }\n\n  /////////////////////\n  //build loops\n  var loops = new Table();\n  var loop;\n  for(i = 1; columns[i] != null; i++) {\n    for(j = 0; columns[i][j] != null; j++) {\n      node = columns[i][j];\n      //if(node.toNodeList.indexOf(central)!=-1){\n      if(node.toNodeList.getNodeById(central.id) != null) {\n        loop = new NodeList(node);\n        loops.push(loop);\n        NetworkOperators._pathsToCentral(columns, i, loop, loops);\n      }\n    }\n  }\n\n  loops.sort(function(a0, a1) {\n    return a0.length > a1.length ? -1 : 1;\n  });\n\n  return loops;\n};\n\n/**\n * @ignore\n */\nNetworkOperators._pathsToCentral = function(columns, iColumn, path, paths) {\n  if(path.finished) return;\n\n  if(iColumn == 0) {\n    path.finished = true;\n    return;\n  }\n\n  var i;\n  var node = path[0];\n  var prevNode;\n  var prevPath;\n  var newPath;\n  var first = true;\n\n  var nodesToCheck = columns[iColumn - 1].clone();\n  nodesToCheck.addNodes(columns[iColumn]);\n\n  var lPrevColumn = columns[iColumn - 1].length;\n\n  for(i = 0; nodesToCheck[i] != null; i++) {\n    prevNode = nodesToCheck[i];\n    //if(node==prevNode || path.indexOf(prevNode)!=-1 || (prevPath!=null && prevPath.indexOf(prevNode)!=-1)) continue;\n    if(node == prevNode || path.getNodeById(prevNode.id) != null || (prevPath != null && prevPath.getNodeById(prevNode.id) != null)) continue;\n\n    //if(prevNode.toNodeList.indexOf(node)!=-1){\n\n    if(prevNode.toNodeList.getNodeById(node.id) != null) {\n      if(first) {\n        prevPath = path.clone();\n\n        path.unshift(prevNode);\n        path.ids[prevNode.id] = prevNode;\n\n        NetworkOperators._pathsToCentral(columns, i < lPrevColumn ? (iColumn - 1) : iColumn, path, paths);\n        first = false;\n      } else {\n        newPath = prevPath.clone();\n\n        paths.push(newPath);\n\n        newPath.unshift(prevNode);\n        newPath.ids[prevNode.id] = prevNode;\n\n        NetworkOperators._pathsToCentral(columns, i < lPrevColumn ? (iColumn - 1) : iColumn, newPath, paths);\n      }\n    }\n  }\n};\n\n/**\n * @ignore\n */\nNetworkOperators._loopsColumns = function(nodeList, iColumn, columns) {\n  if(columns[iColumn] == null) columns[iColumn] = new NodeList();\n  var node, otherNode;\n  var newNodeList = new NodeList();\n  for(var i = 0; nodeList[i] != null; i++) {\n    node = nodeList[i];\n    if(!node.onColumn) {\n      node.onColumn = true;\n      columns[iColumn].addNode(node);\n      newNodeList.addNodes(node.toNodeList);\n    }\n  }\n  newNodeList = newNodeList.getWithoutRepetitions();\n  for(i = 0; newNodeList[i] != null; i++) {\n    if(newNodeList[i].onColumn) {\n      newNodeList.removeNodeAtIndex(i);\n      //newNodeList.ids[newNodeList[i].id] = null;\n      //newNodeList.splice(i, 1);\n      i--;\n    }\n  }\n  if(newNodeList.length > 0) NetworkOperators._loopsColumns(newNodeList, iColumn + 1, columns);\n};\n\n\n\n\n/**\n * Builds a spanning tree of a Node in a Network (not very efficient)\n *\n * @param  {Network} network\n * @param  {Node} node0 Parent of the tree\n * @param  {Node} nodeLimit Optional node in the network to prune the tree\n * @return {Tree}\n * tags:\n */\nNetworkOperators.spanningTree = function(network, node0, nodeLimit) { //TODO: this method is horribly inneficient // add: level limt\n  var tree = new Tree();\n  var parent = new Node(node0.id, node0.name);\n  parent.node = node0;\n  tree.addNodeToTree(parent);\n\n  var nodes = node0.nodeList;\n  var newNodes;\n  var newNode;\n  var nodeInPrevNodes;\n  var i;\n  var id;\n\n  var limitReached = false;\n\n  for(i = 0; nodes[i] != null; i++) {\n    newNode = new Node(nodes[i].id, nodes[i].name);\n    if(newNode.id == parent.id) continue;\n    newNode.node = nodes[i];\n    tree.addNodeToTree(newNode, parent);\n    if(nodeLimit != null && newNode.id == nodeLimit.id) limitReached = true;\n  }\n\n  if(limitReached) return tree;\n\n  var accumulated = nodes.clone();\n  accumulated.addNode(node0);\n\n  while(true) {\n    newNodes = new NodeList(); //nodes.clone();\n    for(i = 0; nodes[i] != null; i++) {\n      newNodes.addNodes(nodes[i].nodeList); //TODO: check if obsolete concat + check if a concatIfNew could be useful, specially if overriden in NodeList, with getNodeById\n    }\n    newNodes = newNodes.getWithoutRepetitions();\n    newNodes.removeElements(accumulated);\n    if(newNodes.length == 0) return tree;\n\n    for(i = 0; newNodes[i] != null; i++) {\n      newNode = new Node(newNodes[i].id, newNodes[i].name);\n      newNode.node = newNodes[i];\n      for(var j = 0; newNodes[i].nodeList[j] != null; j++) {\n        id = newNodes[i].nodeList[j].id;\n        nodeInPrevNodes = nodes.getNodeById(id);\n        if(nodeInPrevNodes != null && newNode.id != id) {\n          tree.addNodeToTree(newNode, tree.nodeList.getNodeById(id));\n          break;\n        }\n      }\n      if(nodeLimit != null && newNode.id == nodeLimit.id) limitReached = true;\n    }\n\n    if(limitReached) limitReached = true;\n\n    nodes = newNodes;\n    accumulated = accumulated.concat(newNodes);\n  }\n\n  return tree;\n};\n\nNetworkOperators.degreesPartition = function(network, node) {\n  //TODO:optionally add a NodeList of not connected Nodes\n  var list0 = new NodeList(node);\n  var nextLevel = nodes = node.nodeList;\n  var nextNodes;\n  var externalLayer;\n  var i;\n  var j;\n  var nodesTable = new Table(list0);\n  var added = nextLevel.length > 0;\n\n  if(added) nodesTable.push(nextLevel);\n\n  var listAccumulated = nextLevel.clone();\n  listAccumulated.push(node);\n\n  while(added) {\n    externalLayer = new NodeList();\n    for(i = 0; nextLevel[i] != null; i++) {\n      nextNodes = nextLevel[i].nodeList;\n      for(j = 0; nextNodes[j] != null; j++) {\n        if(listAccumulated.indexOf(nextNodes[j]) == -1) { //fix this\n          externalLayer.push(nextNodes[j]);\n          listAccumulated.push(nextNodes[j]);\n        }\n      }\n    }\n    added = externalLayer.length > 0;\n    if(added) {\n      nextLevel = externalLayer;\n      nodesTable.push(nextLevel);\n    }\n  }\n\n  return nodesTable;\n};\n\nNetworkOperators.degreesFromNodeToNodes = function(network, node, nodeList) {\n  //TODO: probably very unefficient\n  var table = NetworkOperators.degreesPartition(network, node);\n  var degrees = new NumberList();\n  degrees.max = 0;\n  var j;\n  for(var i = 0; nodeList[i] != null; i++) {\n    if(nodeList[i] == node) {\n      degrees[i] = 0;\n    } else {\n      for(j = 1; table[j] != null; j++) {\n        if(table[j].indexOf(nodeList[i]) != -1) { //use getNodeById\n          degrees[i] = j;\n          degrees.max = Math.max(degrees.max, j);\n          break;\n        }\n      }\n    }\n    if(degrees[i] == null) degrees[i] = -1;\n  }\n  return degrees;\n};\n\n/**\n * Builds a dendrogram from a Network.\n *\n * @param  {Network} network\n * @return {Tree}\n * tags:analysis\n */\nNetworkOperators.buildDendrogram = function(network) {\n  if(network == null) return null;\n\n  //TODO: remove?\n  var t = new Date().getTime();\n\n\n  var tree = new Tree();\n\n  var nodeList = new NodeList();\n\n  var closest;\n  var node0;\n  var node1;\n  var newNode;\n  var relations;\n  var id;\n  var i;\n  var nNodes = network.nodeList.length;\n\n  var pRelationPair = 2 * network.relationList.length / (nNodes * (nNodes - 1));\n\n  for(i = 0; network.nodeList[i] != null; i++) {\n    newNode = new Node(\"[\" + network.nodeList[i].id + \"]\", \"[\" + network.nodeList[i].id + \"]\");\n    newNode.nodes = new NodeList(network.nodeList[i]);\n    tree.addNode(newNode);\n    nodeList[i] = newNode;\n  }\n\n\n  while(nodeList.length > 1) {\n    closest = NetworkOperators._getClosestPair(nodeList, true, pRelationPair);\n\n    node0 = nodeList[closest[0]];\n    node1 = nodeList[closest[1]];\n\n    id = \"[\" + node0.id + \"-\" + node1.id + \"]\";\n\n    newNode = new Node(id, id);\n    newNode.weight = closest.strength;\n\n    tree.addNode(newNode);\n    tree.createRelation(newNode, node0, id + \"-\" + node0.id);\n    tree.createRelation(newNode, node1, id + \"-\" + node1.id);\n\n    newNode.node = new Node(id, id);\n    newNode.nodes = node0.nodes.concat(node1.nodes);\n\n    for(i = 0; node0.nodeList[i] != null; i++) {\n      newNode.node.nodeList.addNode(node0.nodeList[i]);\n      newNode.node.relationList.addRelation(node0.relationList[i]);\n    }\n    for(i = 0; node1.nodeList[i] != null; i++) {\n      newNode.node.nodeList.addNode(node1.nodeList[i]);\n      newNode.node.relationList.addRelation(node1.relationList[i]);\n      //TODO: remove?\n      Network;\n    }\n\n    nodeList.removeElement(node0);\n    nodeList.removeElement(node1);\n    nodeList.addNode(newNode);\n  }\n\n\n  //recalculate levels for nodes here\n  for(i = 0; tree.nodeList[i] != null; i++) {\n    node0 = tree.nodeList[i];\n    if(node0.nodes.length > 1) {\n      node0.level = Math.max(node0.nodeList[0].level, node0.nodeList[1].level) + 1;\n    }\n  }\n\n  return tree;\n};\n\n/**\n * @ignore\n */\nNetworkOperators._getClosestPair = function(nodeList, returnIndexes, pRelationPair) {\n  if(nodeList.length == 2) {\n    var index = nodeList[0].nodeList.indexOf(nodeList[1]);\n    //var index = nodeList[0].nodeList.indexOfElement(nodeList[1]);\n\n    if(returnIndexes) {\n      var indexes = [0, 1];\n      indexes.strength = index == -1 ? 0 : nodeList[0].relationList[index].weight;\n      return indexes;\n    }\n    var nodes = new NodeList(nodeList[0], nodeList[1]);\n    nodes.strength = index == -1 ? 0 : nodeList[0].relationList[index].weight;\n    return nodes;\n  }\n\n  var i;\n  var j;\n\n  var nodeList0;\n\n  var strength;\n  var maxStrength = -1;\n\n  var indexesOtherNode;\n  var indexes;\n\n  for(i = 0; nodeList[i + 1] != null; i++) {\n    nodeList0 = nodeList[i].nodes;\n    for(j = i + 1; nodeList[j] != null; j++) {\n      strength = NetworkOperators._strengthBetweenSets(nodeList0, nodeList[j].nodes, pRelationPair);\n      //c.log('        i,j,strength, nodeList0.length, nodeList[j].nodes.length', i, j, strength, nodeList0.length, nodeList[j].nodes.length);\n      if(strength > maxStrength) {\n        indexes = [i, j];\n        maxStrength = strength;\n        //c.log('    ---> i, j, new maxStrength', i, j, maxStrength);\n      }\n    }\n  }\n  indexes.strength = maxStrength;\n  if(returnIndexes) return indexes;\n  var nodes = new NodeList(nodeList[indexes[0]], nodeList[indexes[1]]);\n  nodes.strength = maxStrength;\n  return nodes;\n\n};\n\n/**\n * @ignore\n */\nNetworkOperators._strengthBetweenSets = function(nodeList0, nodeList1, pRelationPair) {\n  var strength = 0;\n  var i, j;\n  var node0;\n\n  for(i = 0; nodeList0[i] != null; i++) {\n    node0 = nodeList0[i];\n    for(j = 0; node0.nodeList[j] != null; j++) {\n      if(nodeList1.indexOf(node0.nodeList[j]) != -1) {\n        //if(nodeList1.containsElement(node0.nodeList[j])){\n        strength += node0.relationList[j].weight;\n      }\n    }\n  }\n\n  return strength / (nodeList0.length * nodeList1.length * pRelationPair);\n};\n\n\n\n/**\n * Builds a Table of clusters, based on an dendrogram Tree (if not provided it will be calculated), and a weight bias\n * @param  {Network} network\n *\n * @param  {Tree} dendrogramTree Dendrogram Tree, if precalculated, changes in weight bias will perform faster\n * @param  {Number} minWeight Weight bias, criteria to group clusters (0.5 default)\n * @return {Table} List of NodeLists\n * tags:analysis\n */\nNetworkOperators.buildNetworkClusters = function(network, dendrogramTree, minWeight) {\n  if(network == null) return;\n\n  if(dendrogramTree == null) dendrogramTree = NetworkOperators.buildDendrogram(network);\n  minWeight = minWeight || 0.5;\n\n  var clusters = new Table();\n\n  NetworkOperators._iterativeBuildClusters(dendrogramTree.nodeList[dendrogramTree.nodeList.length - 1], clusters, minWeight);\n\n  return clusters;\n};\n\n/**\n * @ignore\n */\nNetworkOperators._iterativeBuildClusters = function(node, clusters, minWeight) {\n  if(node.nodeList.length == 1) {\n    clusters.push(new NodeList(node.node));\n    return;\n  }\n\n  if(node.nodeList[0].nodes.length == 1 || node.nodeList[0].weight > minWeight) {\n    clusters.push(node.nodeList[0].nodes);\n  } else {\n    NetworkOperators._iterativeBuildClusters(node.nodeList[0], clusters, minWeight);\n  }\n\n  if(node.nodeList[1].nodes.length == 1 || node.nodeList[1].weight > minWeight) {\n    clusters.push(node.nodeList[1].nodes);\n  } else {\n    NetworkOperators._iterativeBuildClusters(node.nodeList[1], clusters, minWeight);\n  }\n};\n\n\n\n\n/**\n * Adds PageRank as <strong>fromPageRank</strong> and <strong>toPageRank</strong> properties See {@link http://en.wikipedia.org/wiki/Page_rank|Page Rank} for more details. fromPageRank or toPageRank will be added as propertie to Nodes.\n * I use two different pageranks, since a Network whose relations measure influence would require a pagerank to measure nodes influence into the system.\n *\n * @param {Network} network\n * @param {Boolean} From=true Optional, default:true, to set if the PageRank uses the in-relations or out-relations\n * @param {Boolean} useRelationsWeigh=false Optional, default:false, set to true if relations weight will affect the metric balance, particularly interesting if some weights are negative\n * tags:analytics,transformative\n */\nNetworkOperators.addPageRankToNodes = function(network, from, useRelationsWeight) {\n  //TODO:deploy useRelationsWeight\n  from = from == null ? true : from;\n\n  var n;\n  var i;\n  var j;\n  var d = 0.85; //dumping factor;\n  var N = network.nodeList.length;\n  var base = (1 - d) / N;\n  var propName = from ? \"fromPageRank\" : \"toPageRank\";\n  var node;\n  var otherNode;\n  var nodeList;\n\n  network.minFromPageRank = network.minToPageRank = 99999999;\n  network.maxFromPageRank = network.maxToPageRank = -99999999;\n\n\n  for(i = 0; network.nodeList[i] != null; i++) {\n    node = network.nodeList[i];\n    node[propName] = 1 / N;\n  }\n\n  for(n = 0; n < 300; n++) {\n    for(i = 0; network.nodeList[i] != null; i++) {\n      node = network.nodeList[i];\n\n      nodeList = from ? node.fromNodeList : node.toNodeList;\n      node[propName] = base;\n\n      for(j = 0; nodeList[j] != null; j++) {\n        otherNode = nodeList[j];\n        node[propName] += d * otherNode[propName] / (from ? otherNode.toNodeList.length : otherNode.fromNodeList.length);\n      }\n\n      if(n == 299) {\n        if(from) {\n          network.minFromPageRank = Math.min(network.minFromPageRank, node[propName]);\n          network.maxFromPageRank = Math.max(network.maxFromPageRank, node[propName]);\n        } else {\n          network.minToPageRank = Math.min(network.minToPageRank, node[propName]);\n          network.maxToPageRank = Math.max(network.maxToPageRank, node[propName]);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Builds a fusioned Network from a list of network codes, with nodes with same names coming from different source networks (called hubs) connected\n * @param  {List} noteworksList\n *\n * @param  {Number} hubsDistanceFactor distance between repeated nodes (hubs)\n * @param  {Number} hubsForceWeight strength factor for the relation when using a forces engine\n * @return {Network}\n */\nNetworkOperators.fusionNoteworks = function(noteworksList, hubsDistanceFactor, hubsForceWeight) {\n  var networks = new List();\n\n  noteworksList.forEach(function(map, i) {\n    var subfix = \"map_\" + i + \"_\";\n    var net = NetworkEncodings.decodeNoteWork(map);\n    net = net.clone(net.nodesPropertiesNames, net.relationsPropertiesNames, subfix);\n    net.id = \"map_\" + i;\n    networks.push(net);\n  });\n\n  return NetworkOperators.fusionNetworks(networks, hubsDistanceFactor, hubsForceWeight);\n};\n\n\n/**\n * Builds a fusioned Network, with nodes with same names coming from different source networks (called hubs) connected\n * @param  {List} networks list of networks\n *\n * @param  {Number} hubsDistanceFactor distance between repeated nodes (hubs)\n * @param  {Number} hubsForceWeight strength factor for the relation when using a forces engine\n * @return {Network} fusioned Network\n */\nNetworkOperators.fusionNetworks = function(networks, hubsDistanceFactor, hubsForceWeight) {\n  hubsDistanceFactor = hubsDistanceFactor == null ? 1 : hubsDistanceFactor;\n  hubsForceWeight = hubsForceWeight == null ? 1 : hubsForceWeight;\n\n  var fusionNet = new Network();\n  var newNode;\n  var newRelation;\n  var i, j;\n  var mapsCluster = new Table();\n\n  var colors = ColorListGenerators.createDefaultCategoricalColorList(networks.length).getInterpolated('black', 0.17).getInterpolated('white', 0.55);\n\n  networks.forEach(function(net, i) {\n    mapsCluster[i] = new NodeList();\n\n    net.nodeList.forEach(function(node) {\n\n      newNode = fusionNet.nodeList.getNodeById(node.id);\n\n      if(newNode == null) {\n        newNode = new Node(node.id, node.name);\n        newNode.basicId = node.basicId;\n        newNode.mapId = \"map_\" + i;\n        newNode.mapsIds = [newNode.mapId];\n        newNode.color = colors[i];\n        newNode.nMaps = 1;\n        newNode.weight = node.weight;\n        fusionNet.addNode(newNode);\n        mapsCluster[i].addNode(newNode);\n      } else {\n        newNode.nMaps += 1;\n        newNode.mapsIds.push(\"map_\" + i);\n        newNode.color = 'rgb(200,200,200)';\n      }\n    });\n\n  });\n\n\n\n  networks.forEach(function(net, i) {\n    net.relationList.forEach(function(relation) {\n      newRelation = new Relation(relation.id, relation.name, fusionNet.nodeList.getNodeById(relation.node0.id), fusionNet.nodeList.getNodeById(relation.node1.id));\n      newRelation.color = relation.color;\n      newRelation.content = relation.content;\n      newRelation.description = relation.description;\n      newRelation.weight = relation.weight;\n      fusionNet.addRelation(newRelation);\n    });\n  });\n\n  var node0;\n\n  for(i = 0; fusionNet.nodeList[i] != null; i++) {\n    node0 = fusionNet.nodeList[i];\n    for(j = i + 1; fusionNet.nodeList[j] != null; j++) {\n      if(node0.name == fusionNet.nodeList[j].name) {\n        //newRelation = new Relation(node0.id+'_'+fusionNet.nodeList[j].id, node0.id+'_'+fusionNet.nodeList[j].id, node0, fusionNet.nodeList[j]);\n        newRelation = new Relation(node0.id + '_' + fusionNet.nodeList[j].id, \"same variable\", node0, fusionNet.nodeList[j]);\n        newRelation.color = 'black';\n        newRelation.distanceFactor = hubsDistanceFactor;\n        newRelation.forceWeight = hubsForceWeight;\n        fusionNet.addRelation(newRelation);\n\n        newRelation = new Relation(fusionNet.nodeList[j].id + '_' + node0.id, \"same variable\", fusionNet.nodeList[j], node0);\n        newRelation.color = 'black';\n        newRelation.distanceFactor = hubsDistanceFactor;\n        newRelation.forceWeight = hubsForceWeight;\n        fusionNet.addRelation(newRelation);\n\n        newRelation.node0.nMaps += 1;\n        newRelation.node1.nMaps += 1;\n      }\n    }\n  }\n\n  for(i = 0; fusionNet.nodeList[i] != null; i++) {\n    fusionNet.nodeList[i].hubWeight = Math.sqrt(fusionNet.nodeList[i].nMaps - 1);\n  }\n\n  fusionNet.mapsCluster = mapsCluster;\n\n  return fusionNet;\n};\n","import Tree from \"src/dataStructures/structures/networks/Tree\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\n\nfunction TreeConvertions() {}\nexport default TreeConvertions;\n\n/**\n * convert a table that describes a tree (higher hierarchies in first lists) into a Tree\n * @param {Table} table\n *\n * @param {String} fatherName name of father node\n * @param {Boolean} lastListIsWeights true if last list is a NumberList with weights for leaves\n * @return {Tree}\n * tags:convertion\n */\nTreeConvertions.TableToTree = function(table, fatherName, lastListIsWeights) {\n  if(table == null) return;\n\n  fatherName = fatherName == null ? \"father\" : fatherName;\n\n  var tree = new Tree();\n  var node, parent;\n  var id;\n  var iCol;\n\n  var father = new Node(fatherName, fatherName);\n  tree.addNodeToTree(father, null);\n\n  table.forEach(function(list, i) {\n    table[i].forEach(function(element, j) {\n      id = TreeConvertions.getId(table, i, j);\n      node = tree.nodeList.getNodeById(id);\n      if(node == null) {\n        node = new Node(id, String(element));\n        if(i == 0) {\n          tree.addNodeToTree(node, father);\n        } else {\n          parent = tree.nodeList.getNodeById(TreeConvertions.getId(table, i - 1, j));\n          tree.addNodeToTree(node, parent);\n        }\n      }\n    });\n  });\n\n  tree.assignDescentWeightsToNodes();\n\n  return tree;\n};\nTreeConvertions.getId = function(table, i, j) {\n  var iCol = 1;\n  var id = String(table[0][j]);\n  while(iCol <= i) {\n    id += \"_\" + String(table[iCol][j]);\n    iCol++;\n  }\n  return id;\n};","import Tree from \"src/dataStructures/structures/networks/Tree\";\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\n\nfunction TreeEncodings() {}\nexport default TreeEncodings;\n\n//include(frameworksRoot+\"operators/strings/StringOperators.js\");\n\nTreeEncodings.decodeIdentedTree = function(indexedTree, superiorNodeName, identationCharacter) {\n  superiorNodeName = superiorNodeName == null ? \"\" : superiorNodeName;\n  identationCharacter = identationCharacter == null ? \"\\t\" : identationCharacter;\n\n  var tree = new Tree();\n\n  var lines = StringOperators.splitByEnter(indexedTree);\n  var nLines = lines.length;\n\n  if(nLines == 0 ||  (nLines == 1 && (lines[0] == null || lines[0] == \"\"))) return null;\n\n  var i;\n  var j;\n\n  var line;\n  var lineLength;\n  var name;\n  var level;\n\n  var node;\n  var parent;\n\n  if(superiorNodeName != \"\" && superiorNodeName != null) {\n    var superiorNode = new Node(superiorNodeName, superiorNodeName);\n    tree.addNodeToTree(superiorNode, null);\n  }\n\n  for(i = 0; i < nLines; i++) {\n    line = lines[i];\n    lineLength = line.length;\n    //c.log('line:'+line);\n    for(j = 0; j < lineLength; j++) {\n      if(line.charAt(j) != identationCharacter) {\n        name = line.substr(j);\n        break;\n      }\n    }\n\n    node = new Node(line, name);\n    //c.log(\"+ \", name);\n    if(j == 0) {\n      if(superiorNode != null) {\n        tree.addNodeToTree(node, superiorNode);\n      } else {\n        tree.addNodeToTree(node, null);\n      }\n    } else {\n      level = j + 1 - Number(superiorNode == null);\n      if(tree.getNodesByLevel(level - 1) != null && tree.getNodesByLevel(level - 1).length > 0) {\n        parent = tree.getNodesByLevel(level - 1)[tree.getNodesByLevel(level - 1).length - 1];\n      } else {\n        parent = null;\n      }\n      //c.log(\"   \", node.name, \"---------->>\", parent.name);\n      tree.addNodeToTree(node, parent);\n    }\n  }\n\n  tree.assignDescentWeightsToNodes();\n\n  return tree;\n};","import { cW, cH } from 'src/Global';\n\nfunction CanvasAndContext() {}\nexport default CanvasAndContext;\n\nCanvasAndContext.createInvisibleContext = function(width, height) {\n  width = width || cW;\n  height = height || cH;\n\n  var tempCanvas = document.createElement('canvas');\n  tempCanvas.width = cW;\n  tempCanvas.height = cH;\n  return tempCanvas.getContext('2d');\n};","import ColorListOperators from \"src/operators/graphic/ColorListOperators\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport ColorScale from \"src/dataStructures/graphic/ColorScale\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\n\n/*\n * DrawSimpleVis\n *\n * This class contains methods that draw simple visualizations such as lines, barChart…\n * It's main aim is to allow a first glance on a structure\n * The challenge is to create at least one method for each structure\n *\n * in the future a 'detect element hovered' might be deployed\n *\n * Once this class becomes big and complex enough, a new 'big folder' will be created ('visGraphication'?) with the conventional structure: dates, geometry, graphic, lists, numeric, strings, structures…\n * and with classes named NumberTableGraph… os similar\n *\n *\n * ////////>>>>>>>> [!] METHODS ARE BEING REMOVED FROM HERE TO BE PLACE ON THEIR CORRECT CLASSES\n * @constructor\n */\n\nfunction DrawSimpleVis() {}\nexport default DrawSimpleVis;\n\nDrawSimpleVis.drawSimpleBarChart = function(context, numberList, frame, colors) { //TODO: complete cases (numberLists with negative (and positive) values)\n  colors = colors == null ? ColorListOperators.colorListFromColorScale(new ColorScale()) : colors;\n  frame = frame == null ? new Rectangle(10, 10, 400, 300) : frame;\n\n  var dX = frame.width / numberList.length;\n\n  var bottom = frame.getBottom();\n  var normalizedNumberList = numberList.getNormalizedToMax(frame.height);\n\n  var i;\n  for(i = 0; numberList[i] != null; i++) {\n    context.fillStyle = colors[i];\n    context.fillRect(frame.x + i * dX, bottom - normalizedNumberList[i], dX - 1, normalizedNumberList[i]);\n  }\n};\n\n\n\nDrawSimpleVis.drawIntervalsFlowTable = function(context, intervalsFlowTable, frame, colors, bezier) {\n  console.log(\"[!] MOVED TO IntervalTableDraw.js\");\n  // var nElements = intervalsFlowTable.length;\n  // var i;\n  // var j;\n  //\n  // colors = colors==null?ColorListOperators.colorListFromColorScale(new ColorScale(ColorOperators.temperatureScale), nElements):colors;\n  // frame = frame==null?new Rectangle(10, 10, 400, 300):frame;\n  // bezier = bezier||false;\n  //\n  // var nCols = intervalsFlowTable[0].length;\n  // var dX = frame.width/(nCols-1);\n  // var dY = frame.height;\n  //\n  // var point;\n  //\n  // var intervalList;\n  // var lastIntervalList = intervalsFlowTable[nElements-1];\n  // var sY = 0;\n  // var mY = 0;\n  // var x = frame.x;\n  // var y = frame.y;\n  //\n  // var prevPoint;\n  // var prevYsup;\n  // var prevsY;\n  // var newYsup;\n  //\n  // var offX;// = dX*0.45;\n  //\n  // for(i=0; intervalsFlowTable[i]!=null; i++){\n  // intervalList = intervalsFlowTable[i];\n  //\n  // context.fillStyle = colors[i];\n  // context.beginPath();\n  //\n  // //---->\n  // sY = (1-lastIntervalList[0].y)*0.5*dY+i*mY+y;\n  //\n  // point = new Point(x, intervalList[0].y*dY+sY);\n  // context.moveTo(point.x, point.y);\n  //\n  // prevPoint = point;\n  //\n  // for(j=1;j<nCols;j++){\n  // sY = (1-lastIntervalList[j].y)*0.5*dY+i*mY+y;\n  //\n  // point = new Point(j*dX+x, intervalList[j].y*dY+sY);\n  //\n  // if(bezier){\n  // offX = (point.x-prevPoint.x)*0.45;\n  // context.bezierCurveTo(prevPoint.x+offX, prevPoint.y, point.x-offX, point.y, point.x, point.y);\n  // } else {\n  // context.lineTo(point.x, point.y);\n  // }\n  //\n  // prevPoint = point;\n  // }\n  //\n  // //<-----\n  // point = new Point((nCols-1)*dX+x, intervalList[nCols-1].x*dY+sY);\n  // context.lineTo(point.x, point.y);\n  // prevPoint = point;\n  //\n  // for(j=nCols-2;j>=0;j--){\n  // sY = (1-lastIntervalList[j].y)*0.5*dY+i*mY+y;\n  //\n  // point = new Point(j*dX+x, intervalList[j].x*dY+sY);\n  //\n  //\n  // if(bezier){\n  // offX = (point.x-prevPoint.x)*0.45;\n  // context.bezierCurveTo(prevPoint.x+offX, prevPoint.y, point.x-offX, point.y, point.x, point.y);\n  // } else {\n  // context.lineTo(point.x, point.y);\n  // }\n  //\n  // prevPoint = point;\n  // }\n  //\n  // point = new Point(x, intervalList[0].x*dY+sY);\n  // context.lineTo(point.x, point.y);\n  //\n  // context.fill();\n  //\n  // }\n};\n\n\n\nDrawSimpleVis.drawIntervalsWordsFlowTable = function(context, intervalsFlowTable, frame, texts, colors) {\n  console.log(\"[!] MOVED TO IntervalTableDraw.js\");\n  // var nElements = intervalsFlowTable.length;\n  //\n  // var i;\n  // var j;\n  //\n  // colors = colors==null?ColorListOperators.colorListFromColorScale(new ColorScale(ColorOperators.temperatureScale), nElements):colors;\n  // frame = frame==null?new Rectangle(10, 10, 400, 300):frame;\n  //\n  // var nCols = intervalsFlowTable[0].length;\n  // var dX = frame.width/(nCols-1);\n  // var dY = frame.height;\n  //\n  // var point0;\n  // var point1;\n  //\n  // var nextPoint0;\n  // var nextPoint1;\n  //\n  // var point0Prev = new Point();\n  // var point1Prev = new Point();\n  //\n  // var center;\n  // var size;\n  //\n  // var intervalList;\n  // var lastIntervalList = intervalsFlowTable[nElements-1];\n  // var sY = 0;\n  // var x = frame.x;\n  // var y = frame.y;\n  //\n  // var offX;\n  //\n  // var text;\n  //\n  // context.strokeStyle = \"rgba(255,255,255,0.4)\";\n  //\n  // context.textBaseline = \"top\";\n  // context.textAlign = \"left\";\n  //\n  // var position;\n  // var xx;\n  // var t;\n  // var jumpX = dX;\n  // //var lastT=0;\n  // var valueLastInterval;\n  // var valueX;\n  // var valueY;\n  // var nChar;\n  // var selectedChar;\n  // var charWidth;\n  // var fontSize;\n  //\n  // var offX;\n  //\n  // var factX = (nCols-1)/frame.width;\n  //\n  // var xj0;\n  // var xj1;\n  //\n  //\n  // for(i=0; intervalsFlowTable[i]!=null; i++){\n  // intervalList = intervalsFlowTable[i];\n  //\n  // text = \" \"+texts[i];\n  //\n  // xx=0;\n  // nChar=0;\n  //\n  // position=0;\n  // j=0;\n  // t=0;\n  //\n  // //console.log(\"-\");\n  //\n  // sY = (1-lastIntervalList[0].y)*0.5*dY+y;\n  // point0 = new Point(x, intervalList[0].x*dY+sY);\n  // point1 = new Point(x, intervalList[0].y*dY+sY);\n  //\n  // do {\n  // nChar++;\n  // size = (point1.y-point0.y);\n  // fontSize = Math.floor(0.3*size+1);\n  // context.font         =  fontSize+'px Arial';\n  // selectedChar = text.charAt(nChar%text.length);\n  // charWidth = context.measureText(selectedChar).width+2;\n  // jumpX = charWidth*0.9;\n  //\n  // xx+=jumpX;\n  // position = factX*xx;\n  // j = Math.floor(position);\n  // t = position - j;\n  //\n  //\n  // if(j+2>nCols) continue;\n  //\n  // //valueLastInterval = (1-t)*lastIntervalList[j].y + t*lastIntervalList[j+1].y;\n  //\n  // xj0 = j/factX;\n  // xj1 = (j+1)/factX;\n  //\n  // offX = factX*0.45;\n  // valueLastInterval = DrawSimpleVis._bezierValue(xj0, xj1, lastIntervalList[j].y, lastIntervalList[j+1].y, t, offX);\n  //\n  //\n  // prevsY = sY;\n  // sY = (1-valueLastInterval)*0.5*dY+y;\n  //\n  //\n  // point0Prev.x = point0.x;\n  // point0Prev.y = point0.y;\n  // point1Prev.x = point1.x;\n  // point1Prev.y = point1.y;\n  //\n  //\n  // //valueX = (1-t)*intervalList[j].x + t*intervalList[j+1].x;\n  // //valueY = (1-t)*intervalList[j].y + t*intervalList[j+1].y;\n  //\n  // valueX = DrawSimpleVis._bezierValue(xj0, xj1, intervalList[j].x, intervalList[j+1].x, t, offX);\n  // valueY = DrawSimpleVis._bezierValue(xj0, xj1, intervalList[j].y, intervalList[j+1].y, t, offX);\n  //\n  //\n  // point0 = new Point(xx+x, valueX*dY+sY);\n  // point1 = new Point(xx+x, valueY*dY+sY);\n  //\n  //\n  // center = new Point(point0Prev.x+jumpX*0.5, (point0.y+point1.y+point0Prev.y+point1Prev.y)*0.25);\n  //\n  // //console.log(jumpX);\n  //\n  // context.fillStyle = colors[i];\n  // //context.beginPath();\n  //\n  // //boundaries\n  // // context.beginPath();\n  // // context.moveTo(point0Prev.x, point0Prev.y);\n  // // context.lineTo(point0.x, point0.y);\n  // // context.lineTo(point1.x, point1.y); //move/line to draw or not vertical\n  // // context.lineTo(point1Prev.x, point1Prev.y);\n  // // context.stroke();\n  //\n  //\n  // if(size>1){\n  // //context.fillText(selectedChar,center.x, center.y);\n  // context.save();\n  // context.globalAlpha = size/20;\n  // DrawTextsAdvanced.textOnQuadrilater(selectedChar, point0Prev, point0, point1, point1Prev, fontSize, 1);\n  // context.restore();\n  // }\n  // } while(j+1<nCols);\n  // }\n};\n\n// DrawSimpleVis._bezierValue = function(x0, x1, y0, y1, t, offX){\n// //return y0*(1-t)+y1*t;\n// var u = 1-t;\n// var p0 = new Point(x0+ t*offX, y0);\n// var p1 = new Point(u*(x0+offX) + t*(x1-offX), u*y0 + t*y1);\n// var p2 = new Point(x1-u*offX, y1);\n//\n// var P0 = new Point(u*p0.x + t*p1.x, u*p0.y + t*p1.y);\n// var P1 = new Point(u*p1.x + t*p2.x, u*p1.y + t*p2.y);\n//\n// return u*P0.y + t*P1.y;\n// }\n\n\nDrawSimpleVis.drawStackBarsFlowTable = function(context, intervalsFlowTable, frame, colors) { //TODO: +efficiency\n  var nElements = intervalsFlowTable.length;\n\n  var i;\n  var j;\n\n  colors = colors == null ? ColorListOperators.colorListFromColorScale(new ColorScale(ColorOperators.temperatureScale), nElements) : colors;\n  frame = frame == null ? new Rectangle(10, 10, 400, 300) : frame;\n\n  var nCols = intervalsFlowTable[0].length;\n  var dX = frame.width / (nCols - 1);\n  var dY = frame.height;\n\n  var point0;\n  var point1;\n  var point2;\n  var point3;\n\n  var intervalList;\n  var lastIntervalList = intervalsFlowTable[nElements - 1];\n  var sY = 0;\n  var mY = 0;\n  var x = frame.x;\n  var y = frame.y;\n\n  var prevPoint;\n  var prevYsup;\n  var prevsY;\n  var newYsup;\n\n  var offX;\n\n  var toolTipText;\n\n  context.strokeStyle = \"white\";\n\n  for(i = 0; intervalsFlowTable[i] != null; i++) {\n    intervalList = intervalsFlowTable[i];\n\n    //---->\n    sY = (1 - lastIntervalList[0].y) * 0.5 * dY + i * mY + y;\n\n    for(j = 1; j < nCols; j++) {\n      sY = (1 - lastIntervalList[j].y) * 0.5 * dY + i * mY + y;\n\n      point0 = new Point(j * dX + x, intervalList[j].x * dY + sY);\n      point1 = new Point((j + 1) * dX + x, intervalList[j].x * dY + sY);\n      point2 = new Point((j + 1) * dX + x, intervalList[j].y * dY + sY);\n      point3 = new Point(j * dX + x, intervalList[j].y * dY + sY);\n\n      context.fillStyle = colors[i];\n      context.beginPath();\n      context.moveTo(point0.x, point0.y);\n      context.lineTo(point1.x, point1.y);\n      context.lineTo(point2.x, point2.y);\n      context.lineTo(point3.x, point3.y);\n      context.lineTo(point0.x, point0.y);\n      context.fill();\n    }\n    context.fill();\n  }\n};\n\n// DrawSimpleVis.drawNetworMatrix = function(network, frame, colors, relationsColorScaleFunction, margin, directed){\n// relationsColorScaleFunction = relationsColorScaleFunction==null?ColorOperators.grayScale:relationsColorScaleFunction;\n// margin = margin==null?2:margin;\n// directed = directed==null?false:directed;\n//\n// var i;\n// var nodeList = network.nodeList;\n// var relationList = network.relationList;\n// var relation;\n//\n// var dX = frame.width/(nodeList.length+1);\n// var dY = frame.height/(nodeList.length+1);\n// var w=dX-margin;\n// var h=dY-margin;\n//\n// var ix;\n// var iy;\n//\n// for(i=0;nodeList[i]!=null;i++){\n// context.fillStyle = colors[i];\n// context.fillRect(frame.x+(i+1)*dX, frame.y, w, h);\n// context.fillRect(frame.x, frame.y+(i+1)*dY, w, h);\n// }\n//\n// for(i=0;relationList[i]!=null;i++){\n// relation = relationList[i];\n// context.fillStyle = relationsColorScaleFunction(relation.weight);\n// ix = nodeList.indexOf(relation.node0)+1;\n// iy = nodeList.indexOf(relation.node1)+1;\n// context.fillRect(frame.x+ix*dX, frame.y+iy*dY, w, h);\n// if(!directed && (ix!=iy)){\n// context.fillRect(frame.x+iy*dX, frame.y+ix*dY, w, h);\n// }\n// }\n// }\n","import { context, TwoPi, mX, mY, mP, canvas } from 'src/Global';\nimport Polygon from 'src/dataStructures/geometry/Polygon';\nimport Point from 'src/dataStructures/geometry/Point';\nimport GeometryOperators from 'src/operators/geometry/GeometryOperators';\n\n/**\n * @module SimpleGraphics\n *\n * @classdesc Graphic and text methods globally accesible\n * that work with context.\n */\n\n\n//drawing\n\n/**\n * Draws a filled in Rectangle.\n * Fill color is expected to be set using {@link setFill}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @example\n * setFill('steelblue');\n * fRect(10, 10, 40, 40);\n *\n */\nexport function fRect(x, y, width, height) {\n  if(typeof x != 'number') {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  context.fillRect(x, y, width, height);\n};\n\n/**\n * Draws a stroked Rectangle - showing just an outline.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @example\n * setStroke('orange');\n * sRect(10, 10, 40, 40);\n *\n */\nexport function sRect(x, y, width, height) {\n  if(typeof x != 'number') {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draws a filled and stroked Rectangle.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @example\n * setFill('steelblue');\n * setStroke('orange');\n * fsRect(10, 10, 40, 40);\n *\n */\nexport function fsRect(x, y, width, height) {\n  if(typeof x != 'number') {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  context.fillRect(x, y, width, height);\n  context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draws a filled in Circle.\n * Fill color is expected to be set using {@link setFill}.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @example\n * setFill('steelblue');\n * fCircle(40, 40, 20);\n *\n */\nexport function fCircle(x, y, r) {\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.fill();\n};\n\n/**\n * Draws a stroked Circle.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @example\n * setStroke('orange');\n * sCircle(40, 40, 20);\n *\n */\nexport function sCircle(x, y, r) {\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.stroke();\n};\n\n/**\n * Draws a filled and stroked Circle.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @example\n * setStroke('steelblue');\n * sCircle(40, 40, 20);\n *\n */\nexport function fsCircle(x, y, r) {\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.fill();\n  context.stroke();\n};\n\n/**\n * Draws a filled in Ellipse.\n * Fill color is expected to be set using {@link setFill}.\n *\n * @param {Number} x X position of center of the Ellipse.\n * @param {Number} y Y position of center of the Ellipse.\n * @param {Number} rW Radial width of the Ellipse.\n * @param {Number} rH Radial height of the Ellipse.\n * @example\n * setFill('steelblue');\n * fEllipse(40, 40, 20, 30);\n */\nexport function fEllipse(x, y, rW, rH) {\n  var k = 0.5522848, // 4 * ((√(2) - 1) / 3)\n    ox = rW * k, // control point offset horizontal\n    oy = rH * k, // control point offset vertical\n    xe = x + rW, // x-end\n    ye = y + rH; // y-end\n  context.beginPath();\n  context.moveTo(x - rW, y);\n  context.bezierCurveTo(x - rW, y - oy, x - ox, y - rH, x, y - rH);\n  context.bezierCurveTo(x + ox, y - rH, xe, y - oy, xe, y);\n  context.bezierCurveTo(xe, y + oy, x + ox, ye, x, ye);\n  context.bezierCurveTo(x - ox, ye, x - rW, y + oy, x - rW, y);\n  context.moveTo(x - rW, y);\n  context.closePath();\n  context.fill();\n};\n\n/**\n * Draws a stroked Ellipse.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of center of the Ellipse.\n * @param {Number} y Y position of center of the Ellipse.\n * @param {Number} rW Radial width of the Ellipse.\n * @param {Number} rH Radial height of the Ellipse.\n * @example\n * setStroke('orange');\n * sEllipse(40, 40, 20, 30);\n */\nexport function sEllipse(x, y, rW, rH) {\n  var k = 0.5522848,\n    ox = rW * k,\n    oy = rH * k,\n    xe = x + rW,\n    ye = y + rH;\n  context.beginPath();\n  context.moveTo(x - rW, y);\n  context.bezierCurveTo(x - rW, y - oy, x - ox, y - rH, x, y - rH);\n  context.bezierCurveTo(x + ox, y - rH, xe, y - oy, xe, y);\n  context.bezierCurveTo(xe, y + oy, x + ox, ye, x, ye);\n  context.bezierCurveTo(x - ox, ye, x - rW, y + oy, x - rW, y);\n  context.moveTo(x - rW, y);\n  context.closePath();\n  context.stroke();\n};\n\n/**\n * Draws a filled and stroked Ellipse.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of center of the Ellipse.\n * @param {Number} y Y position of center of the Ellipse.\n * @param {Number} rW Radial width of the Ellipse.\n * @param {Number} rH Radial height of the Ellipse.\n * @example\n * setFill('steelblue');\n * setStroke('steelblue');\n * fsEllipse(40, 40, 20, 30);\n */\nexport function fsEllipse(x, y, rW, rH) {\n  var k = 0.5522848,\n    ox = rW * k,\n    oy = rH * k,\n    xe = x + rW,\n    ye = y + rH;\n  context.beginPath();\n  context.moveTo(x - rW, y);\n  context.bezierCurveTo(x - rW, y - oy, x - ox, y - rH, x, y - rH);\n  context.bezierCurveTo(x + ox, y - rH, xe, y - oy, xe, y);\n  context.bezierCurveTo(xe, y + oy, x + ox, ye, x, ye);\n  context.bezierCurveTo(x - ox, ye, x - rW, y + oy, x - rW, y);\n  context.moveTo(x - rW, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n\n/**\n * Draws a line from a start position to an end position\n *\n * @param {Number} x0 Starting x position.\n * @param {Number} y0 Starting y position.\n * @param {Number} x1 Ending x position.\n * @param {Number} y1 Ending y position.\n * @example\n * setStroke('black');\n * line(0, 0, 40, 40);\n */\nexport function line(x0, y0, x1, y1) {\n  context.beginPath();\n  context.moveTo(x0, y0);\n  context.lineTo(x1, y1);\n  context.stroke();\n};\n\n/**\n * Draws a bezier curve using {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo|bezierCurveTo}\n *\n * @param {Number} x0 Starting x position.\n * @param {Number} y0 Starting y position.\n * @param {Number} cx0 First curve control point x position.\n * @param {Number} cy0 First cure control point y position.\n * @param {Number} cx1 Second curve control point x position.\n * @param {Number} cy1 Second cure control point y position.\n * @param {Number} x1 Ending x position.\n * @param {Number} y1 Ending y position.\n * @example\n * setStroke('black');\n * bezier(10, 10, 10, 0, 40, 0, 40, 10);\n */\nexport function bezier(x0, y0, cx0, cy0, cx1, cy1, x1, y1) {\n  context.beginPath();\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(cx0, cy0, cx1, cy1, x1, y1);\n  context.stroke();\n};\n\n\n/**\n * @ignore\n */\nfunction _lines() {\n  if(arguments == null) return;\n\n  var args = arguments[0];\n  context.beginPath();\n  context.moveTo(args[0], args[1]);\n  for(var i = 2; args[i + 1] != null; i += 2) {\n    context.lineTo(args[i], args[i + 1]);\n  }\n};\n\n/**\n * @ignore\n */\nfunction _linesM() {\n  if(arguments == null) return;\n\n  var args = arguments[0];\n  var p = new Polygon();\n  context.beginPath();\n  context.moveTo(args[0], args[1]);\n  p[0] = new Point(args[0], args[1]);\n  for(var i = 2; args[i + 1] != null; i += 2) {\n    context.lineTo(args[i], args[i + 1]);\n    p.push(new Point(args[i], args[i + 1]));\n  }\n  return p.containsPoint(mP);\n};\n\n/**\n * Draws a filled polygon using a series of\n * x/y positions.\n *\n * @param {...Number} positions x and y positions for the Polygon\n * @example\n * // This draws a filled triangle\n * // Inputs are pairs of x/y positions.\n * setFill('steelblue').\n * fLines(10, 10, 40, 10, 40, 40);\n *\n */\nexport function fLines() {\n  _lines(arguments);\n  context.fill();\n};\n\n/**\n * Draws a set of line segments using a series of\n * x/y positions as input.\n *\n * @param {...Number} positions x and y positions for the Lines\n * @example\n * // This draws the outline of a triangle.\n * // Inputs are pairs of x/y positions.\n * setStroke('orange');\n * sLines(10, 10, 40, 10, 40, 40, 10, 10);\n *\n */\nexport function sLines() {\n  _lines(arguments);\n  context.stroke();\n};\n\n/**\n * Draws a filled set of line segments using a series of\n * x/y positions as input.\n *\n * @param {...Number} positions x and y positions for the Lines\n * @example\n * // This draws a filled and outlined triangle.\n * // Inputs are pairs of x/y positions.\n * setFill('steelblue');\n * setStroke('orange');\n * fsLines(10, 10, 40, 10, 40, 40, 10, 10);\n *\n */\nexport function fsLines() {\n  _lines(arguments);\n  context.fill();\n  context.stroke();\n};\n\n/**\n * Draws a mouse-enabled filled set of line segments using a series of\n * x/y positions as input. Returns true if moused over on current\n * cycle iteration.\n *\n * @param {...Number} positions x and y positions for the Lines\n * @returns {Boolean} if true, mouse is currently hovering over lines.\n * @example\n * // Turns Fill Red if moused over\n * setFill('steelblue');\n * setStroke('orange');\n * var on = fsLinesM(10, 10, 40, 10, 40, 40, 10, 10);\n * if(on) {\n *   setFill('red');\n *   fsLines(10, 10, 40, 10, 40, 40, 10, 10);\n * }\n *\n */\nexport function fsLinesM() {\n  var mouseOn = _linesM(arguments);\n  context.fill();\n  context.stroke();\n  return mouseOn;\n};\n\n/**\n * @ignore\n */\nfunction _polygon(polygon) {\n  context.beginPath();\n  context.moveTo(polygon[0].x, polygon[0].y);\n  for(var i = 1; polygon[i] != null; i++) {\n    context.lineTo(polygon[i].x, polygon[i].y);\n  }\n};\n\nexport function fPolygon(polygon) {\n  _polygon(polygon);\n  context.fill();\n};\n\nexport function sPolygon(polygon, closePath) {\n  _polygon(polygon);\n  if(closePath) context.closePath();\n  context.stroke();\n};\n\nexport function fsPolygon(polygon, closePath) {\n  _polygon(polygon);\n  if(closePath) context.closePath();\n  context.fill();\n  context.stroke();\n};\n\nexport function fEqTriangle(x, y, angle, r) {\n  _eqTriangle(x, y, angle, r);\n  context.fill();\n};\n\nexport function sEqTriangle(x, y, angle, r) {\n  _eqTriangle(x, y, angle, r);\n  context.stroke();\n};\n\nexport function fsEqTriangle(x, y, angle, r) {\n  _eqTriangle(x, y, angle, r);\n  context.fill();\n  context.stroke();\n};\n\nfunction _eqTriangle(x, y, angle, r) {\n  context.beginPath();\n  angle = angle || 0;\n  context.moveTo(r * Math.cos(angle) + x, r * Math.sin(angle) + y);\n  context.lineTo(r * Math.cos(angle + 2.0944) + x, r * Math.sin(angle + 2.0944) + y);\n  context.lineTo(r * Math.cos(angle + 4.1888) + x, r * Math.sin(angle + 4.1888) + y);\n  context.lineTo(r * Math.cos(angle) + x, r * Math.sin(angle) + y);\n};\n\n\n//drawing and checking cursor\n\n/**\n * Draws a mouse-enabled filled in Rectangle.\n * Fill color is expected to be set using {@link setFill}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @param {Number} margin Parameter around rectangle to count towards mouse over.\n * @return {Boolean} Returns true if the mouse is over the rectangle on the current\n * iteration of the cycle function.\n * @example\n * setFill('steelblue');\n * var on = fRectM(10, 10, 40, 40);\n * if(on) {\n *   setFill('red');\n *   fRect(10, 10, 40, 40);\n * }\n */\nexport function fRectM(x, y, width, height, margin) {\n  margin = margin == null ? 0 : margin;\n  context.fillRect(x, y, width, height);\n  return mY > y - margin && mY < y + height + margin && mX > x - margin && mX < x + width + margin;\n};\n\n/**\n * Draws a mouse-enabled stroked Rectangle.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @param {Number} margin Parameter around rectangle to count towards mouse over.\n * @return {Boolean} Returns true if the mouse is over the rectangle on the current\n * iteration of the cycle function.\n * @example\n * setStroke('orange');\n * var on = sRectM(10, 10, 40, 40);\n * if(on) {\n *   setStroke('black');\n *   sRect(10, 10, 40, 40);\n * }\n */\nexport function sRectM(x, y, width, height, margin) {\n  margin = margin == null ? 0 : margin;\n  context.strokeRect(x, y, width, height);\n  return mY > y - margin && mY < y + height + margin && mX > x - margin && mX < x + width + margin;\n};\n\n/**\n * Draws a mouse-enabled filled and stroked Rectangle.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n *\n * @param {Number} x X position of upper-left corner of Rectangle.\n * @param {Number} y Y position of upper-left corner of Rectangle.\n * @param {Number} width Width of Rectangle in pixels.\n * @param {Number} height Height of Rectangle in pixels.\n * @param {Number} margin Parameter around rectangle to count towards mouse over.\n * @return {Boolean} Returns true if the mouse is over the rectangle on the current\n * iteration of the cycle function.\n * @example\n * setFill('steelblue');\n * setStroke('orange');\n * var on = fsRectM(10, 10, 40, 40);\n * if(on) {\n *   setFill('red');\n *   setStroke('black');\n *   sRect(10, 10, 40, 40);\n * }\n */\nexport function fsRectM(x, y, width, height, margin) {\n  margin = margin == null ? 0 : margin;\n  context.fillRect(x, y, width, height);\n  context.strokeRect(x, y, width, height);\n  return mY > y - margin && mY < y + height + margin && mX > x - margin && mX < x + width + margin;\n};\n\n/**\n * Draws a mouse-enabled filled in Circle.\n * Fill color is expected to be set using {@link setFill}.\n * Returns true if mouse is over circle on current iteration of cycle.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @param {Number} margin Margin around Circle to consider part of mouse over.\n * @return {Boolean} Returns true if the mouse is over the circle on the current\n * iteration of the cycle function.\n * @example\n * setFill('steelblue');\n * var on = fCircleM(40, 40, 20);\n * if(on) {\n *  setFill('red');\n *  fCircle(40, 40, 20);\n * }\n *\n */\nexport function fCircleM(x, y, r, margin) { //check if you can avoid repeat\n  margin = margin == null ? 0 : margin;\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.fill();\n  return Math.pow(x - mX, 2) + Math.pow(y - mY, 2) < Math.pow(r + margin, 2);\n};\n\n/**\n * Draws a mouse-enabled stroked Circle.\n * Stroke color is expected to be set using {@link setStroke}.\n * Returns true if mouse is over circle on current iteration of cycle.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @param {Number} margin Margin around Circle to consider part of mouse over.\n * @return {Boolean} Returns true if the mouse is over the circle on the current\n * iteration of the cycle function.\n * @example\n * setStroke('orange');\n * var on = sCircleM(40, 40, 20);\n * if(on) {\n *  setStroke('black');\n *  sCircle(40, 40, 20);\n * }\n *\n */\nexport function sCircleM(x, y, r, margin) {\n  margin = margin == null ? 0 : margin;\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.stroke();\n  return Math.pow(x - mX, 2) + Math.pow(y - mY, 2) < Math.pow(r + margin, 2);\n};\n\n/**\n * Draws a mouse-enabled filled and stroked Circle.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n * Returns true if mouse is over circle on current iteration of cycle.\n *\n * @param {Number} x X position of center of the Circle.\n * @param {Number} y Y position of center of the Circle.\n * @param {Number} r Radius of the Circle.\n * @param {Number} margin Margin around Circle to consider part of mouse over.\n * @return {Boolean} Returns true if the mouse is over the circle on the current\n * iteration of the cycle function.\n * @example\n * setFill('steelblue');\n * setStroke('orange');\n * var on = fsCircleM(40, 40, 20);\n * if(on) {\n *  setFill('red');\n *  setStroke('black');\n *  fsCircle(40, 40, 20);\n * }\n *\n */\nexport function fsCircleM(x, y, r, margin) {\n  margin = margin == null ? 0 : margin;\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi);\n  context.stroke();\n  context.fill();\n  return Math.pow(x - mX, 2) + Math.pow(y - mY, 2) < Math.pow(r + margin, 2);\n};\n\n/**\n * Draws a mouse-enabled line from a start position to an end position.\n *\n * @param {Number} x0 Starting x position.\n * @param {Number} y0 Starting y position.\n * @param {Number} x1 Ending x position.\n * @param {Number} y1 Ending y position.\n * @param {Number} d Distance away from line to count towards mouse interaction.\n * @return {Boolean} Returns true if the mouse is over the line on the current\n * iteration of the cycle function.\n * @example\n * setStroke('black');\n * var on = lineM(0, 0, 40, 40);\n * if(on) {\n *  setStroke('red');\n *  line(0, 0, 40, 40);\n * }\n */\nexport function lineM(x0, y0, x1, y1, d) {\n  d = d || 4;\n  context.beginPath();\n  context.moveTo(x0, y0);\n  context.lineTo(x1, y1);\n  context.stroke();\n  return _distToSegmentSquared(x0, y0, x1, y1) < d * d;\n};\n\n/**\n * @ignore\n */\nfunction _distToSegmentSquared(x0, y0, x1, y1) {\n  var l2 = Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2);\n  if(l2 === 0) return Math.pow(x0 - mX, 2) + Math.pow(y0 - mY, 2);\n  var t = ((mX - x0) * (x1 - x0) + (mY - y0) * (y1 - y0)) / l2;\n  if(t <= 0) return Math.pow(x0 - mX, 2) + Math.pow(y0 - mY, 2);\n  if(t >= 1) return Math.pow(x1 - mX, 2) + Math.pow(y1 - mY, 2);\n  var px = x0 + t * (x1 - x0);\n  var py = y0 + t * (y1 - y0);\n  return Math.pow(px - mX, 2) + Math.pow(py - mY, 2);\n};\n\n//TODO:fEqTriangleM, fPolygonM\n\n/**\n * Draws a mouse-enabled bezier curve using {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo|bezierCurveTo}.\n *\n *\n * @param {Number} x0 Starting x position.\n * @param {Number} y0 Starting y position.\n * @param {Number} cx0 First curve control point x position.\n * @param {Number} cy0 First cure control point y position.\n * @param {Number} cx1 Second curve control point x position.\n * @param {Number} cy1 Second cure control point y position.\n * @param {Number} x1 Ending x position.\n * @param {Number} y1 Ending y position.\n * @param {Number} d Distance away from line to count towards mouse interaction.\n * @return {Boolean} Returns true if the mouse is over the line on the current\n * iteration of the cycle function.\n * @example\n * setStroke('black');\n * var on = bezierM(10, 10, 10, 0, 40, 0, 40, 10);\n * if(on) {\n *  setStroke('red');\n *  bezierM(10, 10, 10, 0, 40, 0, 40, 10);\n * }\n */\nexport function bezierM(x0, y0, cx0, cy0, cx1, cy1, x1, y1, d) { //TODO: fix this mess!\n  d = d == null ? 2 : d;\n  context.beginPath();\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(cx0, cy0, cx1, cy1, x1, y1);\n  context.stroke();\n  if(mX < Math.min(x0, x1, cx0, cx1) - d || mX > Math.max(x0, x1, cx0, cx1) + d || mY < Math.min(y0, y1, cy0, cy1) - d || mY > Math.max(y0, y1, cy0, cy1) + d) return false;\n  return GeometryOperators.distanceToBezierCurve(x0, y0, cx0, cy0, cx1, cy1, x1, y1, mP, false) < d;\n};\n\n\n\n//images\n\n/**\n * draw an image on context, parameters options (s for source, d for destination):\n *\tdrawImage(image, dx, dy)\n *\tdrawImage(image, dx, dy, dw, dh)\n *\tdrawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\n *\t@param {Image} image\n */\nexport function drawImage(image) { //TODO: improve efficiency\n  if(image == null) return;\n\n  switch(arguments.length) {\n    case 3:\n      context.drawImage(image, arguments[1], arguments[2]);\n      break;\n    case 5:\n      context.drawImage(image, arguments[1], arguments[2], arguments[3], arguments[4]);\n      break;\n    case 9:\n      context.drawImage(image, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);\n      break;\n\n  }\n};\n\n/**\n * fits an image into a rectangle without chagning its proportions (thus probably loosing top-bottom or left-right margins)\n * @param  {Image} image\n * @param  {Rectangle} rectangle frame of the image\n */\nexport function fitImage(image, rectangle) {\n  if(image == null ||  rectangle == null) return;\n\n  var propIm = image.width / image.height;\n  var propRc = rectangle.width / rectangle.height;\n  var compProp = propIm / propRc;\n\n  if(propIm > propRc) {\n    context.drawImage(image, 0.5 * (image.width - image.width / compProp), 0, image.width / compProp, image.height, rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  } else {\n    context.drawImage(image, 0, 0.5 * (image.height - image.height * compProp), image.width, image.height * compProp, rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  }\n};\n\n// styles\n\nexport function setFill(style) {\n  if(typeof style == \"number\") {\n    if(arguments.length > 3) {\n      context.fillStyle = 'rgba(' + arguments[0] + ',' + arguments[1] + ',' + arguments[2] + ',' + arguments[3] + ')';\n      return;\n    }\n    context.fillStyle = 'rgb(' + arguments[0] + ',' + arguments[1] + ',' + arguments[2] + ')';\n    return;\n  }\n  context.fillStyle = style;\n};\n\n/**\n * setStroke - set stroke to draw with in canvas\n *\n * @param {(String|Number)} style If string, then hex value or web color.\n * If Number, then a set of RGB or RGBA integers\n * @param {Number} lineWidth Optional width of line to use. Only valid if style parameter is a string.\n * @example\n * setStroke('steelblue'); // sets stroke to blue.\n * setStroke(0,0,0,0.4); // sets stroke to black with partial opacity.\n * setStroke('black', 0.2); // provides lineWidth to stroke\n */\nexport function setStroke(style, lineWidth) {\n  if(typeof style == \"number\") {\n    if(arguments.length > 3) {\n      context.strokeStyle = 'rgba(' + arguments[0] + ',' + arguments[1] + ',' + arguments[2] + ',' + arguments[3] + ')';\n      return;\n    }\n    context.strokeStyle = 'rgb(' + arguments[0] + ',' + arguments[1] + ',' + arguments[2] + ')';\n    return;\n  }\n  context.strokeStyle = style;\n  //TODO: will lineWidth still work if RGB or RGBA is used?\n  if(lineWidth) context.lineWidth = lineWidth;\n};\n\nexport function setLW(lineWidth) {\n  context.lineWidth = lineWidth;\n};\n\n\n\n//clipping\n\nexport function clipCircle(x, y, r) {\n  context.save();\n  context.beginPath();\n  context.arc(x, y, r, 0, TwoPi, false);\n  context.closePath();\n  context.clip();\n};\n\nexport function clipRectangle(x, y, w, h) {\n  context.save();\n  context.beginPath();\n  context.moveTo(x, y);\n  context.lineTo(x + w, y);\n  context.lineTo(x + w, y + h);\n  context.lineTo(x, y + h);\n  context.clip();\n};\n\nexport function restore() {\n  context.restore();\n};\n\n\n// texts\n\n/**\n * Draws filled in text.\n * Fill color is expected to be set using {@link setFill}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @example\n * setText('black', 30, 'Ariel');\n * fText(\"hello\", 10, 10);\n *\n */\nexport function fText(text, x, y) {\n  context.fillText(text, x, y);\n};\n\n/**\n * Draws stroked text.\n * Stroke color is expected to be set using {@link setStroke}.\n * Additionally, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @example\n * setText('black', 30, 'Ariel');\n * setStroke('orange');\n * sText(\"hello\", 10, 10);\n *\n */\nexport function sText(text, x, y) {\n  context.strokeText(text, x, y);\n};\n\n/**\n * Draws stroked and filled in text.\n * Stroke color is expected to be set using {@link setStroke}.\n * Fill color is expected to be set using {@link setFill}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @example\n * setText('black', 30, 'Ariel');\n * setStroke('orange');\n * fsText(\"hello\", 10, 10);\n *\n */\nexport function fsText(text, x, y) {\n  context.strokeText(text, x, y);\n  context.fillText(text, x, y);\n};\n\n/**\n * Draws filled in text, rotated by some angle.\n * Fill color is expected to be set using {@link setFill}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @param {Number} angle The angle in radians to rotate the text\n * @example\n * setText('black', 30, 'Ariel');\n * fTextRotated(\"hello\", 40, 40, (20 * Math.PI / 180));\n *\n */\nexport function fTextRotated(text, x, y, angle) {\n  context.save();\n  context.translate(x, y);\n  context.rotate(angle);\n  context.fillText(text, 0, 0);\n  context.restore();\n};\n\n/**\n * Draws a mouse-enabled filled in text.\n * Fill color is expected to be set using {@link setFill}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @param {Number} size Size of the text being drawn.\n * @return {Boolean} Returns true if the mouse is over the text on the current\n * iteration of the cycle function.\n * @example\n * setText('black', 30, 'Ariel');\n * var on = fTextM(\"hello\", 10, 10, 30);\n * if(on) {\n *   setText('red', 30, 'Ariel');\n *   fText(\"hello\", 10, 10);\n * }\n *\n */\nexport function fTextM(text, x, y, size) {\n  size = size || 12;\n  context.fillText(text, x, y);\n  return mY > y && mY < y + size && mX > x && mX < x + context.measureText(text).width;\n};\n\n/**\n * Draws a mouse-enabled filled and stroked text.\n * Fill color is expected to be set using {@link setFill}.\n * Stroke color is expected to be set using {@link setStroke}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @param {Number} size Size of the text being drawn.\n * @return {Boolean} Returns true if the mouse is over the text on the current\n * iteration of the cycle function.\n * @example\n * setText('black', 30, 'Ariel');\n * setStroke('orange')\n * var on = fsTextM(\"hello\", 10, 10, 30);\n * if(on) {\n *   setText('red', 30, 'Ariel');\n *   setStroke('black')\n *   fsText(\"hello\", 10, 10);\n * }\n *\n */\nexport function fsTextM(text, x, y, size) {\n  size = size || 12;\n  context.strokeText(text, x, y);\n  context.fillText(text, x, y);\n  return mY > y && mY < y + size && mX > x && mX < x + context.measureText(text).width;\n};\n\n/**\n * Draws a mouse-enabled filled text rotated by some angle.\n * Fill color is expected to be set using {@link setFill}.\n * Alternatively, setText can be used to set a number of\n * text rendering properties.\n *\n * @param {String} text Text to draw.\n * @param {Number} x X position to start the text.\n * @param {Number} y Y position to start the text.\n * @param {Number} angle The angle in radians to rotate the text\n * @param {Number} size Size of the text being drawn.\n * @return {Boolean} Returns true if the mouse is over the text on the current\n * iteration of the cycle function.\n * @example\n * setText('black', 30, 'Ariel');\n * var on = fTextRotatedM(\"hello\", 10, 10, (20 * Math.PI / 180), 30);\n * if(on) {\n *   setText('red', 30, 'Ariel');\n *   setStroke('black')\n *   fsText(\"hello\", 10, 10);\n * }\n *\n */\nexport function fTextRotatedM(text, x, y, angle, size) {\n  size = size || 12;\n  context.save();\n  context.translate(x, y);\n  context.rotate(angle);\n  context.fillText(text, 0, 0);\n  context.restore();\n\n  var dX = mX - x;\n  var dY = mY - y;\n  var d = Math.sqrt(dX * dX + dY * dY);\n  var a = Math.atan2(dY, dX) - angle;\n  var mXT = x + d * Math.cos(a);\n  var mYT = y + d * Math.sin(a);\n\n  return mYT > y && mYT < y + size && mXT > x && mXT < x + context.measureText(text).width;\n};\n\nexport function fTextW(text, x, y) {\n  context.fillText(text, x, y);\n  return context.measureText(text).width;\n};\n\n/**\n * Sets several text canvas rendering properties\n *\n * @param {Object} color optional font color\n * @param {Object} fontSize optional font size\n * @param {Object} fontName optional font name (default: LOADED_FONT)\n * @param {Object} align optional horizontal align ('left', 'center', 'right')\n * @param {Object} baseline optional vertical alignment ('bottom', 'middle', 'top')\n * @param {Object} style optional font style ('bold', 'italic', 'underline')\n * @param {Object} ctx optional context\n */\nexport function setText(color, fontSize, fontName, align, baseline, style) {\n  color = color || '#000000';\n  fontSize = String(fontSize) || '14';\n  fontName = fontName || LOADED_FONT;\n  align = align == null ? 'left' : align;\n  baseline = baseline == null ? 'top' : baseline;\n  style = style == null ? '' : style;\n\n  if(style != '') {\n    style += ' ';\n  }\n\n  context.fillStyle = color;\n  context.font = style + fontSize + 'px ' + fontName;\n  context.textAlign = align;\n  context.textBaseline = baseline;\n};\n\nexport function getTextW(text) {\n  return context.measureText(text).width;\n};\n\n\n// pixel data\n\nexport function getPixelData(x, y) {\n  return context.getImageData(x, y, 1, 1).data;\n};\n\nexport function getPixelColor(x, y) {\n  var rgba = context.getImageData(x, y, 1, 1).data;\n  return 'rgba(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ',' + rgba[3] + ')';\n};\n\nexport function getPixelColorRGBA(x, y) { //repeated\n  return context.getImageData(x, y, 1, 1).data;\n};\n\nexport function captureCanvas() {\n  var im = new Image();\n  im.src = canvas.toDataURL();\n  return im;\n};\n\n\n/*\nTODO: refactor this to not reassign Global.context\nexport function drawAndcapture(drawFunction, w, h, target) {\n  var defaultContext = context;\n\n  context = hiddenContext;\n\n  context.canvas.setAttribute('width', w);\n  context.canvas.setAttribute('height', h);\n\n  context.clearRect(0, 0, w, h);\n\n  target == null ? drawFunction.call() : drawFunction.call(target);\n\n  var im = new Image();\n  im.src = context.canvas.toDataURL();\n\n  context = defaultContext;\n\n  return im;\n};\n*/\n\n\n\n//cursor\n\n/**\n * Change mouse cursor to given style. See {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor|MDN Cursor Page} for all style options.\n * @param {String} name The name of the cursor style.\n */\nexport function setCursor(name) {\n  name = name == null ? 'default' : name;\n  canvas.style.cursor = name;\n};\n\n//time\n\nexport function getMilliseconds() {\n  return new Date().getTime();\n};\n","import { context } from \"src/Global\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport { getTextW } from \"src/tools/graphic/SimpleGraphics\";\n\n/**\n * @classdesc static Class with methods to render text in canvas\n * @namespace\n * @category strings\n */\nfunction DrawTexts() {}\nexport default DrawTexts;\n\nDrawTexts.POINT_TO_PIXEL = 1.3333;\nDrawTexts.PIXEL_TO_POINT = 0.75;\n\n\n// /**\n//  * set several text canvas rendering properties\n//  * to be deprecated, replaced by setText at SimpleGraphics\n//  * @param {String} color optional font color\n//  * @param {Number} fontSize optional font size\n//  * @param {String} fontName optional font name (default: LOADED_FONT)\n//  * @param {String} align optional horizontal align ('left', 'center', 'right')\n//  * @param {Object} baseline optional vertical alignment ('bottom', 'middle', 'top')\n//  * @param {Object} style optional font style ('bold', 'italic', 'underline')\n//  */\n// DrawTexts.setContextTextProperties=function(color, fontSize, fontName, align, baseline, style){ //context should be changed before calling the function\n// \tcolor = color||'#000000';\n// \tfontSize = String(fontSize)||'14';\n// \tfontName = fontName||LOADED_FONT;\n// \talign = align==null?'left':align;\n// \tbaseline = baseline==null?'top':baseline;\n// \tstyle = style==null?'':style;\n\n// \tif(style!='') style+=' ';\n\n// \tcontext.fillStyle    = color;\n//   \tcontext.font         = style+fontSize+'px '+fontName;\n//   \tcontext.textAlign \t = align;\n//   \tcontext.textBaseline = baseline;\n// }\n\n\nDrawTexts.fillTextRectangle = function(text, x, y, width, height, lineHeight, returnHeight, ellipsis) {\n  var textLines = DrawTexts.textWordWrapReturnLines(text, width, height, lineHeight, ellipsis);\n  return DrawTexts.fillTextRectangleWithTextLines(textLines, x, y, height, lineHeight, returnHeight);\n};\n\n/**\n * fill a text rotated\n * @param {String} text\n * @param {Number} x\n * @param {Number} y\n * @param {Number} angle in radians\n */\nDrawTexts.fillTextRotated = function(text, x, y, angle) { //TODO: remove (replaced by fTextRotated in SimpleGraphics)\n  context.save();\n  context.translate(x, y);\n  context.rotate(angle);\n  context.fillText(text, 0, 0);\n  context.restore();\n};\n\n\nDrawTexts.fillTextRectangleWithTextLines = function(textLines, x, y, height, lineHeight, returnHeight) {\n  height = height == 0 || height == null ? 99999 : height;\n\n  for(var i = 0; textLines[i] != null; i++) {\n    context.fillText(textLines[i], x, y + i * lineHeight);\n    if((i + 2) * lineHeight > height) break;\n  }\n  if(returnHeight) return textLines.length * lineHeight;\n  return textLines.length;\n};\n\n\nDrawTexts.textWordWrapReturnLines = function(text, fitWidth, fitHeight, lineHeight, ellipsis) {\n  fitWidth = fitWidth || 100;\n  fitHeight = fitHeight || 600;\n  lineHeight = lineHeight || 16;\n\n  var nLinesLimit = lineHeight == 0 ? -1 : Math.floor(fitHeight / lineHeight);\n  var lines = new StringList();\n\n  if(fitWidth <= 0) {\n    lines.push(text);\n    return lines;\n  }\n\n  var sentences = text.split(/\\\\n|\\n/);\n  var i;\n  var currentLine = 0;\n  var words;\n  var idx;\n  var str;\n  var w;\n  var sentence;\n\n  for(i = 0; i < sentences.length; i++) {\n    if(sentences[i] == '') {\n      lines.push('');\n      currentLine++;\n      continue;\n    }\n    words = sentences[i].split(' ');\n    idx = 1;\n    while(words.length > 0 && idx <= words.length) {\n      str = words.slice(0, idx).join(' ');\n      w = context.measureText(str).width;\n      if(w > fitWidth) {\n        if(idx == 1) idx = 2;\n        sentence = words.slice(0, idx - 1).join(' ');\n        if(sentence != '') lines.push(sentence);\n        if(lines.length == nLinesLimit) {\n          if(ellipsis) {\n            var lastLine = lines[lines.length - 1];\n            if(context.measureText(lastLine + \"…\").width <= fitWidth) {\n              lines[lines.length - 1] += \"…\";\n            } else {\n              words = lastLine.split(\" \");\n              sentence = words.slice(0, words.length - 1).join(\" \") + \"…\";\n              lines.push(sentence);\n            }\n          }\n          return lines;\n        }\n        currentLine++;\n        words = words.splice(idx - 1);\n        idx = 1;\n      } else {\n        idx++;\n      }\n    }\n    if(idx > 0) {\n      sentence = words.join(' ');\n      if(sentence != '') lines.push(sentence);\n    }\n    currentLine++;\n  }\n\n  lines.width = lines.length == 1 ? w : fitWidth;\n\n  return lines;\n};\nDrawTexts.getMaxTextWidth = function(texts) {\n  var max = getTextW(texts[0]);\n  for(var i = 1; texts[i] != null; i++) {\n    max = Math.max(max, getTextW(texts[i]));\n  }\n  return max;\n};\n\n\nDrawTexts.cropString = function(ctx, string, fitWidth) {\n  if(string == null) return;\n  fitWidth = fitWidth || 0;\n\n  if(fitWidth <= 0 || ctx.measureText(string).width <= fitWidth) {\n    return string;\n  }\n  var chars = string.split('');\n  var idx = 1;\n  while(chars.length > 0 && idx <= chars.length) {\n    var str = chars.slice(0, idx).join('');\n    var w = ctx.measureText(str).width;\n    if(w > fitWidth) {\n      if(idx == 1) {\n        idx = 2;\n      }\n      return chars.slice(0, idx - 1).join('');\n    }\n    else {\n      idx++;\n    }\n  }\n};\n","import MatrixGenerators from \"src/operators/numeric/MatrixGenerators\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport { context } from 'src/Global';\n\nfunction DrawTextsAdvanced() {}\nexport default DrawTextsAdvanced;\n\nDrawTextsAdvanced.characterOnQuadrilater = function(context, character, p0, p1, p2, p3, fontType) {\n\n};\n\n\n/**\n * works only with n=1\n */\nDrawTextsAdvanced.textOnQuadrilater = function(text, p0, p1, p2, p3, fontSize, n) { //TODO:fix, finish\n  n = n == null ? 0 : n;\n\n  if(n == 1) {\n    var p01 = new Point((p0.x + p1.x) * 0.5, (p0.y + p1.y) * 0.5);\n    var p03 = new Point((p0.x + p3.x) * 0.5, (p0.y + p3.y) * 0.5);\n    var p23 = new Point((p2.x + p3.x) * 0.5, (p2.y + p3.y) * 0.5);\n    var p12 = new Point((p1.x + p2.x) * 0.5, (p1.y + p2.y) * 0.5);\n    var pc = new Point((p01.x + p23.x) * 0.5, (p01.y + p23.y) * 0.5);\n    DrawTextsAdvanced.textOnQuadrilater(text, p0, p01, pc, p03, fontSize, 2);\n    DrawTextsAdvanced.textOnQuadrilater(text, p01, p1, p12, pc, fontSize, 3);\n    DrawTextsAdvanced.textOnQuadrilater(text, pc, p12, p2, p23, fontSize, 4);\n    DrawTextsAdvanced.textOnQuadrilater(text, p03, pc, p23, p3, fontSize, 5);\n    return;\n  }\n  var measure = context.measureText(text);\n  var w = measure.width;\n  var h = fontSize; // 64;//*96/72; //TODO: fix this\n\n  switch(n) {\n    case 0:\n      var v0 = new Point(0, 0);\n      var v1 = new Point(w, 0);\n      var v2 = new Point(0.000001, h + 0.000001);\n      break;\n    case 2:\n      var v0 = new Point(0, 0);\n      var v1 = new Point(w * 0.5, 0);\n      var v2 = new Point(0.000001, h * 0.5 + 0.000001);\n      break;\n    case 3:\n      var v0 = new Point(w * 0.5, 0);\n      var v1 = new Point(w, 0);\n      var v2 = new Point(w * 0.5 + 0.000001, h * 0.5 + 0.000001);\n      break;\n    case 4:\n      var v0 = new Point(w * 0.5, h * 0.5);\n      var v1 = new Point(w, h * 0.5);\n      var v2 = new Point(w * 0.5 + 0.000001, h + 0.000001);\n      break;\n    case 5:\n      var v0 = new Point(0, h * 0.5);\n      var v1 = new Point(w * 0.5, h * 0.5);\n      var v2 = new Point(0.000001, h + 0.000001);\n      break;\n  }\n\n\n  context.save();\n  DrawTextsAdvanced.applyTransformationOnCanvasFromPoints(v0, v1, v2, p0, p1, p3);\n\n  context.beginPath();\n  context.moveTo(v0.x - 2, v0.y - 2);\n  context.lineTo(v1.x + 8, v1.y - 2);\n  context.lineTo(v2.x - 2, v2.y + 8);\n  context.clip();\n\n  context.fillText(text, 0, 0);\n\n  context.restore();\n\n\n  v0.x = v1.x + 0.0001;\n  v0.y = v2.y + 0.0001;\n\n  context.save();\n\n  DrawTextsAdvanced.applyTransformationOnCanvasFromPoints(v0, v1, v2, p2, p1, p3);\n\n  context.beginPath();\n  context.moveTo(v0.x + 4, v0.y + 2);\n  context.lineTo(v1.x + 4, v1.y - 2);\n  context.lineTo(v2.x - 2, v2.y + 2);\n  context.clip();\n\n  context.fillText(text, 0, 0);\n\n  context.restore();\n};\n\nDrawTextsAdvanced.applyTransformationOnCanvasFromPoints = function(v0, v1, v2, w0, w1, w2) { //TODO:find the correct place for this\n  var M = MatrixGenerators.createMatrixFromTrianglesMapping(v0, v1, v2, w0, w1, w2);\n  context.transform(M.a, M.b, M.c, M.d, M.tx, M.ty);\n};\n\nDrawTextsAdvanced.mapRectangleIntoQuadrilater = function(image, xI, yI, wI, hI, v0, v1, v2, v3) { //TODO:find the correct place for this\n  context.save();\n\n  var M = MatrixGenerators.createMatrixFromTrianglesMapping(new Point(0, 0), new Point(100, 0), new Point(100, 100), v0, v1, v2);\n  context.transform(M.a, M.b, M.c, M.d, M.tx, M.ty);\n\n  context.beginPath();\n  context.moveTo(0, 0);\n  context.lineTo(100, 0);\n  context.lineTo(100, 100);\n  context.lineTo(0, 0);\n  context.clip();\n\n  context.drawImage(image,\n    xI, yI, wI, hI,\n    0, 0, 100, 100);\n\n\n  context.restore();\n\n  //\n\n  context.save();\n\n  var M = MatrixGenerators.createMatrixFromTrianglesMapping(new Point(0, 0), new Point(0, 2), new Point(2, 2), v0, v3, v2);\n  context.transform(M.a, M.b, M.c, M.d, M.tx, M.ty);\n\n  context.beginPath();\n  context.moveTo(0, 0);\n  context.lineTo(0, 2);\n  context.lineTo(2, 2);\n  context.lineTo(0, 0);\n  context.clip();\n\n  context.drawImage(image,\n    xI, yI, wI, hI,\n    0, 0, 2, 2);\n\n\n  context.restore();\n};\n\nDrawTextsAdvanced.getClippedTrianglesData = function(image, xI, yI, wI, hI) {\n  var object = {};\n\n  context.clearRect(0, 0, wI, hI);\n  context.save();\n\n  context.beginPath();\n  context.moveTo(0, 0);\n  context.lineTo(wI, 0);\n  context.lineTo(wI, hI);\n  context.lineTo(0, 0);\n  context.clip();\n\n  context.drawImage(image,\n    xI, yI, wI, hI,\n    0, 0, wI, hI);\n\n  object.dataTriangle0 = context.getImageData(0, 0, wI, hI);\n\n  context.restore();\n\n  //\n  context.clearRect(0, 0, wI, hI);\n  context.save();\n\n  context.beginPath();\n  context.moveTo(0, 0);\n  context.lineTo(0, hI);\n  context.lineTo(wI, hI);\n  context.lineTo(0, 0);\n  context.clip();\n\n  context.drawImage(image,\n    xI, yI, wI, hI,\n    0, 0, wI, hI);\n\n  object.dataTriangle1 = context.getImageData(0, 0, wI, hI);\n\n  context.restore();\n\n  return object;\n};\n\n\n//\n\n\nDrawTextsAdvanced.typodeOnQuadrilater = function(text, p0, p1, p2, p3) { //TODO:fix, finish\n  var dX = p1.x - p0.x;\n  var dY = p1.y - p0.y;\n  var h0 = p3.y - p0.y;\n  var h1 = p2.y - p1.y;\n\n  context.lineWidth = 0.01 + (h0 + h1) / 100;\n  if(dX < 1.8) return;\n\n  var polygonList = typodeObject[text];\n  //c.log(text, polygonList.length);\n  var polygon;\n  var j;\n  var t;\n  var mint;\n\n  for(var i = 0; polygonList[i] != null; i++) {\n    polygon = polygonList[i];\n    context.beginPath();\n    t = polygon[0].x;\n    mint = 1 - t;\n    context.moveTo(Math.floor(t * dX + p0.x) + 0.5, Math.floor(polygon[0].y * (mint * h0 + t * h1) + mint * p0.y + t * p1.y) + 0.5);\n    for(j = 1; polygon[j] != null; j++) {\n      t = polygon[j].x;\n      mint = 1 - t;\n      context.lineTo(Math.floor(t * dX + p0.x) + 0.5, Math.floor(polygon[j].y * (mint * h0 + t * h1) + mint * p0.y + t * p1.y) + 0.5);\n    }\n    context.stroke();\n  }\n\n};","/* global clearInterval, setInterval */\n\nimport Point from \"src/dataStructures/geometry/Point\";\nimport { mX, mY, addInteractionEventListener } from 'src/Global';\n\nDragDetection.prototype.constructor = DragDetection;\n\n/**\n * DragDetection -\n * @param {Object} configuration\n * @param {Number} configuration.mode Mode the DragDetection tool should work under.\n * Possible options:\n * <ul>\n * <li><strong>0</strong>: frame to frame dragging vector (draggingInstance.dragVector register the vectorial change each frame).</li>\n * <li><strong>1</strong>: from click point dragging (draggingInstance.dragVector register the vectorial change from the clicking point).</li>\n * <li><strong>2</strong>: polar (draggingInstance.dragVector.x is dR, draggingInstance.dragVector.y is dA, according to the center).</li>\n * </ul>\n * @param {Object} configuration.target\n * @param {Function} configuration.listenerFunction Callback function executed each time drag is detected.\n * @param {Function} configuration.areaVerificationFunction\n * @param {Number} configuration.factor\n * @constructor\n * @category interactions\n */\nfunction DragDetection(configuration) { //mode, listenerFunction, target, areaVerificationFunction){\n  this.mode = configuration.mode || 0;\n  this.listenerFunction = configuration.listenerFunction;\n  this.target = configuration.target;\n  this.areaVerificationFunction = configuration.areaVerificationFunction;\n\n  this.factor = configuration.factor == null ? 1 : configuration.factor;\n  this.center = new Point(0, 0);\n\n  addInteractionEventListener(\"mousedown\", this.onMouse, this);\n  addInteractionEventListener(\"mouseup\", this.onMouse, this);\n\n  this.dragging = false;\n  this.mouseClickPosition = new Point();\n  this.mousePosition = new Point();\n  this.r = 0;\n  this.a = 0;\n\n  this.idInterval = null;\n\n  this.dragVector = new Point();\n}\nexport default DragDetection;\n\nDragDetection.prototype.enterframe = function(draggingInstance) {\n\n  switch(draggingInstance.mode) {\n    case 0:\n      draggingInstance.dragVector.x = (mX - draggingInstance.mousePosition.x) * draggingInstance.factor;\n      draggingInstance.dragVector.y = (mY - draggingInstance.mousePosition.y) * draggingInstance.factor;\n      draggingInstance.mousePosition.x = mX;\n      draggingInstance.mousePosition.y = mY;\n      break;\n    case 1:\n      draggingInstance.dragVector.x = mX - draggingInstance.mouseClickPosition.x;\n      draggingInstance.dragVector.y = mY - draggingInstance.mouseClickPosition.y;\n      break;\n    case 2:\n      var dX = mX - draggingInstance.center.x;\n      var dY = mY - draggingInstance.center.y;\n      var r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2));\n      var a = Math.atan2(dY, dX);\n      draggingInstance.dragVector.x = r - draggingInstance.r;\n      draggingInstance.dragVector.y = a - draggingInstance.a;\n      draggingInstance.r = r;\n      draggingInstance.a = a;\n      break;\n  }\n  //c.log(draggingInstance, draggingInstance.target, draggingInstance.dragVector);\n  draggingInstance.listenerFunction.call(draggingInstance.target, draggingInstance.dragVector);\n\n};\n\nDragDetection.prototype.onMouse = function(event) {\n  switch(event.type) {\n    case 'mousedown':\n      if(this.areaVerificationFunction != null && !this.areaVerificationFunction.call(this.target))\n      {\n        return;\n      }\n\n      this.dragging = true;\n\n      this.mouseClickPosition.x = mX;\n      this.mouseClickPosition.y = mY;\n      this.mousePosition.x = mX;\n      this.mousePosition.y = mY;\n\n      var dX = mX - this.center.x;\n      var dY = mY - this.center.y;\n      this.r = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2));\n      this.a = Math.atan2(dY, dX);\n\n      this.dragVector.x = 0;\n      this.dragVector.y = 0;\n\n      if(this.idInterval != null) {\n        clearInterval(this.idInterval);\n      }\n      this.idInterval = setInterval(this.enterframe, 30, this); //[!] this won't work on IE, it´s better to create a new Listener for setInterval\n      break;\n    case 'mouseup':\n      this.simulateMouseUp();\n      break;\n  }\n};\n\nDragDetection.prototype.simulateMouseUp = function() {\n  this.dragging = false;\n  clearInterval(this.idInterval);\n  this.idInterval = null;\n};\n","import { addInteractionEventListener,\n  _cycleOnMouseMovement,\n  reStartCycle,\n  _onMouse,\n  onMoveCycle\n} from 'src/Global';\n\nInputTextFieldHTML.prototype.constructor = InputTextFieldHTML;\n\n\nfunction InputTextFieldHTML(configuration) {\n  this.id = configuration.id == null ? 0 : configuration.id;\n\n  this.target = configuration.target;\n\n  this.x = configuration.x == null ? 0 : configuration.x;\n  this.y = configuration.y == null ? 0 : configuration.y;\n  this.width = configuration.width == null ? 200 : configuration.width;\n  this.height = configuration.height == null ? 20 : configuration.height;\n  this.fontSize = configuration.fontSize == null ? 16 : configuration.fontSize;\n\n  this.enterFunction = configuration.enterFunction;\n  this.changeFunction = configuration.changeFunction;\n  this.focusFunction = configuration.focusFunction;\n  this.blurFunction = configuration.blurFunction;\n\n  this.text = configuration.text;\n\n  this.textarea = configuration.textarea == null ? true : configuration.textarea;\n  this.readOnly = configuration.readOnly == null ? false : configuration.readOnly;\n  this.border = configuration.border == null ? true : configuration.border;\n  this.password = configuration.password;\n\n  this._prevX;\n  this._prevY;\n  this._prevWidth;\n  this._prevHeight;\n  this._prevText;\n\n  this.zIndex = 30;\n\n  this.enterFunctionTarget;\n  this.changeFunctionTarget;\n  this.focusFunctionTarget;\n  this.blurFunctionTarget;\n\n  this.textColor = configuration.textColor == null ? 'black' : configuration.textColor;\n  this.backgroundColor = '#FFFFFF';\n\n  this.main = document.getElementById('maindiv');\n  this.div = document.createElement('div2');\n  this.textarea ? this.DOMtext = document.createElement(\"textarea\") : this.DOMtext = document.createElement(\"input\");\n  this.password ? this.DOMtext.setAttribute('type', 'password') : this.DOMtext.setAttribute('type', 'text');\n  this.div.setAttribute('style', 'position:absolute;top:' + this.y + 'px;left:' + this.x + 'px;z-index:' + this.zIndex + ';');\n\n  if(!this.border) this.DOMtext.setAttribute('style', 'border:none');\n\n  this.div.setAttribute('rows', '1');\n  this.main.appendChild(this.div);\n  this.div.appendChild(this.DOMtext);\n  this.DOMtext.parent = this;\n  this.added = true;\n\n  this.DOMtext.readOnly = this.readOnly;\n\n  this.DOMtext.onfocus = function(e) {\n    //e.target = this.parent;\n    this.parent._onFocus(this.parent);\n  };\n  this.DOMtext.onblur = function(e) {\n    //e.target = this.parent;\n    this.parent._onBlur(this.parent);\n  };\n\n  this.DOMtext.value = \"\";\n\n  addInteractionEventListener(\"keydown\", this.onKeyDown, this);\n  this._eKeyDown;\n\n  this.timer;\n\n  this.focus = false;\n\n  if(this.changeFunction != null) this.setChangeFunction(this.changeFunction, this.target);\n  if(this.enterFunction != null) this.setEnterFunction(this.enterFunction, this.target);\n  if(this.focusFunction != null) this.setFocusFunction(this.focusFunction, this.target);\n  if(this.blurFunction != null) this.setBlurFunction(this.blurFunction, this.target);\n\n  if(this.text != null) {\n    this.setText(this.text);\n  } else {\n    this.draw();\n  }\n\n  this.DOMtext.addEventListener(\"mousemove\", _onMouse, false);\n  if(_cycleOnMouseMovement) this.DOMtext.addEventListener('mousemove', onMoveCycle, false);\n}\nexport default InputTextFieldHTML;\n\nInputTextFieldHTML.prototype.setBorder = function(value) {\n  this.border = value;\n  this.DOMtext.setAttribute('style', 'border:0; color: ' + this.textColor + '; width:' + (this.width - 7) + 'px;height:' + (this.height - 7) + 'px; font-size:' + this.fontSize + 'px; border:' + (value ? 'yes' : 'none'));\n};\n\nInputTextFieldHTML.prototype.draw = function() {\n  if(this.x != this._prevX || this.y != this._prevY || this.width != this._prevWidth || this.height != this._prevHeight || this.text != this._prevText) {\n    this._prevX = this.x;\n    this._prevY = this.y;\n    this._prevWidth = this.width;\n    this._prevHeight = this.height;\n    this._prevText = this.text;\n\n    // this.DOMtext.style = \"none\";\n    this.DOMtext.style.padding = \"0px\";\n    this.DOMtext.style.border = \"0px\";\n    this.DOMtext.style.borderColor = \"#FFFFFF\";\n    this.DOMtext.style.background = \"transparent\";\n    this.DOMtext.style.resize = \"none\";\n\n    this.DOMtext.setAttribute('style', 'border: 0; color: ' + this.textColor + '; width:' + (this.width - 7) + 'px;height:' + (this.height - 7) + 'px; font-size:' + this.fontSize + 'px');\n    this.div.setAttribute('style', 'border: 0; position:absolute;top:' + this.y + 'px;left:' + this.x + 'px;z-index:' + this.zIndex + ';');\n  }\n};\n\nInputTextFieldHTML.prototype.setText = function(text, activeChange) {\n  activeChange = activeChange == null ? true : activeChange;\n  this.text = text;\n  this.DOMtext.value = text;\n\n  //var timer = setTimeout(this.onKeyDownDelayed, 4, this);\n  this.draw();\n};\n\nInputTextFieldHTML.prototype.getText = function() {\n  return this.DOMtext.value;\n};\n\nInputTextFieldHTML.prototype.getSelectionStart = function() {\n  return this.DOMtext.selectionStart;\n};\n\nInputTextFieldHTML.prototype.onKeyDown = function(e) {\n  this._eKeyDown = e;\n  this._keyCode = e.keyCode;\n  this.timer = setTimeout(this.onKeyDownDelayed, 4, this);\n};\n\nInputTextFieldHTML.prototype.onKeyDownDelayed = function(target) {\n\n  if(target._keyCode == 13 && target.DOMtext == document.activeElement) {\n    if(target.enterFunction != null) {\n      target.enterFunction.call(target.enterFunctionTarget, target.id);\n    }\n  }\n\n  if(target.text != target.DOMtext.value) {\n\n    target.text = target.DOMtext.value;\n    var lastChar = target.text.charAt(target.text.length - 1);\n\n    if(target._keyCode != 13) {\n      if(target.changeFunction != null) {\n        target.changeFunction.call(target.changeFunctionTarget, target.id);\n      }\n    }\n  }\n\n  if(_cycleOnMouseMovement) reStartCycle();\n\n  this.timer = null;\n};\n\nInputTextFieldHTML.prototype.forceFocus = function() {\n  this.DOMtext.focus();\n  this.focus = true;\n};\n\nInputTextFieldHTML.prototype.forceUnfocus = function() {\n  console.log(\"[!] use InputTextFieldHTML.prototype.forceBlur instead\");\n  a.push(0); // TODO where does this come from\n};\n\nInputTextFieldHTML.prototype.forceBlur = function() {\n  this.DOMtext.blur();\n  this.focus = false;\n};\n\n\nInputTextFieldHTML.prototype.setEnterFunction = function(enterFunction, target) {\n  this.enterFunction = enterFunction;\n  this.enterFunctionTarget = target;\n};\nInputTextFieldHTML.prototype.setChangeFunction = function(changeFunction, target) {\n  this.changeFunction = changeFunction;\n  this.changeFunctionTarget = target;\n};\nInputTextFieldHTML.prototype.setFocusFunction = function(focusFunction, target) {\n  this.focusFunction = focusFunction;\n  this.focusFunctionTarget = target;\n};\nInputTextFieldHTML.prototype.setBlurFunction = function(blurFunction, target) {\n  this.blurFunction = blurFunction;\n  this.blurFunctionTarget = target;\n};\n\nInputTextFieldHTML.prototype.setSelection = function(start, end) {\n  start = start == null ? 0 : start;\n  end = end == null ? this.DOMtext.value.length : end;\n  this.DOMtext.selectionStart = start;\n  this.DOMtext.selectionEnd = end;\n};\nInputTextFieldHTML.prototype.placeCursor = function(nChar) {\n  this.setSelection(nChar);\n};\n\nInputTextFieldHTML.prototype.setScrollPosition = function(y) {\n  if(y <= 1) y = Math.floor(y * this.DOMtext.scrollHeight);\n  this.DOMtext.scrollTop = y;\n};\nInputTextFieldHTML.prototype.getScrollPosition = function() {\n  return this.DOMtext.scrollTop;\n};\nInputTextFieldHTML.prototype.getTextHeight = function() {\n  return this.DOMtext.scrollHeight;\n};\n\n\nInputTextFieldHTML.prototype._onFocus = function(target) {\n  target.focus = true;\n  if(target.focusFunction != null) target.focusFunction.call(target.focusFunctionTarget, target.id);\n};\n\nInputTextFieldHTML.prototype._onBlur = function(target) {\n  target.focus = false;\n  if(target.blurFunction != null) target.blurFunction.call(target.blurFunctionTarget, target.id);\n};\n\nInputTextFieldHTML.prototype.remove = function() {\n  if(this.added) {\n    this.div.removeChild(this.DOMtext);\n    this.main.removeChild(this.div);\n    this.added = false;\n  }\n};\n\nInputTextFieldHTML.prototype.readd = function() {\n  if(!this.added) {\n    this.main.appendChild(this.div);\n    this.div.appendChild(this.DOMtext);\n    this.added = true;\n  }\n};\n\nInputTextFieldHTML.prototype.disappear = function() {\n  console.log('[!] InputTextFieldHTML.prototype.disappear replaced by remove');\n  a.push(0); // TODO where does this come from?\n  this.x = -10000;\n  this.draw();\n};","import { addInteractionEventListener,\n  removeInteractionEventListener,\n  context,\n  mX,\n  mY\n} from 'src/Global';\nimport { setText } from \"src/tools/graphic/SimpleGraphics\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nimport DrawTexts from \"src/tools/graphic/DrawTexts\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport List from \"src/dataStructures/lists/List\";\n\nTextBox.prototype.constructor = TextBox;\n\n/**\n * @classdesc Instanciable class that manages and renders a text on the canvas.\n *\n * @description create new TextBox.\n * @param configuration configuration Object with parameters (x, y, width, text, fontColor, fontSize, fontName, fontStyle, warnFunction, target…)\n * @constructor\n * @category strings\n */\nfunction TextBox(configuration) {\n  configuration = configuration == null ? {} : configuration;\n\n  this.x = configuration.x == null ? 300 : configuration.x;\n  this.y = configuration.y == null ? 2 : configuration.y;\n  this.width = configuration.width == null ? 200 : configuration.width;\n\n  this.text = configuration.text == null ? '' : configuration.text;\n\n  this.fontColor = configuration.fontColor == null ? 'black' : configuration.fontColor;\n  this.fontSize = configuration.fontSize == null ? '14' : configuration.fontSize;\n  // TODO track down LOADED_FONT\n  this.fontName = configuration.fontName == null ? LOADED_FONT : configuration.fontName;\n  //this.fontStyle =  configuration.fontStyle==null?null:configuration.fontStyle;\n\n  this.warnFunction = configuration.warnFunction;\n  this.target = configuration.target;\n\n  this.lineHeight = configuration.lineHeight == null ? 14 : configuration.lineHeight;\n\n  this.backgroundColor = configuration.backgroundColor;\n  this.boxMargin = configuration.boxMargin == null ? 5 : configuration.boxMargin;\n\n  this.lineWidth = configuration.lineWidth == null ? 1 : configuration.lineWidth;\n\n  this.maxWidth;\n  this.links;\n  this.linksType;\n  this.pointPairs;\n  this.overLink;\n\n  this.setText(this.text);\n\n  addInteractionEventListener('mouseup', this.mouseUp, this);\n}\nexport default TextBox;\n\nTextBox.prototype.getMaxWidth = function() {\n  return DrawTexts.getMaxTextWidth(this.lines);\n};\n\nTextBox.prototype.update = function() {\n  this.setText(this.text);\n};\n\nTextBox.prototype.setText = function(text) {\n  this.text = String(text);\n\n  this.text = TextBox.replaceWikiLinks(this.text);\n\n  var i;\n  var j;\n  var blocks = this.text.split('<e');\n  if(blocks.length > 1) {\n    var index0;\n    var index0b;\n    var index1;\n\n    var names = [];\n    this.links = new StringList();\n    this.linksType = new StringList();\n    var indexesPairs = new List();\n    var lengthBefore;\n\n    var link;\n    var text;\n    var extra;\n    var rest;\n\n    for(i = 1; blocks[i] != null; i++) {\n      index0 = blocks[i].indexOf(\"*\");\n      index1 = blocks[i].indexOf(\">\");\n      index0b = blocks[i].indexOf(\"*\", index0 + 1);\n      if(index0 != -1 && index1 != -1 && index0 < index1) {\n        link = blocks[i].substr(0, index0);\n        //c.log(\"LINK:{\"+link+\"}\");\n\n        this.links.push(link);\n\n        if(index0b != -1 && index0b < index1 && !blocks[i].charAt(index0b + 1) == \"b\") {\n          extra = blocks[i].charAt(index0b + 1);\n          //c.log(\"EXTRA:{\"+extra+\"}\");\n\n          blocks[i] = blocks[i].substring(index0 + 1, index0b) + blocks[i].substr(index1 + 1);\n          this.linksType.push('self');\n        } else {\n          text = blocks[i].substring(index0 + 1, index1);\n          //c.log(\"TEXT:{\"+text+\"}\");\n\n          rest = blocks[i].substr(index1 + 1);\n          //c.log(\"REST:{\"+rest+\"}\");\n\n          blocks[i] = text + rest;\n          this.linksType.push('blank');\n        }\n\n        lengthBefore = blocks[i - 1].length;\n        lengthBefore -= 1 * (blocks[i - 1].split('\\\\n').length - 1);\n        for(j = 0; j < i - 1; j++) {\n          lengthBefore += blocks[j].length;\n          lengthBefore -= 1 * (blocks[j].split('\\\\n').length - 1);\n        }\n\n        indexesPairs.push(new Interval(lengthBefore, index1 - index0 - 1));\n      }\n    }\n\n    this.text = blocks.join('');\n\n  } else {\n    this.links = null;\n    this.pointPairs = null;\n  }\n\n  //DrawTexts.setContextTextProperties(this.fontColor, this.fontSize, this.fontName, null, null, this.fontStyle);\n\n  setText(this.fontColor, this.fontSize, this.fontName, null, null, this.fontStyle);\n\n  this.lines = DrawTexts.textWordWrapReturnLines(this.text, this.width, 0, this.lineHeight);\n  this.height = this.lines.length * this.lineHeight;\n\n\n  if(this.links != null) {\n    var interval;\n    var lengthAccumulated = 0;\n    this.pointPairs = [];\n    var w0;\n    var w1;\n    var y;\n    var line;\n    for(i = 0; this.links[i] != null; i++) {\n      interval = indexesPairs[i];\n      lengthAccumulated = 0;\n      for(j = 0; this.lines[j] != null; j++) {\n        line = this.lines[j];\n        if(interval.x >= lengthAccumulated && interval.x < lengthAccumulated + line.length) {\n          w0 = context.measureText(line.substr(0, interval.x - lengthAccumulated)).width;\n          w1 = context.measureText(line.substr(0, interval.x + interval.y - lengthAccumulated)).width;\n          y = j * this.lineHeight + 0.5;\n\n          this.pointPairs.push({\n            \"x0\": w0,\n            \"x1\": w1,\n            \"y\": y\n          });\n\n          break;\n        }\n        lengthAccumulated += (line.length + 1);\n      }\n    }\n  }\n\n  lengthAccumulated = 0;\n  for(j = 0; this.lines[j] != null; j++) {\n    line = this.lines[j];\n    lengthAccumulated += (line.length + 1);\n  }\n\n  // TODO is this supposed to be this.setText (also see below) or a diff setText\n  //DrawTexts.setContextTextProperties(this.fontColor, this.fontSize, this.fontName, null, null, this.fontStyle);\n  setText(this.fontColor, this.fontSize, this.fontName, null, null, this.fontStyle);\n\n  this.maxWidth = 0;\n  for(i = 0; this.lines[i] != null; i++) {\n    this.maxWidth = Math.max(this.maxWidth, context.measureText(this.lines[i]).width);\n  }\n};\n\nTextBox.prototype.draw = function(scale) {\n  scale = scale == null ? 1 : scale;\n\n  if(this.backgroundColor != null) {\n    context.fillStyle = this.backgroundColor;\n    context.fillRect(this.x - this.boxMargin, this.y - this.boxMargin, this.width + 2 * this.boxMargin, this.height + 2 * this.boxMargin);\n  }\n  //DrawTexts.setContextTextProperties(this.fontColor, this.fontSize*scale, this.fontName, null, null, this.fontStyle);\n  setText(this.fontColor, this.fontSize * scale, this.fontName, null, null, this.fontStyle);\n  DrawTexts.fillTextRectangleWithTextLines(this.lines, this.x, this.y, 0, this.lineHeight * scale);\n\n  var x0;\n  var x1;\n  var y0;\n  var y1;\n\n  this.overLink = null;\n\n  if(this.pointPairs != null) {\n    context.lineWidth = this.lineWidth;\n    context.strokeStyle = this.fontColor;\n    for(var i = 0; this.pointPairs[i] != null; i++) {\n      x0 = this.pointPairs[i].x0 * scale + this.x;\n      x1 = this.pointPairs[i].x1 * scale + this.x;\n      y0 = this.pointPairs[i].y * scale + this.y;\n      y1 = Math.floor(y0 + Number(this.fontSize * scale));\n      this.line(x0, x1, y1 + 0.5);\n      if(mY > y0 && mY < y1 && mX > x0 && mX < x1) {\n        context.canvas.style.cursor = 'pointer';\n        this.overLink = i;\n      }\n    }\n  }\n};\n\nTextBox.prototype.line = function(x0, x1, y) {\n  context.beginPath();\n  context.moveTo(x0, y);\n  context.lineTo(x1, y);\n  context.stroke();\n};\n\nTextBox.prototype.mouseUp = function(e) {\n  if(this.overLink != null) {\n    var link = this.links[this.overLink];\n    var linkType = this.linksType[this.overLink];\n    if(link.substr(0, 7) == 'http://' || link.substr(0, 8) == 'https://' || link.substr(0, 4) == 'www.') {\n      linkType == \"blank\" ? window.open(link) : window.open(link, \"_self\");\n    } else {\n      this.warnFunction.call(this.target, link);\n    }\n    this.overLink = null;\n  }\n};\n\nTextBox.prototype.deactivate = function() {\n  removeInteractionEventListener('mouseup', this.mouseUp, this);\n};\n\n\n///\n\nTextBox.replaceWikiLinks = function(text) {\n  var indexOpen = text.indexOf(\"[\");\n  var indexClose;\n  var textInsideBrackets;\n  var parts;\n  var externalLink;\n  while(indexOpen != -1) {\n    indexClose = text.indexOf(\"]\", indexOpen + 1);\n    if(indexClose == -1) {\n      indexOpen = -1;\n    } else {\n      textInsideBrackets = text.substring(indexOpen + 1, indexClose);\n      console.log('text inside brackets: {' + textInsideBrackets + '}');\n      if(textInsideBrackets.indexOf(\"[\") == -1 && textInsideBrackets.indexOf(\"]\") == -1) {\n        if(textInsideBrackets.indexOf(\" \") != -1) {\n          parts = textInsideBrackets.split(\" \");\n          //c.log('parts[0]: {'+parts[0]+'}');\n          //c.log('StringOperators.validateUrl(parts[0]):', StringOperators.validateUrl(parts[0]));\n          //c.log('StringOperators.validateUrl(parts[0]):', StringOperators.validateUrl(parts[0]));\n          if(StringOperators.validateUrl(parts[0])) {\n            //c.log('parts.slice(1).join: {'+parts.slice(1).join(\" \")+'}');\n            text = text.substr(0, indexOpen) + \"<e\" + parts[0] + \"*\" + parts.slice(1).join(\" \") + \">\" + text.substr(indexClose + 1);\n            //c.log('text changed:', text);\n            externalLink = true;\n          }\n        }\n\n        if(!externalLink) {\n          text = text.substr(0, indexOpen) + \"<e\" + textInsideBrackets + \"*\" + textInsideBrackets + \">\" + text.substr(indexClose + 1);\n        }\n\n      }\n      indexOpen = text.indexOf(\"[\", indexClose);\n    }\n  }\n  //c.log('new text:', text);\n  return text;\n};\n","import StringOperators from \"src/operators/strings/StringOperators\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\n\n/**\n * @classdesc Fast Html\n *\n * @namespace\n * @category misc\n */\nfunction FastHtml() {}\nexport default FastHtml;\n\nFastHtml.expand = function(abreviatedHTML, scope, onEvent) {\n  if(abreviatedHTML == null || abreviatedHTML == \"\") return \"\";\n\n  //c.log(abreviatedHTML.split(\"<\").length, abreviatedHTML.split(\">\").length);\n\n  if(abreviatedHTML.split(\"<\").length != abreviatedHTML.split(\">\").length) return abreviatedHTML;\n  var newText = abreviatedHTML;\n  var bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<fs\", \">\"); //OperacionesString.textEntreSubStrings(newText, \"<fs\", \">\");\n    if(bit != null) newText = newText.replace(\"<fs\" + bit + \">\", \"<font style=\\\"font-size:\" + Number(bit) + \"px\\\">\");\n    if(newText.indexOf(\">\") == -1) bit = null;\n  }\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<ff\", \">\");\n    if(bit != null) newText = newText.replace(\"<ff\" + bit + \">\", \"<font face=\\\"\" + bit + \"\\\">\");\n  }\n  newText = newText.replace(/¬/, \"<br/>\");\n  newText = newText.replace(/<fcBlack>/g, \"<font color=\\\"#000000\\\">\");\n  newText = newText.replace(/<fcWhite>/g, \"<font color=\\\"#FFFFFF\\\">\");\n  newText = newText.replace(/<fcRed>/g, \"<font color=\\\"#FF0000\\\">\");\n  newText = newText.replace(/<fcGreen>/g, \"<font color=\\\"#00FF00\\\">\");\n  newText = newText.replace(/<fcBlue>/g, \"<font color=\\\"#0000FF\\\">\");\n  newText = newText.replace(/<fcOrange>/g, \"<font color=\\\"#FFAA00\\\">\");\n\n  newText = newText.replace(/<fcCyan>/g, \"<font color=\\\"#00FFFF\\\">\");\n  newText = newText.replace(/<fcYellow>/g, \"<font color=\\\"#FFFF00\\\">\");\n  newText = newText.replace(/<fcMagenta>/g, \"<font color=\\\"#FF00FF\\\">\");\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<fcuint\", \">\");\n    if(bit != null) newText = newText.replace(\"<fcuint\" + bit + \">\", \"<font color=\\\"\" + ColorOperators.uinttoHEX(bit) + \"\\\">\");\n  }\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<frgb\", \">\");\n    if(bit != null) {\n      var rgb = bit.split(\".\");\n      newText = newText.replace(\"<frgb\" + bit + \">\", \"<font color=\\\"\" + ColorOperators.RGBtoHEX(Number(rgb[0]), Number(rgb[1]), Number(rgb[2])) + \"\\\">\");\n    }\n  }\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<fc\", \">\");\n    if(bit != null) newText = newText.replace(\"<fc\" + bit + \">\", \"<font color=\\\"#\" + bit + \"\\\">\");\n  }\n\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<tl\", \">\");\n    if(bit != null) newText = newText.replace(\"<tl\" + bit + \">\", \"<textformat leftmargin=\\\"\" + bit + \"\\\">\");\n  }\n  bit = \"\";\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<tv\", \">\");\n    if(bit != null) newText = newText.replace(\"<tv\" + bit + \">\", \"<textformat leading=\\\"\" + bit + \"\\\">\");\n  }\n\n  bit = \"\";\n  var href;\n  var text;\n  var target;\n\n\n  while(bit != null) {\n    bit = StringOperators.getFirstTextBetweenStrings(newText, \"<e\", \">\");\n    if(bit != null) {\n      href = bit.split(\"*\")[0];\n      text = bit.split(\"*\")[1];\n      if(bit.split(\"*\").length > 2 && bit.split(\"*\")[2] == \"s\") {\n        target = \"_self\";\n      } else {\n        target = \"_blank\";\n      }\n      if(href.substr(0, 7) == \"http://\" ||  href.substr(0, 8) == \"https://\") {\n        newText = newText.replace(\"<e\" + bit + \">\", \"<u><a href='\" + href + \"' target='\" + target + \"'>\" + text + \"</a></u>\");\n      } else {\n        //var index=getUniqueGlobalFunc(onEvent, scope);\n        //newText = newText.replace(\"<e\"+bit+\">\", \"<u><a href='javascript:clickLink()' onclick='event.preventDefault(); executeUniqueGlobalFunc(\"+index+\", \"+href+\");return false; '>\"+text+\"</a></u>\");\n        newText = newText.replace(\"<e\" + bit + \">\", \"<u><a href='javascript:FastHtml.clickLink(\\\"\" + href + \"\\\")' FastHtml.onclick='event.preventDefault(); clickLink(\\\"\" + href + \"\\\"); return false; '>\" + text + \"</a></u>\");\n      }\n    }\n  }\n\n  newText = newText.replace(/<pl>/g, \"<p align=\\\"left\\\">\");\n  newText = newText.replace(/<pc>/g, \"<p align=\\\"center\\\">\");\n  newText = newText.replace(/<pr>/g, \"<p align=\\\"right\\\">\");\n  newText = newText.replace(/<pj>/g, \"<p align=\\\"justify\\\">\");\n  newText = newText.replace(/<\\/f>/g, \"</font>\");\n  newText = newText.replace(/<\\/t>/g, \"</textformat>\");\n\n  // c.log(\"/////////FastHtml convertion////////\");\n  // c.log(newText);\n  // c.log(\"////////////////////////////////////\");\n\n  return newText;\n};\n\nFastHtml.clickLink = function(param) {\n  FastHtml.linkFunction.call(FastHtml.target, param);\n};\n\nFastHtml.findAndPlaceLinks = function(text) {\n  var newText = FastHtml._findAndPlaceLinksPrefix(text, \"http\");\n  return FastHtml._findAndPlaceLinksPrefix(newText, \"https\");\n};\nFastHtml._findAndPlaceLinksPrefix = function(text, prefix) {\n  var regexp = prefix == 'http' ? /http:\\/\\//g : /https:\\/\\//g;\n  var blocks = text.split(regexp);\n\n  if(blocks.length > 1) {\n    var blocks2 = [];\n    var indexS;\n    var url;\n\n    blocks2[0] = blocks[0];\n\n    for(var i = 1; blocks[i] != null; i++) {\n      indexS = blocks[i].search(/ |:|;/);\n      if(indexS > -1) {\n        url = prefix + '://' + blocks[i].substr(0, indexS);\n        blocks2[i] = '<e' + url + '*' + url + '>' + blocks[i].substr(indexS);\n      } else {\n        url = prefix + '://' + blocks[i].substr(0);\n        blocks2[i] = '<e' + url + '*' + url + '>';\n      }\n    }\n  }\n  return(blocks.length == 0 || blocks.length == 1) ? text : blocks2.join('');\n};\n\nFastHtml.findAndPlaceTwitterAdresses = function(text) {\n  var blocks = text.split(/@/g);\n\n  if(blocks.length > 1) {\n    var blocks2 = [];\n    var indexS;\n    var url;\n    var accountName;\n\n    blocks2[0] = blocks[0];\n\n    for(var i = 1; blocks[i] != null; i++) {\n      indexS = blocks[i].search(/ |:|;/);\n      if(indexS > -1) {\n        accountName = blocks[i].substr(0, indexS);\n        url = 'https://twitter.com/' + accountName;\n        blocks2[i] = '<e' + url + '*@' + accountName + '>' + blocks[i].substr(indexS);\n      } else {\n        accountName = blocks[i].substr(0);\n        url = 'https://twitter.com/' + accountName;\n        blocks2[i] = '<e' + url + '*@' + accountName + '>';\n      }\n    }\n  }\n\n  return(blocks.length == 0 || blocks.length == 1) ? text : blocks2.join('');\n};\n\nFastHtml.getColorTag = function(color) {\n  color = ColorOperators.colorStringToHEX(color);\n  return \"<font color=\\\"\" + color + \"\\\">\";\n};\n","import FastHtml from \"src/tools/utils/strings/FastHtml\";\n\nTextFieldHTML.prototype.constructor = TextFieldHTML;\n\n/**\n * @classdesc Instanciable class that manages and renders a text in an html div\n *\n * @param configuration configuration Object with parameters (x, y, width, text, fontColor, fontSize, fontName, fontStyle, linkFunction, target…)\n * @constructor\n * @category strings\n */\nfunction TextFieldHTML(configuration) {\n  configuration = configuration == null ? {} : configuration;\n\n  this.x = configuration.x == null ? 300 : configuration.x;\n  this.y = configuration.y == null ? 2 : configuration.y;\n  this.width = configuration.width == null ? 200 : configuration.width;\n\n  this.textColor = configuration.textColor == null ? 'black' : configuration.textColor;\n\n  this.backgroundColor = configuration.backgroundColor;\n\n  this.linkFunction = configuration.linkFunction;\n  this.target = configuration.target;\n\n  this.fastHTMLactive = configuration.fastHTMLactive == null ? true : configuration.fastHTMLactive;\n\n  this.text;\n\n  //////////\n\n  this._prevX;\n  this._prevY;\n  this._prevWidth;\n  this._prevHeight;\n\n  this.zIndex = 33;\n\n  this.main = document.getElementById('maindiv');\n  this.div = document.createElement('div2');\n  this.div.setAttribute('style', 'position:absolute;top:' + this.y + 'px;left:' + this.x + 'px;z-index:' + this.zIndex + ';');\n  this.main.appendChild(this.div);\n\n  this.setText(configuration.text == null ? '' : configuration.text);\n\n  this.draw();\n\n  var thisTextField = this;\n  var linkFunction = this.linkFunction;\n  var target = this.target;\n\n  if(this.target != null && this.linkFunction != null) {\n    FastHtml.target = this.target;\n    FastHtml.linkFunction = this.linkFunction;\n  }\n}\nexport default TextFieldHTML;\n\n\n\nTextFieldHTML.prototype.draw = function() {\n  //c.log('this.width, this._prevWidth', this.width, this._prevWidth);\n  if(this.x != this._prevX || this.y != this._prevY || this.width != this._prevWidth || this.height != this._prevHeight) {\n    this._prevX = this.x;\n    this._prevY = this.y;\n    this._prevWidth = this.width;\n    this._prevHeight = this.height;\n    //this.div.setAttribute('style', 'position:absolute;top:'+this.y+'px;left:'+this.x+'px;z-index:'+this.zIndex+'; width:'+this.width+'px;');//height:'+this.height+'px;');\n    this.div.setAttribute('style', 'position:absolute;top:' + this.y + 'px;left:' + this.x + 'px;z-index:' + this.zIndex + '; width:' + this.width + 'px; height:' + this.height + 'px;');\n  }\n};\n\nTextFieldHTML.prototype.setText = function(text) {\n  if(this.text != text) {\n    this.text = text;\n    this.div.innerHTML = this.fastHTMLactive ? FastHtml.expand(text) : text;\n  }\n};\n\nTextFieldHTML.prototype.getText = function() {\n  return this.DOMtext.value;\n};\n\n//\n","import Loader from \"src/tools/loaders/Loader\";\nimport List from \"src/dataStructures/lists/List\";\nimport LoadEvent from \"src/tools/loaders/LoadEvent\";\n\nMultiLoader.prototype = {};\nMultiLoader.prototype.constructor = MultiLoader;\n\n//include(frameworksRoot+\"Tools/loaders/Loader.js\");\n\n/**\n * MultiLoader\n * @constructor\n * @category misc\n */\nfunction MultiLoader() {\n  this.urlList = null;\n  this.onComplete = null;\n  this.iLoaded = 0;\n  this.target = null;\n  this.loading = false;\n\n  this.indexLoading;\n\n  ////datas\n  this.datasLoaded = null;\n\n  ////images\n  this.imagesLoaded = null;\n\n  this.priorityWeights;\n  this.associativeArray = [];\n\n  this.url_to_image = {};\n\n  this.simulateDelay = false;\n  this.DELAY_MILLISECONDS = 1000;\n  this.timer;\n}\nexport default MultiLoader;\n\n\n\nMultiLoader.prototype.loadDatas = function(urlList, onComplete, callee) {\n\n  this.urlList = urlList;\n  this.target = callee ? callee : arguments.callee;\n  this.onComplete = onComplete;\n\n  this.datasLoaded = new List();\n  this.nextDataLoading();\n};\n\nMultiLoader.prototype.nextDataLoading = function() {\n  //c.log(\"MultiLoader.prototype.nextDataLoading | this.iLoaded, this.urlList[this.iLoaded]:\", this.iLoaded, this.urlList[this.iLoaded]);\n  if(this.iLoaded < this.urlList.length) {\n    this.indexLoading = this.iLoaded;\n    Loader.loadData(this.urlList[this.indexLoading], this.onCompleteLoadData, this);\n    this.loading = true;\n  } else {\n    this.loading = false;\n  }\n};\n\nMultiLoader.prototype.onCompleteLoadData = function(e) {\n  if(this.priorityWeights != null) {\n    this.datasLoaded[this.urlList.indexOf(e.url)] = e.result;\n  } else {\n    this.datasLoaded.push(e.result);\n  }\n  this.associativeArray[this.indexLoading] = e.result;\n  //this.associativeArray[e.url] = e.result;\n  var multiE = new LoadEvent();\n  multiE.errorType = e.errorType;\n  multiE.result = this.datasLoaded;\n  multiE.url = e.url;\n\n  if(this.iLoaded + 1 >= this.urlList.length) this.loading = false;\n\n  this.onComplete.call(this.target, multiE);\n\n\n  this.iLoaded++;\n  //c.log('---> this.iLoaded, e.url', this.iLoaded, e.url);\n  this.nextDataLoading();\n};\n\n\n/////images\n\n\n\nMultiLoader.prototype.loadImages = function(urlList, onComplete, target, priorityWeights) {\n\n  this.urlList = urlList;\n  this.target = target ? target : arguments.callee;\n  this.onComplete = onComplete;\n  this.priorityWeights = priorityWeights;\n\n  this.imagesLoaded = new List();\n\n  this.nextImageLoading();\n};\n\n\nMultiLoader.prototype.onCompleteLoadImage = function(e) {\n  //c.log(\"onCompleteLoadImage, e.url, e.result\", e.url, e.result);\n  if(e.errorType == 1) {\n    if(this.priorityWeights != null) {\n      //this.imagesLoaded[this.urlList.indexOf(e.url)] = null;\n      this.imagesLoaded[this.indexLoading] = null;\n    } else {\n      this.imagesLoaded.push(null);\n    }\n    //this.associativeArray[e.url] = -1;\n    this.associativeArray[this.indexLoading] = -1;\n  } else {\n    if(this.priorityWeights != null) {\n      //this.imagesLoaded[this.urlList.indexOf(e.url)] = e.result;\n      this.imagesLoaded[this.indexLoading] = e.result;\n    } else {\n      this.imagesLoaded.push(e.result);\n    }\n    //this.associativeArray[e.url] = e.result;\n    this.associativeArray[this.indexLoading] = e.url;\n    this.url_to_image[e.url] = e.result;\n  }\n\n  var multiE = new LoadEvent();\n  multiE.result = this.imagesLoaded;\n  multiE.url = e.url;\n  multiE.lastImage = e.result;\n  multiE.indexImage = this.indexLoading;\n  if(this.onComplete != null) this.onComplete.call(this.target, multiE);\n\n  this.loading = false;\n\n  this.iLoaded++;\n  this.nextImageLoading();\n};\n\nMultiLoader.prototype.getImageFromUrl = function(url) {\n  return this.url_to_image[url];\n};\n\nMultiLoader.prototype.setPriorityWeights = function(weights) {\n  this.priorityWeights = weights;\n  //c.log(\"this.priorityWeights\", this.priorityWeights);\n  if(!this.loading) {\n    this.nextImageLoading();\n  }\n};\n\nMultiLoader.prototype.nextImageLoading = function(target) {\n  //c.log('nextImageLoading', this.iLoaded, \"/\", this.urlList.length);\n\n  if(this.simulateDelay || target != null) {\n    if(target == null) {\n      this.loading = true;\n      this.timer = setTimeout(this.nextImageLoading, this.DELAY_MILLISECONDS, this);\n      return;\n    } else {\n      target.loading = false;\n      target.simulateDelay = false;\n      target.nextImageLoading();\n      target.simulateDelay = true;\n      return;\n    }\n  }\n\n  if(this.iLoaded < this.urlList.length) {\n    if(this.priorityWeights != null) {\n      var iMax;\n      var max = -99999999;\n      var i;\n\n      for(i = 0; this.urlList[i] != null; i++) {\n        //if(this.priorityWeights[i]>max && this.associativeArray[this.urlList[i]]==null){\n        if(this.priorityWeights[i] > max && this.associativeArray[i] == null) {\n          max = this.priorityWeights[i];\n          iMax = i;\n        }\n      }\n\n      //c.log('max:', max);\n\n      if(max > 0) {\n        //c.log(\"MultiLoader | nextImageLoading:\", this.urlList[this.iLoaded]);\n\n        this.indexLoading = iMax;\n\n        Loader.loadImage(this.urlList[this.indexLoading], this.onCompleteLoadImage, this);\n        //Loader.loadImage(this.urlList[this.iLoaded], this.onCompleteLoadImage, this);\n\n        this.loading = true;\n      } else {\n        //c.log(\"MultiLoader stopped due to max wieght <= 0\");\n      }\n\n    } else {\n      this.indexLoading = this.iLoaded;\n      //c.log(\"MultiLoader | nextImageLoading:\", this.urlList[this.iLoaded]);\n      Loader.loadImage(this.urlList[this.indexLoading], this.onCompleteLoadImage, this);\n      this.loading = true;\n    }\n  } else {\n    this.loading = false;\n  }\n};\n\nMultiLoader.prototype.destroy = function() {\n  delete this.datasLoaded;\n  delete this.imagesLoaded;\n};\n","/**\n * @classdesc Functions to create interesting console output.\n *\n * @namespace\n * @category misc\n */\nfunction ConsoleTools() {}\nexport default ConsoleTools;\n\n\nConsoleTools._ticTime;\nConsoleTools._tacTime;\n\nConsoleTools.NumberTableOnConsole = function(table) {\n  var message = \"\";\n  var line;\n  var number;\n  var i;\n  var j;\n\n  for(j = 0; j < table[0].length; j++) {\n    line = \"|\";\n    for(i = 0; table[i] != null; i++) {\n      number = String(Math.floor(100 * table[i][j]) / 100).replace(/0./, \".\");\n      while(number.length < 3) number = \" \" + number;\n      line += number + \"|\";\n    }\n    message += line + \"\\n\";\n  }\n\n  console.log(message);\n\n  return message;\n};\n\n\nConsoleTools.tic = function(message) {\n  message = message || \"\";\n\n  ConsoleTools._ticTime = ConsoleTools._tacTime = new Date().getTime();\n  ConsoleTools._nTacs = 0;\n  console.log('°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° tic °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° [' + message + ']');\n};\n\nConsoleTools.tac = function(message) {\n  message = message || \"\";\n\n  var lastTac = ConsoleTools._tacTime;\n  ConsoleTools._tacTime = new Date().getTime();\n  console.log('°°°°°°° tac [' + message + '], t from tic:' + (ConsoleTools._tacTime - ConsoleTools._ticTime) + ', t from last tac:' + ((ConsoleTools._tacTime - lastTac)));\n};\n","/**\n * @classdesc Provides a set of tools that work with JSON.\n *\n * @namespace\n * @category misc\n */\nfunction JSONUtils() {}\nexport default JSONUtils;\n\nJSONUtils.stringifyAndPrint = function(object) {\n  var jsonString = JSON.stringify(object);\n  console.log(\"__________________________________________________________________________________________________________________________________________________________\");\n  console.log(jsonString);\n  console.log(\"__________________________________________________________________________________________________________________________________________________________\");\n};\n\n/**\n * This function is not used in the framework.\n * It's used only for GIT / Jenkins tests\n */\nJSONUtils.dummy2 = function() {\n  return null;\n};\n","/**\n * @classdesc StringUtils\n *\n * @namespace\n * @category strings\n */\nfunction StringUtils() {}\nexport default StringUtils;\n\nStringUtils.stringtoXML = function(text) {\n  if(window.ActiveXObject) {\n    var doc = new ActiveXObject('Microsoft.XMLDOM');\n    doc.async = 'false';\n    doc.loadXML(text);\n  } else {\n    var parser = new DOMParser();\n    var doc = parser.parseFromString(text, 'text/xml');\n  }\n  return doc;\n};\n","function Navigator() {}\nexport default Navigator;\n\nvar userAgent;\nvar userAgentVersion;\nNavigator.IE = \"IE\";\nNavigator.NS = \"NS\";\nNavigator.IOS = \"IOS\";\n\nfunction detectUserAgent() {\n  if(/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)) { //test for MSIE x.x;\n    userAgent = Navigator.IE;\n    userAgentVersion = Number(RegExp.$1); // capture x.x portion and store as a number\n  }\n  if(navigator.userAgent.match(/iPad/i) != null) {\n    userAgent = Navigator.IOS;\n  }\n  if(/Firefox[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) { //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);\n    userAgent = Navigator.NS;\n    userAgentVersion = Number(RegExp.$1); // capture x.x portion and store as a number\n  }\n};\n\nNavigator.getUserAgent = function() {\n  return userAgent;\n};\nNavigator.getUserAgentVersion = function() {\n  return userAgentVersion;\n};","import NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport List from \"src/dataStructures/lists/List\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport { TwoPi } from \"src/Global\";\n\n/**\n * @classdesc Force layout\n *\n * @constructor\n * @category networks\n */\nfunction Forces(configuration) {\n  this.k = configuration.k ? configuration.k : 0.01;\n  this.dEqSprings = configuration.dEqSprings ? configuration.dEqSprings : 100;\n  this.dEqRepulsors = configuration.dEqRepulsors ? configuration.dEqRepulsors : 500;\n  this.friction = configuration.friction ? configuration.friction : 0.8;\n\n  this.nodeList = new NodeList();\n\n  this.forcesList = new List();\n  this.equilibriumDistances = new NumberList();\n  this.forcesTypeList = new List();\n  this.fromNodeList = new NodeList();\n  this.toNodeList = new NodeList();\n\n  this._i0 = 0;\n}\nexport default Forces;\n\n/**\n * eqDistancesMode:\n * \t\t0: all distances this.dEqSprings\n * \t\t1: shorter distances for heavy relations\n * \t\t2: nodes degrees sum proportional to distance\n */\nForces.prototype.forcesForNetwork = function(network, initRadius, initCenter, eqDistancesMode, addShortRepulsorsOnRelated) {\n  initRadius = initRadius || 0;\n  initCenter = initCenter || new Point(0, 0);\n  eqDistancesMode = eqDistancesMode == null ? 0 : eqDistancesMode;\n  addShortRepulsorsOnRelated = addShortRepulsorsOnRelated == null ? false : addShortRepulsorsOnRelated;\n\n\n  this.forcesList = new List();\n  this.equilibriumDistances = new NumberList();\n  this.forcesTypeList = new List();\n  this.fromNodeList = new NodeList();\n  this.toNodeList = new NodeList();\n\n  var node0;\n  var node1;\n  var nNodes = network.nodeList.length;\n  var i;\n  var j;\n  var relations = network.relationList;\n  var angle;\n\n  for(i = 0; i < nNodes; i++) {\n    if(initRadius == 0) {\n      this.addNode(network.nodeList[i], new Point(network.nodeList[i].x, network.nodeList[i].y));\n    } else {\n      angle = Math.random() * TwoPi;\n      this.addNode(network.nodeList[i], new Point(initCenter.x + initRadius * Math.cos(angle), initCenter.y + initRadius * Math.sin(angle)));\n    }\n  }\n\n  for(i = 0; i < nNodes - 1; i++) {\n    node0 = network.nodeList[i];\n    for(j = i + 1; j < nNodes; j++) {\n      node1 = network.nodeList[j];\n      if(relations.nodesAreConnected(node0, node1)) {\n        switch(eqDistancesMode) {\n          case 0:\n            this.equilibriumDistances.push(this.dEqSprings);\n            break;\n          case 1:\n            this.equilibriumDistances.push((1.1 - relations.getFirstRelationByIds(node0.id, node1.id, false).weight) * this.dEqSprings);\n            break;\n          case 2:\n            this.equilibriumDistances.push(Math.sqrt(Math.min(node0.nodeList.length, node1.nodeList.length)) * this.dEqSprings * 0.1);\n            break;\n        }\n\n        this.addForce(node0, node1, \"Spring\");\n\n        if(addShortRepulsorsOnRelated) {\n          this.equilibriumDistances.push(this.dEqRepulsors * 0.5);\n          this.addForce(node0, node1, \"Repulsor\");\n        }\n\n      } else {\n        this.equilibriumDistances.push(this.dEqRepulsors);\n        this.addForce(node0, node1, \"Repulsor\");\n      }\n    }\n  }\n};\n\nForces.prototype.addNode = function(node, initPosition, initSpeed) {\n  initPosition = initPosition == null ? new Point(Math.random() * 200 - 100, Math.random() * 200 - 100) : initPosition;\n  initSpeed = initSpeed == null ? new Point(0, 0) : initSpeed;\n  this.nodeList.addNode(node);\n  node.x = initPosition.x;\n  node.y = initPosition.y;\n  node.vx = initSpeed.x;\n  node.vy = initSpeed.y;\n  node.ax = 0;\n  node.ay = 0;\n};\n\nForces.prototype.addForce = function(node0, node1, type, equilibriumDistance) {\n  this.fromNodeList.addNode(node0);\n  this.toNodeList.addNode(node1);\n  this.forcesList.push(node0.id + \"*\" + node1.id + \"*\" + type);\n  this.forcesTypeList.push(type);\n  if(equilibriumDistance != null) this.equilibriumDistances.push(equilibriumDistance);\n};\n\nForces.prototype.calculate = function() {\n  var i;\n  var node0, node1;\n  var type;\n  var force;\n  var dx, dy, d;\n  var eqDistance;\n\n  // 1. reset accelerations\n  this._resetAccelerations(); //TODO: this can be removed if accelerations are resetd in applyForces [!]\n\n  // 2. calculate new accelerations from forces\n  for(i = 0; this.forcesList[i] != null; i++) {\n    node0 = this.fromNodeList[i];\n    node1 = this.toNodeList[i];\n    type = this.forcesTypeList[i];\n    dx = node1.x - node0.x;\n    dy = node1.y - node0.y;\n    d = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n    eqDistance = this.equilibriumDistances[i];\n    if(type == 'Repulsor' && d > eqDistance) continue;\n    if(type == 'Attractor' && d < eqDistance) continue;\n\n    switch(type) {\n      case \"Spring\":\n      case \"Repulsor\":\n      case \"Attractor\":\n        force = this.k * (d - eqDistance) / d;\n        node0.ax += force * dx;\n        node0.ay += force * dy;\n        node1.ax -= force * dx;\n        node1.ay -= force * dy;\n        break;\n      case \"DirectedSpring\":\n        force = this.k * (d - eqDistance) / d;\n        node1.ax -= force * dx;\n        node1.ay -= force * dy;\n        break;\n      case \"DirectedRepulsor\":\n        if(d < eqDistance) {\n          force = this.k * (d - eqDistance) / d;\n          node1.ax -= force * dx;\n          node1.ay -= force * dy;\n        }\n        break;\n    }\n  }\n};\n\nForces.prototype.attractionToPoint = function(point, strength, limit) {\n  strength = strength == null ? 1 : strength;\n  var node;\n  var force;\n  var dx;\n  var dy;\n  var d2;\n  for(var i = 0; this.nodeList[i] != null; i++) {\n    node = this.nodeList[i];\n    dx = point.x - node.x;\n    dy = point.y - node.y;\n    d2 = Math.pow(dx, 2) + Math.pow(dy, 2);\n    if(limit != null) {\n      force = Math.min(strength / d2, limit);\n    } else {\n      force = strength / d2;\n    }\n    node.ax += force * dx;\n    node.ay += force * dy;\n  }\n};\n\n\nForces.prototype.avoidOverlapping = function(delta) {\n  delta = delta || 0;\n\n  var i;\n  var node0;\n  var node1;\n  var x0l, y0t, x0r, y0b, x1l, y1t, x1r, y1b;\n  var vx;\n  var vy;\n  var dM = delta * 0.5;\n  var l = this.nodeList.length;\n\n  console.log(this.nodeList.length);\n\n  for(i = 0; this.nodeList[i + 1] != null; i++) {\n    node0 = this.nodeList[(i + this._i0) % l];\n    x0l = node0.x - node0.width * 0.5 - dM;\n    x0r = node0.x + node0.width * 0.5 + dM;\n    y0t = node0.y - node0.height * 0.5 - dM;\n    y0b = node0.y + node0.height * 0.5 + dM;\n    for(var j = i + 1; this.nodeList[j] != null; j++) {\n      node1 = this.nodeList[(j + this._i0 + i) % l];\n      x1l = node1.x - node1.width * 0.5 - dM;\n      x1r = node1.x + node1.width * 0.5 + dM;\n      y1t = node1.y - node1.height * 0.5 - dM;\n      y1b = node1.y + node1.height * 0.5 + dM;\n      if(((x0l > x1l && x0l < x1r) ||  (x0r > x1l && x0r < x1r)) && ((y0t > y1t && y0t < y1b) || (y0b > y1t && y0b < y1b))) {\n        vx = node1.x - node0.x;\n        vy = node1.y - node0.y;\n\n        if(Math.abs(vx) > Math.abs(vy)) {\n          if(vx > 0) {\n            node0.x -= (x0r - x1l) * 0.5;\n            node1.x += (x0r - x1l) * 0.5;\n          } else {\n            node0.x += (x1r - x0l) * 0.5;\n            node1.x -= (x1r - x0l) * 0.5;\n          }\n        } else {\n          if(vy > 0) {\n            node0.y -= (y0b - y1t) * 0.5;\n            node1.y += (y0b - y1t) * 0.5;\n          } else {\n            node0.y += (y1b - y0t) * 0.5;\n            node1.y -= (y1b - y0t) * 0.5;\n          }\n        }\n\n        //setStroke(Math.abs(vx)>Math.abs(vy)?'blue':'red');\n        //sCircle((node0.x+node1.x)*0.5, (node0.y+node1.y)*0.5, Math.max(Math.abs(vx), Math.abs(vy))*0.5);\n      }\n    }\n  }\n  this._i0++;\n};\n\nForces.prototype.avoidOverlappingRadial = function(delta, K) {\n  delta = delta || 0;\n  K = K || 1;\n  var i;\n  var node0;\n  var node1;\n  var l = this.nodeList.length;\n  var vx;\n  var vy;\n  var d;\n  var dMin;\n  var k;\n  var delta2 = delta * 2;\n\n  for(i = 0; this.nodeList[i + 1] != null; i++) {\n    node0 = this.nodeList[(i + this._i0) % l];\n    for(var j = i + 1; this.nodeList[j] != null; j++) {\n      node1 = this.nodeList[(j + this._i0 + i) % l];\n      vx = node1.x - node0.x;\n      vy = node1.y - node0.y;\n      d = Math.pow(vx, 2) + Math.pow(vy, 2);\n      dMin = Math.pow(node0.r + node1.r + delta2, 2);\n      if(d < dMin) {\n        dMin = Math.sqrt(dMin);\n        d = Math.sqrt(d);\n        k = 0.5 * (dMin - d) / d;\n        node0.x -= K * k * vx;\n        node0.y -= K * k * vy;\n        node1.x += K * k * vx;\n        node1.y += K * k * vy;\n      }\n    }\n  }\n  this._i0++;\n};\n\n\n\nForces.prototype.applyForces = function() {\n  var node;\n\n  for(var i = 0; this.nodeList[i] != null; i++) {\n    node = this.nodeList[i];\n    node.vx += node.ax;\n    node.vy += node.ay;\n    node.vx *= this.friction;\n    node.vy *= this.friction;\n    node.x += node.vx;\n    node.y += node.vy;\n  }\n};\n\nForces.prototype.deactivateForcesFromNode = function(node) {\n  node.vx = node.vy = node.ax = node.ay = 0;\n};\n\nForces.prototype.destroy = function() {\n  delete this.k;\n  delete this.dEqSprings;\n  delete this.dEqRepulsors;\n  delete this.friction;\n  this.nodeList.destroy();\n  delete this.nodeList;\n  this.forcesList.destroy();\n  delete this.forcesList;\n  this.equilibriumDistances.destroy();\n  delete this.equilibriumDistances;\n  this.forcesTypeList.destroy();\n  delete this.forcesTypeList;\n  this.fromNodeList.destroy();\n  delete this.fromNodeList;\n  this.toNodeList.destroy();\n  delete this.toNodeList;\n  delete this._i0;\n};\n\n///////////////////////////////////////////PRIVATE\n\n\nForces.prototype._resetAccelerations = function() {\n  var node;\n  for(var i = 0; this.nodeList[i] != null; i++) {\n    node = this.nodeList[i];\n    node.ax = 0;\n    node.ay = 0;\n  }\n};\n","import Point from \"src/dataStructures/geometry/Point\";\nimport Point3D from \"src/dataStructures/geometry/Point3D\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Polygon3D from \"src/dataStructures/geometry/Polygon3D\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport { instantiateWithSameType } from \"src/tools/utils/code/ClassUtils\";\n\nEngine3D.prototype.constructor = Engine3D;\n\n/**\n * @classdesc Engine3D\n *\n * @param {Object} configuration Configuration for engine\n * @param {Number} configuration.lens Distance of camera from scene\n * @param {Point3D} configuration.angles Initial angle of camera\n * @constructor\n * @example\n * // creates a new Engine3D instance.\n * var engine = new Engine3D({\n *   lens:300\n * });\n * @category geometry\n */\nfunction Engine3D(configuration) {\n  configuration = configuration == null ? {} : configuration;\n  this.lens = configuration.lens == null ? 300 : configuration.lens;\n\n  this._freeRotation = false;\n\n  this.setBasis(new Polygon3D(new Point3D(1, 0, 0), new Point3D(0, 1, 0), new Point3D(0, 0, 1)));\n\n  this._cuttingPlane = 10;\n\n  if(configuration.angles != null) this.setAngles(configuration.angles);\n}\nexport default Engine3D;\n\nEngine3D.prototype.setBasis = function(point3D) {\n  this._basis = point3D.clone();\n  this._basisBase = point3D.clone();\n  this._provisionalBase = point3D.clone();\n}\n\n/**\n * setAngles - set viewing angle of camera on 3D scene.\n *\n * @param {Point3D} point3D viewing angle of the camera.\n * @example\n * var engine = new Engine3D();\n * engine.setAngles(new Point3D(0.2,-HalfPi*1.2, 0.05));\n */\nEngine3D.prototype.setAngles = function(point3D) {\n  this._angles = point3D.clone();\n  this._freeRotation = false;\n  this._basis = this.basis3DRotation(this._basisBase, this._angles);\n}\n\n/**\n * applyRotation - Add rotation to existing 3D scene.\n *\n * @param {Point3D} planeVector rotation vector to add to scene.\n */\nEngine3D.prototype.applyRotation = function(planeVector) {\n  if(!this._freeRotation) {\n    this._freeRotation = true;\n    this.updateAngles();\n    this._provisionalBase[0] = this._basis[0].clone();\n    this._provisionalBase[1] = this._basis[1].clone();\n    this._provisionalBase[2] = this._basis[2].clone();\n  }\n  this._basis[0] = this.point3DRotation(this._provisionalBase[0], new Point3D(-planeVector.y, planeVector.x, 0));\n  this._basis[1] = this.point3DRotation(this._provisionalBase[1], new Point3D(-planeVector.y, planeVector.x, 0));\n  this._basis[2] = this.point3DRotation(this._provisionalBase[2], new Point3D(-planeVector.y, planeVector.x, 0));\n  this._provisionalBase[0] = this._basis[0].clone();\n  this._provisionalBase[1] = this._basis[1].clone();\n  this._provisionalBase[2] = this._basis[2].clone();\n}\n\n/**\n * projectPoint3D - Use the current rotation of the scene and the viewpoint\n * of the camera to project a single point into this space.\n *\n * @param {Point3D} point3D point to project\n */\nEngine3D.prototype.projectPoint3D = function(point3D) {\n  var prescale = this.lens / (this.lens + (this._basis[0].z * point3D.x + this._basis[1].z * point3D.y + this._basis[2].z * point3D.z));\n  return new Point3D((this._basis[0].x * point3D.x + this._basis[1].x * point3D.y + this._basis[2].x * point3D.z) * prescale, (this._basis[0].y * point3D.x + this._basis[1].y * point3D.y + this._basis[2].y * point3D.z) * prescale, prescale);\n}\n\nEngine3D.prototype.projectCoordinates = function(x, y, z) {\n  var prescale = this.lens / (this.lens + (this._basis[0].z * x + this._basis[1].z * y + this._basis[2].z * z));\n  return new Point3D((this._basis[0].x * x + this._basis[1].x * y + this._basis[2].x * z) * prescale, (this._basis[0].y * x + this._basis[1].y * y + this._basis[2].y * z) * prescale, prescale);\n}\n\nEngine3D.prototype.projectPoint3DNode = function(node) {\n  var prescale = this.lens / (this.lens + (this._basis[0].z * node.x + this._basis[1].z * node.y + this._basis[2].z * node.z));\n  return new Point3D((this._basis[0].x * node.x + this._basis[1].x * node.y + this._basis[2].x * node.z) * prescale, (this._basis[0].y * node.x + this._basis[1].y * node.y + this._basis[2].y * node.z) * prescale, prescale);\n}\n\nEngine3D.prototype.scale = function(point3D) {\n  return this.lens / (this.lens + (this._basis[0].z * point3D.x + this._basis[1].z * point3D.y + this._basis[2].z * point3D.z));\n}\n\n\nEngine3D.prototype.sortedIndexesByPointsScale = function(polygon3D) {\n  var pairsArray = new Array();\n\n  for(var i = 0; polygon3D[i] != null; i++) {\n    pairsArray[i] = [polygon3D[i], i];\n  }\n\n  UTLITARY_GLOBAL_VAR = this._basis;\n  pairsArray = pairsArray.sort(this._sortingCriteria, this._basis);\n  UTLITARY_GLOBAL_VAR = null;\n\n  var indexes = new NumberList();\n\n  for(var i = 0; polygon3D[i] != null; i++) {\n    indexes[i] = pairsArray[i][1];\n  }\n\n  return indexes;\n}\n\nEngine3D.prototype.sortListByPointsScale = function(list, polygon3D) {\n  var pairsArray = new Array();\n\n  for(var i = 0; list[i] != null; i++) {\n    pairsArray[i] = [polygon3D[i], list[i]];\n  }\n\n  UTLITARY_GLOBAL_VAR = this._basis;\n  pairsArray = pairsArray.sort(this._sortingCriteria, this._basis);\n  UTLITARY_GLOBAL_VAR = null;\n\n  var newList = instantiateWithSameType(list);\n  newList.name = list;\n\n  for(var i = 0; list[i] != null; i++) {\n    newList[i] = pairsArray[i][1];\n  }\n\n  return newList;\n}\nEngine3D.prototype._sortingCriteria = function(array0, array1, basis) {\n  var point3D0 = array0[0];\n  var point3D1 = array1[0];\n  return(UTLITARY_GLOBAL_VAR[0].z * point3D0.x + UTLITARY_GLOBAL_VAR[1].z * point3D0.y + UTLITARY_GLOBAL_VAR[2].z * point3D0.z < UTLITARY_GLOBAL_VAR[0].z * point3D1.x + UTLITARY_GLOBAL_VAR[1].z * point3D1.y + UTLITARY_GLOBAL_VAR[2].z * point3D1.z) ? 1 : -1;\n}\n\n\n//private methods\n\nEngine3D.prototype.updateAngles = function() {\n  this._angles = this.getEulerAngles();\n};\n\nEngine3D.prototype.getEulerAngles = function() {\n  return new Point3D(Math.atan2(-this._basis[1].z, this._basis[2].z), Math.asin(this._basis[0].z), Math.atan2(-this._basis[0].y, this._basis[0].x));\n};\n\n\n//rotation\n\n\n//these must be at Operators3D\n\nEngine3D.prototype.basis3DRotation = function(basis, angles) {\n  var ca = Math.cos(angles.x);\n  var sa = Math.sin(angles.x);\n  var cb = Math.cos(angles.y);\n  var sb = Math.sin(angles.y);\n  var cg = Math.cos(angles.z);\n  var sg = Math.sin(angles.z);\n\n  return new Polygon3D(new Point3D(basis[0].x * cg * cb + basis[0].y * (cg * sa * sb + sg * ca) + basis[0].z * (sg * sa - cg * ca * sb), -basis[0].x * sg * cb + basis[0].y * (cg * ca - sg * sa * sb) + basis[0].z * (sg * ca * sb + cg * sa), basis[0].x * sb - basis[0].y * sa * cb + basis[0].z * cb * ca), new Point3D(basis[1].x * cg * cb + basis[1].y * (cg * sa * sb + sg * ca) + basis[1].z * (sg * sa - cg * ca * sb), -basis[1].x * sg * cb + basis[1].y * (cg * ca - sg * sa * sb) + basis[1].z * (sg * ca * sb + cg * sa), basis[1].x * sb - basis[1].y * sa * cb + basis[1].z * cb * ca), new Point3D(basis[2].x * cg * cb + basis[2].y * (cg * sa * sb + sg * ca) + basis[2].z * (sg * sa - cg * ca * sb), -basis[2].x * sg * cb + basis[2].y * (cg * ca - sg * sa * sb) + basis[2].z * (sg * ca * sb + cg * sa), basis[2].x * sb - basis[2].y * sa * cb + basis[2].z * cb * ca));\n\n};\n\nEngine3D.prototype.point3DRotation = function(point, angles) {\n  var ca = Math.cos(angles.x);\n  var sa = Math.sin(angles.x);\n  var cb = Math.cos(angles.y);\n  var sb = Math.sin(angles.y);\n  var cg = Math.cos(angles.z);\n  var sg = Math.sin(angles.z);\n  return new Point3D(\n    point.x * cg * cb + point.y * (cg * sa * sb + sg * ca) + point.z * (sg * sa - cg * ca * sb), -point.x * sg * cb + point.y * (cg * ca - sg * sa * sb) + point.z * (sg * ca * sb + cg * sa),\n    point.x * sb - point.y * sa * cb + point.z * cb * ca\n  );\n};\n\n\n\n\nEngine3D.prototype.line3D = function(point0, point1) {\n  var polygon = new Polygon();\n\n  var p0 = point0; //while there's no Transformation3D'\n  var prescale0 = this.lens / (this.lens + (this._basis[0].z * p0.x + this._basis[1].z * p0.y + this._basis[2].z * p0.z));\n\n  //\n  var p1 = point1;\n  var prescale1 = this.lens / (this.lens + (this._basis[0].z * p1.x + this._basis[1].z * p1.y + this._basis[2].z * p1.z));\n\n  if(prescale0 > 0 || prescale1 > 0) {\n    if(prescale0 > 0 && prescale1 > 0) {\n      polygon.push(new Point((this._basis[0].x * p0.x + this._basis[1].x * p0.y + this._basis[2].x * p0.z) * prescale0, (this._basis[0].y * p0.x + this._basis[1].y * p0.y + this._basis[2].y * p0.z) * prescale0));\n      polygon.push(new Point((this._basis[0].x * p1.x + this._basis[1].x * p1.y + this._basis[2].x * p1.z) * prescale1, (this._basis[0].y * p1.x + this._basis[1].y * p1.y + this._basis[2].y * p1.z) * prescale1));\n      return polygon;\n    } else {\n      var p0B = new Point3D(this._basis[0].x * p0.x + this._basis[1].x * p0.y + this._basis[2].x * p0.z, this._basis[0].y * p0.x + this._basis[1].y * p0.y + this._basis[2].y * p0.z, this._basis[0].z * p0.x + this._basis[1].z * p0.y + this._basis[2].z * p0.z);\n      var p1B = new Point3D(this._basis[0].x * p1.x + this._basis[1].x * p1.y + this._basis[2].x * p1.z, this._basis[0].y * p1.x + this._basis[1].y * p1.y + this._basis[2].y * p1.z, this._basis[0].z * p1.x + this._basis[1].z * p1.y + this._basis[2].z * p1.z);\n      var t = (-this.lens + this._cuttingPlane - p0B.z) / (p1B.z - p0B.z);\n      var pM = new Point3D(p0B.x + t * (p1B.x - p0B.x), p0B.y + t * (p1B.y - p0B.y), -this.lens + this._cuttingPlane);\n      var prescaleM = this.lens / (this.lens + pM.z);\n      if(prescale0 > 0) {\n        polygon.push(new Point(p0B.x * prescale0, p0B.y * prescale0));\n        polygon.push(new Point(pM.x * prescaleM, pM.y * prescaleM));\n      } else {\n        polygon.push(new Point(pM.x * prescaleM, pM.y * prescaleM));\n        polygon.push(new Point(p1B.x * prescale1, p1B.y * prescale1));\n      }\n      return polygon;\n    }\n  }\n  return null;\n};\n\nEngine3D.prototype.quadrilater = function(p0, p1, p2, p3) {\n  var polygon3D = new Polygon3D();\n\n  var l0 = this.line3D(p0, p1);\n  var l1 = this.line3D(p1, p2);\n  var l2 = this.line3D(p2, p3);\n  var l3 = this.line3D(p3, p0);\n\n  if(l0 != null) {\n    if(l3 == null ||  (l0[0].x != l3[1].x && l0[0].y != l3[1].y)) polygon3D.push(l0[0]);\n    polygon3D.push(l0[1]);\n  }\n  if(l1 != null) {\n    if(l0 == null ||  (l1[0].x != l0[1].x && l1[0].y != l0[1].y)) polygon3D.push(l1[0]);\n    polygon3D.push(l1[1]);\n  }\n  if(l2 != null) {\n    if(l1 == null || (l2[0].x != l1[1].x && l2[0].y != l1[1].y)) polygon3D.push(l2[0]);\n    polygon3D.push(l2[1]);\n  }\n  if(l3 != null) {\n    if(l2 == null || (l3[0].x != l2[1].x && l3[0].y != l2[1].y)) polygon3D.push(l3[0]);\n    polygon3D.push(l3[1]);\n  }\n\n  return polygon3D;\n};\n","import Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\nimport { TwoPi } from \"src/Global\";\n\n\nfunction CountryListDraw() {}\nexport default CountryListDraw;\n\n\nCountryListDraw.drawCountriesAsCircles = function(context, countryList, radiusList, frame, geoFrame, colors) {\n  geoFrame = geoFrame == null ? new Rectangle(-180, -90, 360, 180) : geoFrame;\n  colors = colors == null ? ColorListGenerators.createColorListWithSingleColor(countryList.length, 'rgba(100,100,100,0.6)') : colors;\n\n  var dX = frame.width / geoFrame.width;\n  var dY = frame.height / geoFrame.height;\n\n  var country;\n\n  for(var i = 0; countryList[i] != null; i++) {\n    if(radiusList[i] < 0.5) continue;\n\n    country = countryList[i];\n\n    context.fillStyle = colors[i];\n    context.beginPath();\n    context.arc(frame.x + dX * (country.geoCenter.x - geoFrame.x), frame.getBottom() - dY * (country.geoCenter.y - geoFrame.y), radiusList[i], 0, TwoPi);\n    context.fill();\n  }\n};\n\nCountryListDraw.drawCountriesPolygons = function(context, countryList, frame, geoFrame, colors, lineWidth, lineColor) {\n  geoFrame = geoFrame == null ? new Rectangle(-180, -90, 360, 180) : geoFrame;\n  colors = colors == null ? ColorListGenerators.createColorListWithSingleColor(countryList.length, 'rgba(100,100,100,0.6)') : colors;\n\n  var dX = frame.width / geoFrame.width;\n  var dY = frame.height / geoFrame.height;\n\n  var country;\n  var polygonList;\n  var polygon;\n\n  if(lineWidth != null) context.lineWidth = lineWidth;\n  if(lineColor != null) context.strokeStyle = lineColor;\n\n  for(var i = 0; countryList[i] != null; i++) {\n    country = countryList[i];\n\n    polygonList = country.polygonList;\n\n    context.fillStyle = colors[i];\n\n    for(var j = 0; polygonList[j] != null; j++) {\n      polygon = polygonList[j];\n      context.beginPath();\n      context.moveTo(frame.x + dX * (polygon[0].x - geoFrame.x), frame.getBottom() - dY * (polygon[0].y - geoFrame.y));\n      for(var k = 1; polygon[k] != null; k++) {\n        context.lineTo(frame.x + dX * (polygon[k].x - geoFrame.x), frame.getBottom() - dY * (polygon[k].y - geoFrame.y));\n      }\n      context.fill();\n      if(lineWidth != null) context.stroke();\n    }\n  }\n};","import Polygon3D from \"src/dataStructures/geometry/Polygon3D\";\nimport Point3D from \"src/dataStructures/geometry/Point3D\";\n\nfunction CirclesVisOperators() {}\nexport default CirclesVisOperators;\n\nCirclesVisOperators.circlesCloud = function(weights, frame, margin) {\n  if(weights == null ||  weights.length == 0) return null;\n\n  margin = margin == null ? 0 : margin;\n\n  var normWeights = weights.getNormalizedToMax().sqrt();\n  var circlesPlaced = new Polygon3D();\n\n  console.log('  o', weights.length, normWeights);\n\n  var dL = 6;\n\n  var a = 0;\n  var r = 0;\n\n  var px = 0;\n  var py = 0;\n  var center = frame.getCenter();\n  var rMax = normWeights[0] * 100;\n  var rCircle;\n  var firstR;\n\n  var prop = frame.width / frame.height;\n\n  for(var i = 0; normWeights[i] != null; i++) {\n    rCircle = normWeights[i] * 100;\n    if(i == 0) {\n      px = center.x;\n      py = center.y;\n      firstR = rCircle;\n    } else {\n      a = 0; //i*0.5;\n      r = firstR + rCircle + margin + 0.1;\n      while(CirclesVisOperators._pointInCircles(circlesPlaced, px, py, rCircle, margin)) { //StringListVisOperators._pointInRectangles(rectanglesPlaced, px, py, w, h, margin)){\n        r += 0.1;\n        a += r * 0.005;\n\n        px = center.x + prop * r * Math.cos(a);\n        py = center.y + r * Math.sin(a);\n      }\n      rMax = Math.max(rMax, prop * r + normWeights[i] * 100);\n    }\n\n    circlesPlaced[i] = new Point3D(px, py, rCircle);\n  }\n\n  var circle;\n  prop = 0.5 * frame.width / (rMax + 0.001);\n  for(i = 0; circlesPlaced[i] != null; i++) {\n    circle = circlesPlaced[i];\n    circle.x = center.x + (circle.x - center.x) * prop;\n    circle.y = center.y + (circle.y - center.y) * prop;\n    circle.z *= prop;\n  }\n\n  return circlesPlaced;\n};\n\nCirclesVisOperators._pointInCircles = function(circles, px, py, r, margin) {\n  var circle;\n  for(var i = 0; circles[i] != null; i++) {\n    circle = circles[i];\n    if(Math.pow(circle.x - px, 2) + Math.pow(circle.y - py, 2) < Math.pow(circle.z + r + margin, 2)) return true;\n  }\n  return false;\n};","import {\n  setFill,\n  setText,\n  fRect,\n  fsText,\n  drawImage,\n  setStroke\n} from \"src/tools/graphic/SimpleGraphics\";\nimport { context } from \"src/Global\";\n\n\nfunction ColorsDraw() {}\nexport default ColorsDraw;\n\n/**\n * draws a color scale, with optional min and max associated values\n * @param  {Rectangle} frame\n * @param  {ColorScale} colorScale\n *\n * @param  {Number} minValue value associated to min color\n * @param  {Number} maxValue value associated to max color\n * tags:draw\n */\nColorsDraw.drawColorScaleLegend = function(frame, colorScale, minValue, maxValue) {\n  // TODO refactor this to import context from Global and not reassign it.\n  var change = frame.memory == null || frame.width != frame.memory.w || frame.height != frame.memory.h || colorScale != frame.memory.cS || minValue != frame.memory.min || maxValue != frame.memory.max;\n\n  if(change) {\n    frame.memory = {\n      w: frame.width,\n      h: frame.height,\n      cS: colorScale,\n      min: minValue,\n      max: maxValue\n    };\n\n    ///// capture image 1\n    // TODO refactor to not reassign context\n    // var newCanvas = document.createElement(\"canvas\");\n    // newCanvas.width = frame.width;\n    // newCanvas.height = frame.height;\n    // var newContext = newCanvas.getContext(\"2d\");\n    // newContext.clearRect(0, 0, frame.width, frame.height);\n    // var mainContext = context;\n    // context = newContext;\n    /////\n\n    var x;\n\n    if(frame.width > frame.height) {\n\n      for(x = 0; x < frame.width; x += 2) {\n        setFill(colorScale(x / frame.width));\n        fRect(x, 0, 2, frame.height);\n      }\n\n      setStroke('rgba(0,0,0,0.8)', 3);\n\n      if(minValue != null) {\n        setText('white', 12, null, 'left', 'middle');\n        fsText(minValue, 2, frame.height * 0.5);\n      }\n\n      if(maxValue != null) {\n        setText('white', 12, null, 'right', 'middle');\n        fsText(maxValue, frame.width - 2, frame.height * 0.5);\n      }\n    } else {\n\n      //finis this, with color scale going uppwards, and texts for min max values\n\n      for(x = 0; x < frame.height; x += 2) {\n        setFill(colorScale(x / frame.height));\n        fRect(0, x, frame.width, 2);\n      }\n    }\n\n\n\n\n    //// capture image 2\n    // TODO refactor to not reassign context\n    // context = mainContext;\n    // frame.memory.image = new Image();\n    // frame.memory.image.src = newCanvas.toDataURL();\n    ////\n  }\n\n\n  if(frame.memory.image) {\n    drawImage(frame.memory.image, frame.x, frame.y);\n  }\n\n};","import { context } from \"src/Global\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport Draw from \"src/tools/graphic/Draw\";\n\nfunction ImageDraw() {}\nexport default ImageDraw;\n\n/**\n * draws an image\n * @param  {Rectangle} frame\n * @param  {Image} image to be drawn\n *\n * @param  {Number} mode: 0: adjust to rectangle, 1: center and mask, 2: center and eventual reduction (image smaller than rectangle), 3: adjust to rectangle preserving proportions (image bigger than rectangle), 4: fill repeated from corner, 5: fill repeated from 0,0\n * tags:draw\n */\nImageDraw.drawImage = function(frame, image, mode) {\n  mode = mode || 0;\n  Draw.fillRectangleWithImage(frame, image, mode);\n};\n\n\n/**\n * draws a visualization and captures an image\n * @param  {String} visFunction visualization function\n * @param  {Number} width\n * @param  {Number} height\n *\n * @param {Object} argument0 first argument of the visualization function\n * @param {Object} argument1 second argument of the visualization function\n * @param {Object} argument2 third argument of the visualization function\n * @param {Object} argument3 fourth argument of the visualization function\n * @return {Image}\n * tags:\n */\n// ImageDraw.captureVisualizationImage = function(visFunctionName, width, height) {\n//   // TODO refactor this to import context from Global and not reassign it.\n\n//   console.log('visFunctionName', visFunctionName);\n//   if(visFunctionName == null ||  width == null || (!width > 0) || height == null || !(height > 0)) return;\n\n//   var frame = new Rectangle(0, 0, width, height);\n\n//   var args = Array.prototype.slice.call(arguments);\n//   args = [frame].concat(args.slice(3));\n\n//   var visFunction;\n\n//   if(visFunctionName.indexOf('.') == -1) {\n//     visFunction = this[visFunctionName];\n//   } else {\n//     console.log(visFunctionName.split('.')[0], this[visFunctionName.split('.')[0]], this.mY);\n//     if(this[visFunctionName.split('.')[0]] == null) return;\n//     visFunction = this[visFunctionName.split('.')[0]][visFunctionName.split('.')[1]];\n//   }\n\n//   if(visFunction == null) return null;\n\n//   console.log('ImageDraw.captureVisualizationImage | args', args);\n//   console.log('ImageDraw.captureVisualizationImage | visFunction==null', visFunction == null);\n\n//   var newCanvas = document.createElement(\"canvas\");\n//   newCanvas.width = width;\n//   newCanvas.height = height;\n//   var newContext = newCanvas.getContext(\"2d\");\n//   newContext.clearRect(0, 0, width, height);\n\n//   var mainContext = context;\n//   context = newContext;\n\n//   ////draw\n//   //setStroke('black', 2);\n//   //line(0,0,width,height);\n//   //line(width,0,0,height);\n//   visFunction.apply(this, args);\n//   ////\n\n//   context = mainContext;\n\n//   var im = new Image();\n//   im.src = newCanvas.toDataURL();\n\n//   return im;\n// };","import List from \"src/dataStructures/lists/List\";\nimport { setFill,\n  setCursor,\n  fText,\n  fRectM,\n  fRect,\n  setText\n} from \"src/tools/graphic/SimpleGraphics\";\nimport { MOUSE_DOWN, mY, mP } from \"src/Global\";\n\nfunction ListDraw() {}\nexport default ListDraw;\n\n/**\n * draws a list in a vertical stack\n * @param  {Rectangle} frame\n * @param  {List} list to be drawn\n *\n * @param {Number} returnMode:<br>-1:no selection<br>0:return index<br>1:return element<br>2:indexes<br>3:elements\n * @param  {ColorList} colorList colors of elements\n * @param {Number} textSize\n * @param  {Number} mode 0:color in square if any\n * @param {Object} [varname] index or list of indexes of externally selected\n * @return {Object} returns the index of the selected element, the element, a list of indexes or a list of elements\n * tags:draw\n */\nListDraw.drawList = function(frame, list, returnMode, colorList, textSize, mode, selectedInit) {\n  if(list == null || !list.length > 0) return;\n\n  textSize = textSize || 14;\n  returnMode = returnMode == null ? 0 : returnMode;\n\n  if(frame.memory == null) frame.memory = { selected: 0, y: 0, multiSelected: new List() };\n\n  var changeList = frame.memory.list != list;\n  var changeExternallySelected = (changeList && selectedInit != null) || frame.memory.selectedInit != selectedInit;\n\n  if(changeExternallySelected) {\n    if(returnMode == 3) {\n      frame.memory.multiSelected = new List();\n      selectedInit.forEach(function(index) {\n        frame.memory.multiSelected.push(list[index]);\n      });\n    } else if(returnMode == 2) {\n      frame.memory.multiSelected = List.fromArray(selectedInit).getImproved();\n    } else {\n      frame.memory.selected = selectedInit;\n    }\n\n    frame.memory.selectedInit = selectedInit;\n  }\n\n  if(changeList) {\n    frame.memory.list = list;\n  }\n\n  var i;\n  var x = frame.x + 5;\n  var xTexts = x + (colorList ? 15 : 0);\n  var y;\n  var dy = textSize + 4;\n  var n = list.length;\n  var bottom = frame.getBottom();\n  var mouseIn = frame.containsPoint(mP);\n  var y0Follow = 0;\n  var y0;\n  var isSelected;\n  var multi = returnMode == 2 || returnMode == 3;\n  var index, onMulti;\n\n  var hList = list.length * dy;\n\n  if(hList <= frame.height - 20) {\n    y0 = frame.y + 10;\n  } else {\n    if(mouseIn) {\n      y0Follow = Math.min(10 - (hList - frame.height + 20) * ((mY - (frame.y + 10)) / (frame.height - 20)), 10);\n    } else {\n      y0Follow = 10 - (hList - frame.height + 20) * frame.memory.selected / list.length;\n    }\n\n    frame.memory.y = 0.95 * frame.memory.y + 0.05 * y0Follow;\n\n    y0 = frame.y + frame.memory.y;\n  }\n\n\n  setText('black', textSize);\n\n  for(i = 0; list[i] != null; i++) {\n    y = y0 + dy * i;\n\n    if(y < frame.y) continue;\n    if(y + 12 > bottom) break;\n\n\n\n    if(returnMode != -1) {\n\n      index = frame.memory.multiSelected.indexOf(i);\n      onMulti = multi && index != -1;\n\n      isSelected = multi ? onMulti : frame.memory.selected == i;\n\n      if(isSelected) {\n        setFill('black');\n        fRect(frame.x + 2, y, frame.width - 4, dy);\n        setFill('white');\n      } else {\n        setFill('black');\n      }\n      fText(list[i].toString(), xTexts, y + 2);\n\n      if(mouseIn && mY >= y && mY < y + dy) {\n        setFill('rgba(150,150,150,0.3)');\n        if(fRectM(frame.x + 2, y, frame.width - 4, dy)) {\n          setCursor('pointer');\n        }\n        if(MOUSE_DOWN) {\n          if(multi) {\n\n            if(onMulti) {\n              frame.memory.multiSelected = frame.memory.multiSelected.getWithoutElementAtIndex(index);\n            } else {\n              frame.memory.multiSelected = frame.memory.multiSelected.clone();\n              frame.memory.multiSelected.push(returnMode == 2 ? i : list[i]);\n              frame.memory.multiSelected = frame.memory.multiSelected.getImproved();\n            }\n\n          } else {\n            frame.memory.selected = i;\n          }\n        }\n      }\n    } else {\n      setFill('black');\n    }\n\n    if(colorList) {\n      setFill(colorList == null ? 'rgb(200, 200, 200)' : colorList[i % n]);\n      fRect(x, y + 4, 10, 10);\n    }\n\n  }\n\n  return returnMode == 1 ? list[frame.memory.selected] : (multi ? frame.memory.multiSelected : frame.memory.selected);\n};","import Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\nimport GeometryOperators from \"src/operators/geometry/GeometryOperators\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport { context, TwoPi, mP } from \"src/Global\";\nimport DrawTextsAdvanced from \"src/tools/graphic/DrawTextsAdvanced\";\nimport ColorScale from \"src/dataStructures/graphic/ColorScale\";\nimport ColorListOperators from \"src/operators/graphic/ColorListOperators\";\nimport { fTextRotated, setText } from \"src/tools/graphic/SimpleGraphics\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\n\nfunction IntervalTableDraw() {}\nexport default IntervalTableDraw;\n\nIntervalTableDraw.MIN_CHARACTERS_SIZE = 1;\n\nIntervalTableDraw.drawIntervalsFlowTable = function(intervalsFlowTable, frame, colors, bezier, offValue) { //, returnHovered){ //TODO: implement rollover detection, using _isOnShape (below)\n  frame = frame == null ? new Rectangle(10, 10, 400, 300) : frame;\n  colors = colors == null ? ColorListGenerators.createCategoricalColors(0, intervalsFlowTable.length, ColorScales.temperature) : colors;\n  bezier = bezier || false;\n  offValue = offValue == null ? 0.45 : offValue;\n\n  var nElements = intervalsFlowTable.length;\n  var i;\n  var j;\n\n  var nCols = intervalsFlowTable[0].length;\n  var dX = frame.width / (nCols - 1);\n  var dY = frame.height;\n\n  var point;\n\n  var intervalList;\n  var lastIntervalList = intervalsFlowTable[nElements - 1];\n  var sY = 0;\n  var mY = 0;\n  var x = frame.x;\n  var y = frame.y;\n\n  var prevPoint;\n  var prevYsup;\n  var prevsY;\n  var newYsup;\n\n  var offX;\n\n  //var nHovered = -1;\n\n  for(i = 0; intervalsFlowTable[i] != null; i++) {\n    intervalList = intervalsFlowTable[i];\n\n    context.fillStyle = colors[i];\n    context.beginPath();\n\n    sY = y;\n\n    point = new Point(x, intervalList[0].y * dY + sY);\n    context.moveTo(point.x, point.y);\n\n    prevPoint = point;\n\n    for(j = 1; j < nCols; j++) {\n      sY = y;\n\n      point = new Point(j * dX + x, intervalList[j].y * dY + sY);\n\n      if(bezier) {\n        offX = (point.x - prevPoint.x) * offValue;\n        context.bezierCurveTo(prevPoint.x + offX, prevPoint.y, point.x - offX, point.y, point.x, point.y);\n      } else {\n        context.lineTo(point.x, point.y);\n      }\n\n      prevPoint = point;\n    }\n\n    point = new Point((nCols - 1) * dX + x, intervalList[nCols - 1].x * dY + sY);\n    context.lineTo(point.x, point.y);\n    prevPoint = point;\n\n    for(j = nCols - 2; j >= 0; j--) {\n      sY = y;\n\n      point = new Point(j * dX + x, intervalList[j].x * dY + sY);\n\n      if(bezier) {\n        offX = (point.x - prevPoint.x) * offValue;\n        context.bezierCurveTo(prevPoint.x + offX, prevPoint.y, point.x - offX, point.y, point.x, point.y);\n\n        // if(returnHovered && nHovered==-1 && IntervalTableDraw._isOnShape(prevPoint, point, intervalList[j-1].y*dY+sY, intervalList[j].y*dY+sY, offX, mX, mY)){\n        // nHovered = i;\n        // }\n\n      } else {\n        context.lineTo(point.x, point.y);\n      }\n\n      prevPoint = point;\n    }\n\n    point = new Point(x, intervalList[0].x * dY + sY);\n    context.lineTo(point.x, point.y);\n\n    context.fill();\n\n  }\n\n  //return nHovered;\n};\nIntervalTableDraw._isOnShape = function(prevPoint, point, prevYsup, newYsup, offX, testX, textY) {\n  var t = (testX - prevPoint.x) / (point.x - prevPoint.x);\n  var u = 1 - t;\n\n  //Y INF\n  this.p0.x = prevPoint.x + t * offX;\n  this.p0.y = prevPoint.y;\n  this.p1.x = u * (prevPoint.x + offX) + t * (point.x - offX);\n  this.p1.y = u * prevPoint.y + t * point.y;\n  this.p2.x = point.x - u * offX;\n  this.p2.y = point.y;\n\n  this.P0.x = u * this.p0.x + t * this.p1.x;\n  this.P0.y = u * this.p0.y + t * this.p1.y;\n\n  this.P1.x = u * this.p1.x + t * this.p2.x;\n  this.P1.y = u * this.p1.y + t * this.p2.y;\n\n  var mYInf = u * this.P0.y + t * this.P1.y;\n\n  //Y SUP\n  this.p0.y = prevYsup;\n  this.p1.y = u * prevYsup + t * newYsup;\n  this.p2.y = newYsup;\n\n  this.P0.y = u * this.p0.y + t * this.p1.y;\n  this.P1.y = u * this.p1.y + t * this.p2.y;\n\n  var mYSup = u * this.P0.y + t * this.P1.y;\n\n  return textY > mYSup && textY < mYInf;\n};\n\n\n\nIntervalTableDraw.drawCircularIntervalsFlowTable = function(intervalsFlowTable, center, radius, r0, colors, texts, returnHovered, angles, angle0) {\n  var nElements = intervalsFlowTable.length;\n  var i;\n  var j;\n\n  colors = colors == null ? ColorListOperators.colorListFromColorScale(new ColorScale(ColorOperators.temperatureScale), nElements) : colors;\n  center = center == null ? new Point(100, 100) : center;\n  radius = radius == null ? 200 : radius;\n  r0 = r0 == null ? 10 : r0;\n  angle0 = angle0 == null ? 0 : angle0;\n\n  var nCols = intervalsFlowTable[0].length;\n  var dA = TwoPi / nCols;\n  var dR = (radius - r0);\n\n  var point;\n\n  var intervalList;\n  var lastIntervalList = intervalsFlowTable[nElements - 1];\n  var interval;\n\n  var r = r0;\n  var s, textS;\n\n  var prevPoint;\n  var prevRsup;\n  var prevsR;\n  var newRsup;\n\n  var breaks = false;\n\n  var nR;\n  var nR2;\n\n  var offA = dA * 0.3;\n  var cosOffA = Math.cos(offA);\n\n  var s;\n  var amp;\n  var rT;\n\n  var xT;\n  var yT;\n\n  var nHovered = -1;\n\n  var filteredTexts = [];\n  var textsX = [];\n  var textsY = [];\n  var textsSizes = [];\n  var textsAngles = [];\n\n  for(i = 0; i < nElements; i++) {\n\n    intervalList = intervalsFlowTable[i];\n\n    context.fillStyle = colors[i % nElements];\n\n    context.beginPath();\n\n    point = new Point(angles == null ? 0 : angles[0] + angle0, (1 - intervalList[0].y) * dR + r0);\n    context.moveTo(point.y * Math.cos(point.x) + center.x, point.y * Math.sin(point.x) + center.y);\n\n    prevPoint = point;\n\n    for(j = 1; j <= nCols; j++) {\n\n      interval = intervalList[j % nCols];\n      point = new Point(angles == null ? j * dA : angles[j % nCols] + angle0, (1 - interval.y) * dR + r0);\n\n      nR = prevPoint.y / cosOffA;\n      nR2 = point.y / cosOffA;\n\n      context.bezierCurveTo(nR * Math.cos(prevPoint.x + offA) + center.x, nR * Math.sin(prevPoint.x + offA) + center.y,\n        nR2 * Math.cos(point.x - offA) + center.x, nR2 * Math.sin(point.x - offA) + center.y,\n        point.y * Math.cos(point.x) + center.x, point.y * Math.sin(point.x) + center.y);\n\n      if(returnHovered && nHovered == -1 && this._isOnRadialShape(center, mP, prevPoint.x, point.x, dR * (1 - intervalList[(j - 1) % nCols].y) + r0, dR * (1 - intervalList[(j - 1) % nCols].x) + r0, dR * (1 - intervalList[j % nCols].y) + r0, dR * (1 - intervalList[j % nCols].x) + r0)) {\n        nHovered = i;\n      }\n\n      prevPoint = point;\n\n      if(texts != null) {\n        s = interval.getAmplitude();\n        textS = Math.min(Math.sqrt(s * radius) * 3, 28);\n        if(textS >= 8) {\n          rT = point.y + s * 0.5 * dR;\n\n          textsSizes.push(textS);\n          textsAngles.push(point.x + Math.PI * 0.5);\n\n          textsX.push(rT * Math.cos(point.x) + center.x);\n          textsY.push(rT * Math.sin(point.x) + center.y);\n\n          filteredTexts.push(texts[i]);\n        }\n      }\n    }\n\n    point = new Point(angles == null ? 0 : angles[0] + angle0, (1 - intervalList[0].x) * dR + r0);\n    context.lineTo(point.y * Math.cos(point.x) + center.x, point.y * Math.sin(point.x) + center.y);\n    prevPoint = point;\n\n    for(j = nCols - 1; j >= 0; j--) {\n      point = new Point(angles == null ? j * dA : angles[j] + angle0, (1 - intervalList[j].x) * dR + r0);\n\n      nR = prevPoint.y / cosOffA;\n      nR2 = point.y / cosOffA;\n\n      context.bezierCurveTo(nR * Math.cos(prevPoint.x - offA) + center.x, nR * Math.sin(prevPoint.x - offA) + center.y,\n        nR2 * Math.cos(point.x + offA) + center.x, nR2 * Math.sin(point.x + offA) + center.y,\n        point.y * Math.cos(point.x) + center.x, point.y * Math.sin(point.x) + center.y);\n\n      prevPoint = point;\n    }\n\n    point = new Point(angles == null ? 0 : angles[0] + angle0, (1 - intervalList[0].x) * dR + r0);\n    context.lineTo(point.y * Math.cos(point.x) + center.x, point.y * Math.sin(point.x) + center.y);\n\n    context.fill();\n\n  }\n\n  for(i = 0; filteredTexts[i] != null; i++) {\n    setText('black', textsSizes[i], null, 'center', 'middle');\n    fTextRotated(filteredTexts[i], textsX[i], textsY[i], textsAngles[i]);\n  }\n\n  return nHovered;\n};\n\nIntervalTableDraw._isOnRadialShape = function(center, testPoint, a0, a1, r0a, r0b, r1a, r1b) {\n  if(a1 < a0) a1 += TwoPi;\n\n  var ang = center.angleToPoint(testPoint);\n\n  if(ang < 0) ang += TwoPi;\n  if(ang > TwoPi) ang -= TwoPi;\n\n  if(ang + TwoPi < a1) ang += TwoPi;\n  if(ang - TwoPi > a0) ang -= TwoPi;\n\n  if(ang < a0 || ang > a1) return false;\n  var dA = a1 - a0;\n  var t = (ang - a0) / dA;\n\n  var pa = GeometryOperators.bezierCurvePoints(a0, r0a, a0 + dA * 0.5, r0a, a1 - dA * 0.5, r1a, a1, r1a, t);\n  var pb = GeometryOperators.bezierCurvePoints(a0, r0b, a0 + dA * 0.25, r0b, a1 - dA * 0.25, r1b, a1, r1b, t);\n\n  var r = testPoint.subtract(center).getNorm();\n\n  return r > pa.y && r < pb.y;\n};\n\n\n\nIntervalTableDraw.drawIntervalsWordsFlowTable = function(frame, intervalsFlowTable, texts, colors, typode) {\n  var nElements = intervalsFlowTable.length;\n\n  var i;\n  var j;\n\n  colors = colors == null ? ColorListGenerators.createCategoricalColors(0, intervalsFlowTable.length, ColorScales.temperature) : colors;\n  frame = frame == null ? new Rectangle(10, 10, 400, 300) : frame;\n\n  var nCols = intervalsFlowTable[0].length;\n  var dX = frame.width / (nCols - 1);\n  var dY = frame.height;\n\n  var point0;\n  var point1;\n\n  var nextPoint0;\n  var nextPoint1;\n\n  var point0Prev = new Point();\n  var point1Prev = new Point();\n\n  var center;\n  var size;\n\n  var intervalList;\n  var lastIntervalList = intervalsFlowTable[nElements - 1];\n  var sY = 0;\n  var x = frame.x;\n  var y = frame.y;\n\n  var offX;\n\n  var text;\n\n  if(!typode) context.strokeStyle = \"rgba(255,255,255,0.4)\";\n\n  context.textBaseline = \"top\";\n  context.textAlign = \"left\";\n\n  var position;\n  var xx;\n  var t;\n  var jumpX = dX;\n  var valueLastInterval;\n  var valueX;\n  var valueY;\n  var nChar;\n  var selectedChar;\n  var charWidth;\n  var fontSize;\n\n  var offX;\n\n  var factX = (nCols - 1) / frame.width;\n\n  var xj0;\n  var xj1;\n\n\n  for(i = 0; intervalsFlowTable[i] != null; i++) {\n    intervalList = intervalsFlowTable[i];\n\n    text = \" \" + texts[i];\n\n    xx = 0;\n    nChar = 0;\n\n    position = 0;\n    j = 0;\n    t = 0;\n\n    sY = (1 - lastIntervalList[0].y) * 0.5 * dY + y;\n    point0 = new Point(x, intervalList[0].x * dY + sY);\n    point1 = new Point(x, intervalList[0].y * dY + sY);\n\n    do {\n      nChar++;\n      size = (point1.y - point0.y);\n      fontSize = Math.floor(0.3 * size + 1);\n      if(!typode) context.font = fontSize + 'px ' + LOADED_FONT;\n      selectedChar = text.charAt(nChar % text.length);\n      charWidth = typode ? fontSize * widthsTypode[selectedChar] : context.measureText(selectedChar).width + 2;\n      jumpX = charWidth * 0.9 || 1;\n\n      xx += jumpX;\n      position = factX * xx;\n      j = Math.floor(position);\n      t = position - j;\n\n\n      if(j + 2 > nCols) continue;\n\n      xj0 = j / factX;\n      xj1 = (j + 1) / factX;\n\n      offX = factX * 0.45;\n\n      valueLastInterval = IntervalTableDraw._bezierValue(xj0, xj1, lastIntervalList[j].y, lastIntervalList[j + 1].y, t, offX);\n\n\n      prevsY = sY;\n      sY = (1 - valueLastInterval) * 0.5 * dY + y;\n\n\n      point0Prev.x = point0.x;\n      point0Prev.y = point0.y;\n      point1Prev.x = point1.x;\n      point1Prev.y = point1.y;\n\n\n      valueX = IntervalTableDraw._bezierValue(xj0, xj1, intervalList[j].x, intervalList[j + 1].x, t, offX);\n      valueY = IntervalTableDraw._bezierValue(xj0, xj1, intervalList[j].y, intervalList[j + 1].y, t, offX);\n\n\n      point0 = new Point(xx + x, valueX * dY + sY);\n      point1 = new Point(xx + x, valueY * dY + sY);\n\n      center = new Point(point0Prev.x + jumpX * 0.5, (point0.y + point1.y + point0Prev.y + point1Prev.y) * 0.25);\n\n      typode ? context.strokeStyle = colors[i] : context.fillStyle = colors[i];\n\n\n      if(size > IntervalTableDraw.MIN_CHARACTERS_SIZE) {\n        if(typode) {\n          DrawTextsAdvanced.typodeOnQuadrilater(selectedChar, point0Prev, point0, point1, point1Prev);\n        } else {\n          context.save();\n          context.globalAlpha = size / 15;\n          DrawTextsAdvanced.textOnQuadrilater(context, selectedChar, point0Prev, point0, point1, point1Prev, fontSize, 1);\n          context.restore();\n        }\n\n      }\n    } while (j + 1 < nCols);\n  }\n};\nIntervalTableDraw._bezierValue = function(x0, x1, y0, y1, t, offX) {\n  var u = 1 - t;\n  var p0 = new Point(x0 + t * offX, y0);\n  var p1 = new Point(u * (x0 + offX) + t * (x1 - offX), u * y0 + t * y1);\n  var p2 = new Point(x1 - u * offX, y1);\n\n  var P0 = new Point(u * p0.x + t * p1.x, u * p0.y + t * p1.y);\n  var P1 = new Point(u * p1.x + t * p2.x, u * p1.y + t * p2.y);\n\n  return u * P0.y + t * P1.y;\n};","import {\n  context,\n  mX,\n  mY,\n  mP,\n  TwoPi,\n  HalfPi,\n  MOUSE_UP_FAST,\n  MOUSE_DOWN,\n  MOUSE_UP,\n  WHEEL_CHANGE\n} from \"src/Global\";\n\nimport {\n  setCursor,\n  line,\n  setStroke,\n  setFill,\n  fText,\n  setText,\n  drawImage,\n  fCircleM,\n  getTextW,\n  fRectM,\n  sRect,\n  fTextRotated,\n  clipRectangle\n} from \"src/tools/graphic/SimpleGraphics\";\n\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport IntervalTableOperators from \"src/operators/numeric/interval/IntervalTableOperators\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTableFlowOperators from \"src/operators/numeric/numberTable/NumberTableFlowOperators\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\nimport IntervalTableDraw from \"src/visualization/numeric/IntervalTableDraw\";\nimport GeometryOperators from \"src/operators/geometry/GeometryOperators\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nimport StringList from \"src/dataStructures/strings/StringList\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport ColorList from \"src/dataStructures/graphic/ColorList\";\n\nfunction NumberTableDraw() {}\nexport default NumberTableDraw;\n\n/**\n * draws a matrix, with cells colors associated to values from a ColorScale\n * @param  {Rectangle} frame\n * @param  {NumberTable} numberTable\n *\n * @param  {ColorScale} colorScale\n * @param  {Boolean} listColorsIndependent if true each numberList will be colored to fit the colorScale range\n * @param  {Number} margin\n * @return {Point}\n * tags:draw\n */\nNumberTableDraw.drawNumberTable = function(frame, numberTable, colorScale, listColorsIndependent, margin) {\n  if(frame == null ||  numberTable == null || numberTable.type == null || numberTable.type != \"NumberTable\" ||  numberTable.length < 2) return null;\n\n  colorScale = colorScale == null ? ColorScales.blueToRed : colorScale;\n  listColorsIndependent = listColorsIndependent || false;\n  margin = margin == null ? 2 : margin;\n\n  var dX = frame.width / numberTable.length;\n  var dY = frame.height / numberTable[0].length;\n\n  var i;\n  var j;\n  var numberList;\n  var x;\n\n  var overCoordinates;\n\n  var minMaxInterval;\n  var amp;\n  if(!listColorsIndependent) {\n    minMaxInterval = numberTable.getMinMaxInterval();\n    amp = minMaxInterval.getAmplitude();\n  }\n\n  var mouseXOnColumn;\n\n  for(i = 0; numberTable[i] != null; i++) {\n    numberList = numberTable[i];\n    x = Math.round(frame.x + i * dX);\n    mouseXOnColumn = mX > x && mX <= x + dX;\n    if(listColorsIndependent) {\n      minMaxInterval = numberList.getMinMaxInterval();\n      amp = minMaxInterval.getAmplitude();\n    }\n    for(j = 0; numberList[j] != null; j++) {\n      context.fillStyle = colorScale((numberList[j] - minMaxInterval.x) / amp);\n      context.fillRect(x, Math.round(frame.y + j * dY), Math.ceil(dX) - margin, Math.ceil(dY) - margin);\n      if(mouseXOnColumn && mY > frame.y + j * dY && mY <= frame.y + (j + 1) * dY) overCoordinates = new Point(i, j);\n    }\n  }\n\n  return overCoordinates;\n};\n\n/**\n * draws a ScatterPlot, if the provided NumberTable contains a third NumberList it also draws circles\n * @param  {Rectangle} frame\n * @param  {NumberTable} numberTable with two lists\n *\n * @param  {StringList} texts\n * @param  {ColorList} colors\n * @param  {Number} maxRadius\n * @param  {Boolean} loglog logarithmical scale for both axis\n * @param  {Number} margin in pixels\n * @return {Number} index of rollovered element\n * tags:draw\n */\nNumberTableDraw.drawSimpleScatterPlot = function(frame, numberTable, texts, colors, maxRadius, loglog, margin) {\n  if(frame == null ||  numberTable == null || numberTable.type != \"NumberTable\" ||  numberTable.length < 2 ||  numberTable[0].length == 0 || numberTable[1].length == 0) return; //todo:provisional, this is System's work\n\n  if(numberTable.length < 2) return;\n\n  maxRadius = maxRadius || 20;\n  loglog = loglog || false;\n  margin = margin || 0;\n\n  var subframe = new Rectangle(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  subframe.bottom = subframe.getBottom();\n\n  var i;\n  var x, y;\n  var list0 = (loglog ? numberTable[0].log(1) : numberTable[0]).getNormalized();\n  var list1 = (loglog ? numberTable[1].log(1) : numberTable[1]).getNormalized();\n  var radii = numberTable.length <= 2 ? null : numberTable[2].getNormalized().sqrt().factor(maxRadius);\n  var nColors = (colors == null) ? null : colors.length;\n  var n = Math.min(list0.length, list1.length, (radii == null) ? 300000 : radii.length, (texts == null) ? 300000 : texts.length);\n  var iOver;\n\n  for(i = 0; i < n; i++) {\n    x = subframe.x + list0[i] * subframe.width;\n    y = subframe.bottom - list1[i] * subframe.height;\n\n    if(radii == null) {\n      if(NumberTableDraw._drawCrossScatterPlot(x, y, colors == null ? 'rgb(150,150,150)' : colors[i % nColors])) iOver = i;\n    } else {\n      setFill(colors == null ? 'rgb(150,150,150)' : colors[i % nColors]);\n      if(fCircleM(x, y, radii[i], radii[i] + 1)) iOver = i;\n    }\n    if(texts != null) {\n      setText('black', 10);\n      fText(texts[i], x, y);\n    }\n  }\n\n  if(margin > 7 && list0.name != \"\" && list1.name != \"\") {\n    setText('black', 10, null, 'right', 'middle');\n    fText(list0.name, subframe.getRight() - 2, subframe.bottom + margin * 0.5);\n    fTextRotated(list1.name, subframe.x - margin * 0.5, subframe.y + 1, -HalfPi);\n  }\n\n  if(iOver != null) {\n    setCursor('pointer');\n    return iOver;\n  }\n};\nNumberTableDraw._drawCrossScatterPlot = function(x, y, color) {\n  setStroke(color, 1);\n  line(x, y - 2, x, y + 2);\n  line(x - 2, y, x + 2, y);\n  return Math.pow(mX - x, 2) + Math.pow(mY - y, 2) < 25;\n};\n\n/**\n * draws a slopegraph\n * @param  {Rectangle} frame\n * @param  {NumberTable} numberTable with at least two numberLists\n * @param  {StringList} texts\n * @return {Object}\n * tags:draw\n */\nNumberTableDraw.drawSlopeGraph = function(frame, numberTable, texts) {\n  if(frame == null ||  numberTable == null || numberTable.type != \"NumberTable\") return; //todo:provisional, this is System's work\n\n  if(numberTable.length < 2) return;\n\n  var margin = 16;\n  var subframe = new Rectangle(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  subframe.bottom = subframe.getBottom();\n\n  var i;\n  var y0, y1;\n  var list0 = numberTable[0].getNormalized();\n  var list1 = numberTable[1].getNormalized();\n  var n = Math.min(list0.length, list1.length, texts == null ? 2000 : texts.length);\n\n  var x0 = subframe.x + (texts == null ? 10 : 0.25 * subframe.width);\n  var x1 = subframe.getRight() - (texts == null ? 10 : 0.25 * subframe.width);\n\n  setStroke('black', 1);\n\n  for(i = 0; i < n; i++) {\n    y0 = subframe.bottom - list0[i] * subframe.height;\n    y1 = subframe.bottom - list1[i] * subframe.height;\n\n    line(x0, y0, x1, y1);\n\n    if(texts != null && (subframe.bottom - y0) >= 9) {\n      setText('black', 9, null, 'right', 'middle');\n      fText(texts[i], x0 - 2, y0);\n    }\n    if(texts != null && (subframe.bottom - y1) >= 9) {\n      setText('black', 9, null, 'left', 'middle');\n      fText(texts[i], x1 + 2, y1);\n    }\n  }\n};\n\n\n/**\n * based on a integers NumberTable draws a a matrix of rectangles with colors associated to number of elelments in overCoordinates\n * @param  {Rectangle} frame\n * @param  {Object} coordinates, it could be a polygon, or a numberTable with two lists\n *\n * @param  {ColorScale} colorScale\n * @param  {Number} margin\n * @return {NumberList} list of positions of elements on clicked coordinates\n * tags:draw\n */\nNumberTableDraw.drawDensityMatrix = function(frame, coordinates, colorScale, margin) {\n  if(coordinates == null || coordinates[0] == null) return;\n\n  colorScale = colorScale == null ?\n\t\t\t\t\t\t\t\tColorScales.whiteToRed\n\t\t\t\t\t\t\t\t:\n    typeof colorScale == 'string' ?\n\t\t\t\t\t\t\t\t\tColorScales[colorScale]\n\t\t\t\t\t\t\t\t\t:\n    colorScale;\n  margin = margin || 0;\n\n  var i, j;\n  var x, y;\n  var minx, miny;\n  var matrixColors;\n\n\n  //setup\n  if(frame.memory == null || coordinates != frame.memory.coordinates || colorScale != frame.memory.colorScale) {\n\n    var isNumberTable = coordinates[0].x == null;\n\n    if(isNumberTable) {\n      var numberTable = coordinates;\n      if(numberTable == null ||  numberTable.length < 2 || numberTable.type != \"NumberTable\") return;\n    } else {\n      var polygon = coordinates;\n    }\n\n    var max = 0;\n    var nCols = 0;\n    var nLists = 0;\n    var matrix = new NumberTable();\n    var n = isNumberTable ? numberTable[0].length : polygon.length;\n\n    matrixColors = new Table();\n\n    if(isNumberTable) {\n      minx = numberTable[0].getMin();\n      miny = numberTable[1].getMin();\n    } else {\n      minx = polygon[0].x;\n      miny = polygon[0].y;\n      for(i = 1; i < n; i++) {\n        minx = Math.min(polygon[i].x, minx);\n        miny = Math.min(polygon[i].y, miny);\n      }\n    }\n\n\n    for(i = 0; i < n; i++) {\n      if(isNumberTable) {\n        x = Math.floor(numberTable[0][i] - minx);\n        y = Math.floor(numberTable[1][i] - miny);\n      } else {\n        x = Math.floor(polygon[i].x - minx);\n        y = Math.floor(polygon[i].y - miny);\n      }\n\n      if(matrix[x] == null) matrix[x] = new NumberList();\n      if(matrix[x][y] == null) matrix[x][y] = 0;\n      matrix[x][y]++;\n      max = Math.max(max, matrix[x][y]);\n      nCols = Math.max(nCols, x + 1);\n      nLists = Math.max(nLists, y + 1);\n    }\n\n    for(i = 0; i < nCols; i++) {\n      if(matrix[i] == null) matrix[i] = new NumberList();\n      matrixColors[i] = new ColorList();\n      for(j = 0; j < nLists; j++) {\n        if(matrix[i][j] == null) matrix[i][j] = 0;\n        matrixColors[i][j] = colorScale(matrix[i][j] / max);\n      }\n    }\n    frame.memory = {\n      matrixColors: matrixColors,\n      coordinates: coordinates,\n      colorScale: colorScale,\n      selected: null\n    };\n\n  } else {\n    matrixColors = frame.memory.matrixColors;\n  }\n\n  //c.log(matrixColors.length, matrixColors[0].length, matrixColors[0][0]);\n\n  //draw\n  var subframe = new Rectangle(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  subframe.bottom = subframe.getBottom();\n  var dx = subframe.width / matrixColors.length;\n  var dy = subframe.height / matrixColors[0].length;\n  var prevSelected = frame.memory.selected;\n\n  if(MOUSE_UP_FAST) frame.memory.selected = null;\n\n  for(i = 0; matrixColors[i] != null; i++) {\n    for(j = 0; matrixColors[0][j] != null; j++) {\n      setFill(matrixColors[i][j]);\n      if(fRectM(subframe.x + i * dx, subframe.bottom - (j + 1) * dy, dx + 0.5, dy + 0.5) && MOUSE_UP_FAST) {\n        frame.memory.selected = [i, j];\n      }\n    }\n  }\n\n\n  //selection\n  if(frame.memory.selected) {\n    setStroke('white', 5);\n    sRect(subframe.x + frame.memory.selected[0] * dx - 1, subframe.bottom - (frame.memory.selected[1] + 1) * dy - 1, dx + 1, dy + 1);\n    setStroke('black', 1);\n    sRect(subframe.x + frame.memory.selected[0] * dx - 1, subframe.bottom - (frame.memory.selected[1] + 1) * dy - 1, dx + 1, dy + 1);\n  }\n\n  if(prevSelected != frame.memory.selected) {\n    if(frame.memory.selected == null) {\n      frame.memory.indexes = null;\n    } else {\n      minx = numberTable[0].getMin();\n      miny = numberTable[1].getMin();\n\n      x = frame.memory.selected[0] + minx;\n      y = frame.memory.selected[1] + miny;\n\n      frame.memory.indexes = new NumberList();\n\n      for(i = 0; numberTable[0][i] != null; i++) {\n        if(numberTable[0][i] == x && numberTable[1][i] == y) frame.memory.indexes.push(i);\n      }\n    }\n\n  }\n\n  if(frame.memory.selected) return frame.memory.indexes;\n};\n\n/**\n * draws a steamgraph\n * @param  {Rectangle} frame\n * @param  {NumberTable} numberTable\n *\n * @param {Boolean} normalized normalize each column, making the graph of constant height\n * @param {Boolean} sorted sort flow polygons\n * @param {Number} intervalsFactor number between 0 and 1, factors the height of flow polygons\n * @param {Boolean} bezier draws bezier (soft) curves\n * @param {ColorList} colorList colors of polygons\n * @param {StringList} horizontalLabels to be placed in the bottom\n * @param {Boolean} showValues show values in the stream\n * @param {Number} logFactor if >0 heights will be transformed logaritmically log(logFactor*val + 1)\n * @return {NumberList} list of positions of elements on clicked coordinates\n * tags:draw\n */\nNumberTableDraw.drawStreamgraph = function(frame, numberTable, normalized, sorted, intervalsFactor, bezier, colorList, horizontalLabels, showValues, logFactor) {\n  if(numberTable == null ||  numberTable.length < 2 || numberTable.type != \"NumberTable\") return;\n\n  bezier = bezier == null ? true : bezier;\n\n  //var self = NumberTableDraw.drawStreamgraph;\n\n  intervalsFactor = intervalsFactor == null ? 1 : intervalsFactor;\n\n  //setup\n  if(frame.memory == null || numberTable != frame.memory.numberTable || normalized != frame.memory.normalized || sorted != frame.memory.sorted || intervalsFactor != frame.memory.intervalsFactor || bezier != frame.memory.bezier || frame.width != frame.memory.width || frame.height != frame.memory.height || logFactor != frame.memory.logFactor) {\n\t\tvar nT2 = logFactor?numberTable.applyFunction(function(val){return Math.log(logFactor*val+1);}):numberTable;\n\n    frame.memory = {\n      numberTable: numberTable,\n      normalized: normalized,\n      sorted: sorted,\n      intervalsFactor: intervalsFactor,\n      bezier: bezier,\n      flowIntervals: IntervalTableOperators.scaleIntervals(NumberTableFlowOperators.getFlowTableIntervals(nT2, normalized, sorted), intervalsFactor),\n      fOpen: 1,\n      names: numberTable.getNames(),\n      mXF: mX,\n      width: frame.width,\n      height: frame.height,\n      logFactor: logFactor,\n      image: null\n    };\n  }\n\n  if(colorList && frame.memory.colorList != colorList) frame.memory.image = null;\n\n  if(frame.memory.colorList != colorList || frame.memory.colorList == null) {\n    frame.memory.actualColorList = colorList == null ? ColorListGenerators.createDefaultCategoricalColorList(numberTable.length, 0.7) : colorList;\n    frame.memory.colorList = colorList;\n  }\n\n  var flowFrame = new Rectangle(0, 0, frame.width, horizontalLabels == null ? frame.height : (frame.height - 14));\n\n  if(frame.memory.image == null) {\n    // TODO refactor to not reassign context\n    ///// capture image\n    // var newCanvas = document.createElement(\"canvas\");\n    // newCanvas.width = frame.width;\n    // newCanvas.height = frame.height;\n    // var newContext = newCanvas.getContext(\"2d\");\n    // newContext.clearRect(0, 0, frame.width, frame.height);\n    // var mainContext = context;\n    // context = newContext;\n    // IntervalTableDraw.drawIntervalsFlowTable(frame.memory.flowIntervals, flowFrame, frame.memory.actualColorList, bezier, 0.3);\n    // context = mainContext;\n    // frame.memory.image = new Image();\n    // frame.memory.image.src = newCanvas.toDataURL();\n    /////\n  }\n\n  if(frame.memory.image) {\n\n    frame.memory.fOpen = 0.8 * frame.memory.fOpen + 0.2 * (frame.containsPoint(mP) ? 0.8 : 1);\n    frame.memory.mXF = 0.7 * frame.memory.mXF + 0.3 * mX;\n    frame.memory.mXF = Math.min(Math.max(frame.memory.mXF, frame.x), frame.getRight());\n\n    if(frame.memory.fOpen < 0.999) {\n      context.save();\n      context.translate(frame.x, frame.y);\n      var cut = frame.memory.mXF - frame.x;\n      var x0 = Math.floor(cut * frame.memory.fOpen);\n      var x1 = Math.ceil(frame.width - (frame.width - cut) * frame.memory.fOpen);\n\n      drawImage(frame.memory.image, 0, 0, cut, flowFrame.height, 0, 0, x0, flowFrame.height);\n      drawImage(frame.memory.image, cut, 0, (frame.width - cut), flowFrame.height, x1, 0, (frame.width - cut) * frame.memory.fOpen, flowFrame.height);\n\n      NumberTableDraw._drawPartialFlow(flowFrame, frame.memory.flowIntervals, frame.memory.names, frame.memory.actualColorList, cut, x0, x1, 0.3, sorted, showValues ? numberTable : null);\n\n      context.restore();\n    } else {\n      drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n    }\n  }\n\n  if(horizontalLabels) NumberTableDraw._drawHorizontalLabels(frame, frame.getBottom() - 5, numberTable, horizontalLabels, x0, x1);\n};\nNumberTableDraw._drawHorizontalLabels = function(frame, y, numberTable, horizontalLabels, x0, x1) {\n  var dx = frame.width / (numberTable[0].length - 1);\n  var x;\n  var mX2 = Math.min(Math.max(mX, frame.x + 1), frame.getRight() - 1);\n  var iPosDec = (mX2 - frame.x) / dx;\n  var iPos = Math.round(iPosDec);\n\n  x0 = x0 == null ? frame.x : x0 + frame.x;\n  x1 = x1 == null ? frame.x : x1 + frame.x;\n\n  horizontalLabels.forEach(function(label, i) {\n    setText('black', (i == iPos && x1 > (x0 + 4)) ? 14 : 10, null, 'center', 'middle');\n\n    if(x0 > x1 - 5) {\n      x = frame.x + i * dx;\n    } else if(iPos == i) {\n      x = (x0 + x1) * 0.5 - (x1 - x0) * (iPosDec - iPos);\n    } else {\n      x = frame.x + i * dx;\n      if(x < mX2) {\n        x = frame.x + i * dx * frame.memory.fOpen;\n      } else if(x > mX2) {\n        x = frame.x + i * dx * frame.memory.fOpen + (x1 - x0);\n      }\n    }\n    fText(horizontalLabels[i], x, y);\n  });\n};\nNumberTableDraw._drawPartialFlow = function(frame, flowIntervals, labels, colors, x, x0, x1, OFF_X, sorted, numberTable) {\n  var w = x1 - x0;\n  var wForText = numberTable == null ? (x1 - x0) : (x1 - x0) * 0.85;\n\n  var nDays = flowIntervals[0].length;\n\n  var wDay = frame.width / (nDays - 1);\n\n  var iDay = (x - frame.x) / wDay; // Math.min(Math.max((nDays-1)*(x-frame.x)/frame.width, 0), nDays-1);\n\n  var iDay = Math.max(Math.min(iDay, nDays - 1), 0);\n\n  var i;\n  var i0 = Math.floor(iDay);\n  var i1 = Math.ceil(iDay);\n\n  var t = iDay - i0;\n  var s = 1 - t;\n\n  var xi;\n  var yi;\n\n  var interval0;\n  var interval1;\n\n  var y, h;\n\n  var wt;\n  var pt;\n\n  var text;\n\n  var offX = OFF_X * wDay; //*(frame.width-(x1-x0))/nDays; //not taken into account\n\n  //var previOver = iOver;\n  var iOver = -1;\n\n  var X0, X1, xx;\n\n  var ts0, ts1;\n\n  for(i = 0; flowIntervals[i] != null; i++) {\n\n    setFill(colors[i]);\n    interval0 = flowIntervals[i][i0];\n    interval1 = flowIntervals[i][i1];\n\n    X0 = Math.floor(iDay) * wDay;\n    X1 = Math.floor(iDay + 1) * wDay;\n\n    xx = x;\n\n    y = GeometryOperators.trueBezierCurveHeightHorizontalControlPoints(X0, X1, interval0.x, interval1.x, X0 + offX, X1 - offX, xx);\n    h = GeometryOperators.trueBezierCurveHeightHorizontalControlPoints(X0, X1, interval0.y, interval1.y, X0 + offX, X1 - offX, xx) - y;\n\n    y = y * frame.height + frame.y;\n    h *= frame.height;\n\n    //if(h<1) continue;\n\n    if(fRectM(x0, y, w, h)) iOver = i;\n\n    if(h >= 5 && w > 40) {\n      setText('white', h, null, null, 'middle');\n\n      text = labels[i];\n\n      wt = getTextW(text);\n      pt = wt / wForText;\n\n      if(pt > 1) {\n        setText('white', h / pt, null, null, 'middle');\n      }\n\n      context.fillText(text, x0, y + h * 0.5);\n\n      if(numberTable) {\n        wt = getTextW(text);\n\n        ts0 = Math.min(h, h / pt);\n        ts1 = Math.max(ts0 * 0.6, 8);\n\n        setText('white', ts1, null, null, 'middle');\n        fText(Math.round(numberTable[i][i0]), x0 + wt + w * 0.03, y + (h + (ts0 - ts1) * 0.5) * 0.5);\n      }\n\n\n    }\n  }\n\n  return iOver;\n};\n\n\n\n/**\n * draws a circular steamgraph Without labels\n * @param {Rectangle} frame\n * @param {NumberTable} numberTable\n *\n * @param {Boolean} normalized normalize each column, making the graph of constant height\n * @param {Boolean} sorted sort flow polygons\n * @param {Number} intervalsFactor number between 0 and 1, factors the height of flow polygons\n * @param {ColorList} colorList colors of polygons\n * @param {List} names names of rows\n * @return {NumberList} list of positions of elements on clicked coordinates\n * tags:draw\n */\nNumberTableDraw.drawCircularStreamgraph = function(frame, numberTable, normalized, sorted, intervalsFactor, colorList, names) {\n  if(numberTable == null ||  numberTable.length < 2 || numberTable[0].length < 2 || numberTable.type != \"NumberTable\") return;\n\n  intervalsFactor = intervalsFactor == null ? 1 : intervalsFactor;\n\n  //setup\n  if(frame.memory == null || numberTable != frame.memory.numberTable || normalized != frame.memory.normalized || sorted != frame.memory.sorted || intervalsFactor != frame.memory.intervalsFactor || frame.width != frame.memory.width || frame.height != frame.memory.height) {\n    frame.memory = {\n      numberTable: numberTable,\n      normalized: normalized,\n      sorted: sorted,\n      intervalsFactor: intervalsFactor,\n      flowIntervals: IntervalTableOperators.scaleIntervals(NumberTableFlowOperators.getFlowTableIntervals(numberTable, normalized, sorted), intervalsFactor),\n      fOpen: 1,\n      names: numberTable.getNames(),\n      mXF: mX,\n      width: frame.width,\n      height: frame.height,\n      radius: Math.min(frame.width, frame.height) * 0.46 - (names == null ? 0 : 8),\n      r0: Math.min(frame.width, frame.height) * 0.05,\n      angles: new NumberList(),\n      zoom: 1,\n      angle0: 0,\n      image: null\n    };\n\n    var dA = TwoPi / numberTable[0].length;\n    numberTable[0].forEach(function(val, i) {\n      frame.memory.angles[i] = i * dA;\n    });\n  }\n  if(frame.memory.colorList != colorList || frame.memory.colorList == null) {\n    frame.memory.actualColorList = colorList == null ? ColorListGenerators.createDefaultCategoricalColorList(numberTable.length, 0.4) : colorList;\n    frame.memory.colorList = colorList;\n  }\n\n  var mouseOnFrame = frame.containsPoint(mP);\n\n  if(mouseOnFrame) {\n    if(MOUSE_DOWN) {\n      frame.memory.downX = mX;\n      frame.memory.downY = mY;\n      frame.memory.pressed = true;\n      frame.memory.zoomPressed = frame.memory.zoom;\n      frame.memory.anglePressed = frame.memory.angle0;\n    }\n\n    frame.memory.zoom *= (1 - 0.4 * WHEEL_CHANGE);\n  }\n\n  if(MOUSE_UP) frame.memory.pressed = false;\n  if(frame.memory.pressed) {\n    var center = frame.getCenter();\n    var dx0 = frame.memory.downX - center.x;\n    var dy0 = frame.memory.downY - center.y;\n    var d0 = Math.sqrt(Math.pow(dx0, 2) + Math.pow(dy0, 2));\n    var dx1 = mX - center.x;\n    var dy1 = mY - center.y;\n    var d1 = Math.sqrt(Math.pow(dx1, 2) + Math.pow(dy1, 2));\n    frame.memory.zoom = frame.memory.zoomPressed * ((d1 + 5) / (d0 + 5));\n    var a0 = Math.atan2(dy0, dx0);\n    var a1 = Math.atan2(dy1, dx1);\n    frame.memory.angle0 = frame.memory.anglePressed + a1 - a0;\n  }\n\n  if(mouseOnFrame) frame.memory.image = null;\n\n  var captureImage = frame.memory.image == null && !mouseOnFrame;\n  var drawingImage = !mouseOnFrame && frame.memory.image != null &&  !captureImage;\n\n  if(drawingImage) {\n    drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n  } else {\n    if(captureImage) {\n      // TODO refactor to not reassign context\n      // var newCanvas = document.createElement(\"canvas\");\n      // newCanvas.width = frame.width;\n      // newCanvas.height = frame.height;\n      // var newContext = newCanvas.getContext(\"2d\");\n      // newContext.clearRect(0, 0, frame.width, frame.height);\n      // var mainContext = context;\n      // context = newContext;\n      // var prevFx = frame.x;\n      // var prevFy = frame.y;\n      // frame.x = 0;\n      // frame.y = 0;\n      // setFill('white');\n      // fRect(0, 0, frame.width, frame.height);\n    }\n\n    context.save();\n    clipRectangle(frame.x, frame.y, frame.width, frame.height);\n\n    IntervalTableDraw.drawCircularIntervalsFlowTable(frame.memory.flowIntervals, frame.getCenter(), frame.memory.radius * frame.memory.zoom, frame.memory.r0, frame.memory.actualColorList, frame.memory.names, true, frame.memory.angles, frame.memory.angle0);\n\n    context.restore();\n\n    if(names) {\n      var a;\n      var r = frame.memory.radius * frame.memory.zoom + 8;\n\n      setText('black', 14, null, 'center', 'middle');\n\n      names.forEach(function(name, i) {\n        a = frame.memory.angle0 + frame.memory.angles[i];\n\n        fTextRotated(String(name), frame.getCenter().x + r * Math.cos(a), frame.getCenter().y + r * Math.sin(a), a + HalfPi);\n      });\n    }\n\n\n    if(captureImage) {\n      // TODO refactor to not reassign context\n      // context = mainContext;\n      // frame.memory.image = new Image();\n      // frame.memory.image.src = newCanvas.toDataURL();\n      // frame.x = prevFx;\n      // frame.y = prevFy;\n      // drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n    }\n  }\n};","import {\n  mX,\n  mY,\n  mP,\n  MOUSE_DOWN\n} from \"src/Global\";\n\nimport {\n  setFill,\n  fText,\n  fRect,\n  getTextW,\n  setText,\n  fLines\n} from \"src/tools/graphic/SimpleGraphics\";\n\nimport { typeOf } from \"src/tools/utils/code/ClassUtils\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport StringList from \"src/dataStructures/strings/StringList\";\n\nfunction NumberListDraw() {};\nexport default NumberListDraw;\n\n/**\n * draws a simple graph\n * @param  {Rectangle} frame\n * @param  {NumberList} numberList\n *\n * @param {Number} margin\n * @param {Object} xValues horizontal values, could be a stringList, a numberList or an Interval\n * @return {Number} index of element clicked\n * tags:draw\n */\nNumberListDraw.drawSimpleGraph = function(frame, numberList, margin, xValues) {\n  if(numberList == null || numberList.getNormalized == null) return;\n\n  margin = margin || 0;\n\n  //setup\n  if(frame.memory == null || numberList != frame.memory.numberList) {\n    frame.memory = {\n      numberList: numberList,\n      minmax: numberList.getMinMaxInterval(),\n      zero: null\n    };\n    if(frame.memory.minmax.x > 0 && frame.memory.minmax.y > 0) {\n      frame.memory.normalizedList = numberList.getNormalizedToMax();\n    } else {\n      frame.memory.normalizedList = numberList.getNormalized();\n      frame.memory.zero = -frame.memory.minmax.x / frame.memory.minmax.getAmplitude();\n    }\n\n    frame.memory.xTexts = new StringList();\n\n    if(xValues != null && xValues.type == \"Interval\") {\n      var kx = (xValues.getAmplitude() + 1) / numberList.length;\n    }\n\n    numberList.forEach(function(val, i) {\n      frame.memory.xTexts[i] = (xValues == null) ? String(numberList[i]) : ((kx == null ? xValues[i] : (xValues.x + i * kx)) + \":\" + numberList[i]);\n    });\n  }\n\n  var i;\n  var subframe = new Rectangle(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  subframe.bottom = subframe.getBottom();\n  var x;\n  var dx = subframe.width / numberList.length;\n  var overI = -1;\n\n  var mouseOnFrame = subframe.containsPoint(mP);\n  var normalColor = mouseOnFrame ? 'rgb(160,160,160)' : 'black';\n\n  if(frame.memory.zero) {\n    var zeroY = subframe.bottom - subframe.height * frame.memory.zero; //Math.max(subframe.bottom - subframe.height*frame.memory.zero, subframe.y);\n    for(i = 0; numberList[i] != null; i++) {\n      x = subframe.x + i * dx;\n      if(mouseOnFrame && mX > x && mX < x + dx) {\n        overI = i;\n        setFill('black');\n      } else {\n        setFill(normalColor);\n      }\n      fRect(subframe.x + i * dx, zeroY, dx, -subframe.height * (frame.memory.normalizedList[i] - frame.memory.zero));\n    }\n  } else {\n    for(i = 0; numberList[i] != null; i++) {\n      x = subframe.x + i * dx;\n      if(mouseOnFrame && mX > x && mX < x + dx) {\n        overI = i;\n        setFill('black');\n      } else {\n        setFill(normalColor);\n      }\n      fRect(x, subframe.bottom, dx, -subframe.height * frame.memory.normalizedList[i]);\n    }\n  }\n\n  var clicked;\n\n  if(overI != -1) {\n    setText('white', 12);\n    var text = frame.memory.xTexts[overI];\n    var w = getTextW(text);\n    setFill('rgb(100,100,100)');\n    fLines(\n      mX, mY,\n      mX + 16, mY - 10,\n      mX + w + 16, mY - 10,\n      mX + w + 16, mY - 30,\n      mX + 6, mY - 30,\n      mX + 6, mY - 10\n    );\n    setFill('white');\n    fText(text, mX + 10, mY - 26);\n    if(MOUSE_DOWN) clicked = overI;\n  }\n\n  return clicked;\n};","import { MOUSE_DOWN, mP } from \"src/Global\";\nimport { setText, fText } from \"src/tools/graphic/SimpleGraphics\";\n\nfunction ObjectDraw() {}\nexport default ObjectDraw;\n\n\n/**\n * counts the number of times the function is called\n * @param  {Rectangle} frame\n * @param  {Object} object\n * tags:draw\n */\nObjectDraw.count = function(frame, object) {\n  if(frame.memory == null) {\n    frame.memory = {\n      n: 1,\n      object: object\n    };\n  }\n\n  if(frame.memory.object != object) {\n    frame.memory.object = object;\n    frame.memory.n++;\n  }\n\n  if(MOUSE_DOWN && frame.containsPoint(mP)) frame.memory.n = 0;\n\n  setText('black', 12);\n  fText(frame.memory.n, frame.x + 10, frame.y + 10);\n};","import { setText } from \"src/tools/graphic/SimpleGraphics\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport DrawTexts from \"src/tools/graphic/DrawTexts\";\n\nfunction StringDraw() {}\nexport default StringDraw;\n\n/**\n * draws a String (if the object is not a string it displays the json)\n * @param  {Rectangle} frame\n * @param  {Object} object normally a String (if not, a conversion will be made)\n *\n * @param  {Number} fontSize\n * @param  {String} fontStyle ex:'bold italic'\n * @param  {Number} margin\n * @return {Object}\n * tags:draw\n */\nStringDraw.drawText = function(frame, object, fontSize, fontStyle, margin) {\n  //var frame = frame;//StringDraw.drawText;\n\n  margin = margin || 10;\n  fontSize = fontSize || 12;\n\n  var subframe = new Rectangle(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  subframe.bottom = subframe.getBottom();\n\n  var lineHeight = Math.floor(fontSize * 1.2);\n\n  setText('black', fontSize, null, null, null, fontStyle);\n\n  var significantChange = frame.memory == null || object != frame.memory.object || fontSize != frame.memory.fontSize || fontStyle != frame.memory.fontStyle || margin != frame.memory.margin || frame.width != frame.memory.width || frame.height != frame.memory.height;\n\n  //setup\n  if(significantChange) {\n    var realString = object == null ?\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t:\n      (typeof object == 'string') ?\n\t\t\t\t\t\t\tobject\n\t\t\t\t\t\t\t:\n      JSON.stringify(object, null, \"\\t\");\n    frame.memory = {\n      textLines: DrawTexts.textWordWrapReturnLines(realString, subframe.width, subframe.height, lineHeight, true),\n      object: object,\n      fontSize: fontSize,\n      fontStyle: fontStyle,\n      margin: margin,\n      width: frame.width,\n      height: frame.height\n    };\n  }\n\n  DrawTexts.fillTextRectangleWithTextLines(frame.memory.textLines, subframe.x, subframe.y, subframe.height, lineHeight);\n};","import List from \"src/dataStructures/lists/List\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport DrawTexts from \"src/tools/graphic/DrawTexts\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\n\nfunction StringListDraw() {}\nexport default StringListDraw;\n\nStringListDraw.tagCloudRectangles = function(stringList, weights, frame) {\n\n  var normWeights = table[1].sqrt().getNormalizedToMax();\n\n  var rectangles = new List();\n  var textPositions = new Polygon();\n  var textSizes = new NumberList();\n\n  var rectanglesPlaced = new List();\n\n  var dL = 6;\n\n  var a = 0;\n  var r = 0;\n  var p = new Point(0, 0);\n\n  var w;\n  var h;\n\n  for(var i = 0; words[i] != null; i++) {\n    //words[i] = words[i].toUpperCase();\n    textSizes[i] = Math.round(weights[i] * 16) * dL;\n\n    DrawTexts.setContextTextProperties('black', textSizes[i], 'Arial', null, null, 'bold');\n    w = Math.ceil((2 + context.measureText(stringList[i]).width) / dL) * dL;\n    h = textSizes[i];\n\n    while(StringListDraw._pointInRectangles(rectanglesPlaced, p, w, h)) {\n      p.x += dL;\n      p.y -= dL;\n      if(p.y < 0) {\n        p.y = p.x;\n        p.x = 0;\n      }\n    }\n\n    rectangles[i] = new Rectangle(p.x, p.y, w, h);\n    rectanglesPlaced.push(rectangles[i]);\n  }\n};\n\nStringListDraw._pointInRectangles = function(rectangles, p, width, height) {\n  var rect;\n  for(var i = 0; rectangles[i] != null; i++) {\n    rect = rectangles[i];\n    if(p.x + width > rect.x && p.x < (rect.x + rect.width) && p.y + height > rect.y && p.y < (rect.y + rect.height)) return true;\n  }\n  return false;\n};","import List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport { context } from \"src/Global\";\nimport DrawTexts from \"src/tools/graphic/DrawTexts\";\n\n/**\n * @classdesc Operators that contain visualization method algoritms and return a Table with parameters for StringListPrimitive\n *\n * @namespace\n * @category strings\n */\nfunction StringListVisOperators() {}\nexport default StringListVisOperators;\n\n\nStringListVisOperators.simpleTagCloud = function(stringList, weights, frame, font, interLineFactor) {\n  font = font == null ? 'Arial' : font;\n  interLineFactor = interLineFactor == null ? 1.2 : interLineFactor;\n\n  var i;\n  var j;\n  var xx;\n  var yy;\n  var tag;\n  var wT;\n\n  var sT;\n  var maxST;\n\n  var K = 20;\n  var i0Line;\n\n  var normWeigths = weights.getNormalizedToMax();\n\n  var sizes;\n  var positions;\n\n  var notFinished = true;\n\n  var trys = 0;\n\n  while(notFinished) {\n    var interLine = K * interLineFactor;\n    xx = 0;\n    yy = 0; //interLine;\n    maxST = 0;\n    i0Line = 0;\n\n    sizes = new NumberList();\n    positions = new Polygon();\n\n    for(i = 0; stringList[i] != null; i++) {\n      tag = stringList[i];\n      sT = Math.floor(Math.sqrt(normWeigths[i]) * K);\n\n      sizes.push(sT);\n\n      context.font = String(sT) + 'px ' + font;\n      wT = context.measureText(tag).width;\n\n      if(xx + wT > frame.width) {\n        xx = 0;\n        yy += (maxST * interLineFactor + 1);\n        maxST = 0;\n        for(j = i0Line; j < i; j++) {\n          positions[j].y = yy;\n        }\n        i0Line = i;\n      }\n\n      maxST = Math.max(maxST, sT);\n      positions.push(new Point(xx, yy));\n      xx += wT + sT * 0.2;\n    }\n\n    yy += (maxST * interLineFactor + 1);\n    for(j = i0Line; stringList[j] != null; j++) {\n      positions[j].y = yy;\n    }\n\n\n    notFinished = false;\n    if(yy < frame.height * 0.97) {\n      K = 0.5 * K + 0.5 * K * frame.height / (yy + interLine);\n      notFinished = true;\n    }\n    if(yy >= frame.height * 0.995) {\n      K = 0.5 * K + 0.5 * K * frame.height / (yy + interLine);\n      notFinished = true;\n    }\n    trys++;\n    if(trys > 10) notFinished = false;\n  }\n\n  var table = new Table();\n  table[0] = stringList;\n  table[1] = positions;\n  table[2] = sizes;\n\n  return table;\n};\n\n\n\nStringListVisOperators.tagCloudRectangles = function(stringList, weights, frame, mode, margin) {\n  mode = mode == null ? 0 : mode;\n  margin = margin == null ? 0 : margin;\n\n  var normWeights = weights.sqrt().getNormalizedToMax();\n\n  var roundSizes = mode == 0;\n\n  var rectangles = new List();\n  var textPositions = new Polygon();\n  var textSizes = new NumberList();\n\n  var rectanglesPlaced = new List();\n\n  var dL = 6;\n\n  var a = 0;\n  var r = 0;\n\n  var px;\n  var py;\n  var center;\n  var rMax = 0;\n\n  switch(mode) {\n    case 0: //open triangle\n      px = frame.x;\n      py = frame.y;\n      break;\n    case 2: //rectangle\n      var jump = 5;\n      var nStep = 0;\n      var nSteps = 1;\n      var pc = new Point();\n    case 1: //circle\n      px = 0;\n      py = 0;\n      center = frame.getCenter();\n      break;\n  }\n\n  var w;\n  var h;\n  var prop = frame.width / frame.height;\n\n  for(var i = 0; stringList[i] != null; i++) {\n    textSizes[i] = roundSizes ? Math.round(normWeights[i] * 12) * dL : normWeights[i] * 12 * dL;\n\n    DrawTexts.setContextTextProperties('black', textSizes[i], LOADED_FONT, null, null, 'bold');\n    w = Math.ceil((2 + context.measureText(stringList[i]).width) / dL) * dL;\n    h = textSizes[i];\n\n    switch(mode) {\n      case 0: //open triangle\n        while(StringListVisOperators._pointInRectangles(rectanglesPlaced, px, py, w, h, margin)) {\n          px += dL;\n          py -= dL;\n          if(py < frame.y) {\n            py = p.x;\n            px = frame.x;\n          }\n        }\n        break;\n      case 1: //circle\n        if(i == 0) {\n          px = center.x - w * 0.5;\n          py = center.y - h * 0.5;\n        } else {\n          a = i * 0.1;\n          r = 0;\n          while(StringListVisOperators._pointInRectangles(rectanglesPlaced, px, py, w, h, margin)) {\n            r += 1;\n            a += r * 0.005;\n\n            px = center.x + prop * r * Math.cos(a) - w * 0.5;\n            py = center.y + r * Math.sin(a) - h * 0.5;\n          }\n          rMax = Math.max(rMax, prop * r + w * 0.5);\n        }\n        break;\n      case 2: //rectangle\n        if(i == 0) {\n          pc = center.clone();\n          px = pc.x - w * 0.5;\n          py = pc.y - h * 0.5;\n        } else {\n          nStep = 0;\n          nSteps = 1;\n          a = 0;\n          pc = center.clone();\n          while(StringListVisOperators._pointInRectangles(rectanglesPlaced, px, py, w, h, margin)) {\n            nStep++;\n\n            pc.x += prop * jump * Math.cos(a);\n            pc.y += jump * Math.sin(a);\n\n            px = pc.x - w * 0.5;\n            py = pc.y - h * 0.5;\n\n            if(nStep >= nSteps) {\n              a += Math.PI * 0.5;\n              nSteps += 0.5;\n              nStep = 0;\n            }\n          }\n          rMax = Math.max(Math.abs(pc.x - center.x) + w * 0.5, rMax);\n        }\n        break;\n\n    }\n\n    rectangles[i] = new Rectangle(px, py, w, h);\n    rectanglesPlaced.push(rectangles[i]);\n  }\n\n  if(mode == 1 || mode == 2) {\n    var rectangle;\n    prop = 0.5 * frame.width / rMax;\n    for(i = 0; rectangles[i] != null; i++) {\n      rectangle = rectangles[i];\n      rectangle.x = center.x + (rectangle.x - center.x) * prop;\n      rectangle.y = center.y + (rectangle.y - center.y) * prop;\n      rectangle.width *= prop;\n      rectangle.height *= prop;\n      textSizes[i] *= prop;\n    }\n  }\n\n  var table = new Table();\n  table[0] = stringList;\n  table[1] = rectangles;\n  table[2] = textSizes;\n\n  return table;\n};\n\nStringListVisOperators._pointInRectangles = function(rectangles, px, py, width, height, margin) {\n  var rect;\n  for(var i = 0; rectangles[i] != null; i++) {\n    rect = rectangles[i];\n    if(px + width > (rect.x - margin) && px < (rect.x + rect.width + margin) && (py + height) > (rect.y - margin) && py < (rect.y + rect.height + margin)) return true;\n  }\n  return false;\n};\n","import {\n  context,\n  mX,\n  mY,\n  mP,\n  TwoPi\n} from \"src/Global\";\n\nimport {\n  setCursor,\n  line,\n  setStroke,\n  setFill,\n  fText,\n  setText,\n  drawImage,\n  restore,\n  bezier,\n  fCircleM,\n  clipCircle,\n  fRect,\n  getTextW\n} from \"src/tools/graphic/SimpleGraphics\";\n\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\n\n/**\n * @classdesc Functions for drawing {@link Network|Networks}.\n *\n * @namespace\n * @category networks\n */\nfunction NetworkDraw() {}\nexport default NetworkDraw;\n\n/**\n * @ignore\n */\nNetworkDraw._drawNode = function(node, x, y, r) {\n  var over = false;\n  if(node.image) {\n    clipCircle(x, y, r);\n    drawImage(node.image, x - r, y - r * 1.3, r * 2, r * 3); //[!] this assumes a 3/2 proportioned image\n    restore();\n    over = Math.pow(x - mX, 2) + Math.pow(y - mY, 2) <= r * r;\n  } else {\n    setFill(node.color == null ? 'rgb(50,50,50)' : node.color);\n    over = fCircleM(x, y, r);\n  }\n  if(over) setCursor('pointer');\n  return over;\n};\n\n\n/**\n * Draws a radial (elliptical) Network\n *\n * @param  {Rectangle} frame A Rectangle indicating the width, height, and location of the drawing area.\n * @param  {Network} network The Network to draw.\n * @return {Node} If a Node in the Network is currently being moused over, it is returned.\n * If no Node is being interacted with, undefined is returned.\n * tags:draw\n */\nNetworkDraw.drawRadialNetwork = function(frame, network) {\n  var r = 1.1 * Math.min(frame.width, frame.height) / network.nodeList.length;\n  var rw = frame.width * 0.5 - r;\n  var rh = frame.height * 0.5 - r;\n  var cxf = frame.x + frame.width * 0.5;\n  var cyf = frame.y + frame.height * 0.5;\n  var mx, my, d;\n  var nodeOver;\n  var dA = TwoPi / network.nodeList.length;\n\n  var polygon = new Polygon();\n\n  setFill('black');\n\n  network.nodeList.forEach(function(node, i) {\n    node._drawRadialNetwork_x = cxf + rw * Math.cos(i * dA);\n    node._drawRadialNetwork_y = cyf + rh * Math.sin(i * dA);\n  });\n\n  network.relationList.forEach(function(relation) {\n    setStroke('black', relation.weight * 0.25);\n    mx = (relation.node0._drawRadialNetwork_x + relation.node1._drawRadialNetwork_x) * 0.5;\n    my = (relation.node0._drawRadialNetwork_y + relation.node1._drawRadialNetwork_y) * 0.5;\n    d = Math.sqrt(Math.pow(relation.node0._drawRadialNetwork_x - relation.node1._drawRadialNetwork_x, 2), Math.pow(relation.node0._drawRadialNetwork_y - relation.node1._drawRadialNetwork_y, 2)) + 1;\n    mx = (1 - 0.5 * (d / rw)) * mx + 0.5 * (d / rw) * cxf;\n    my = (1 - 0.5 * (d / rh)) * my + 0.5 * (d / rh) * cyf;\n    bezier(relation.node0._drawRadialNetwork_x, relation.node0._drawRadialNetwork_y,\n      mx, my,\n      mx, my,\n      relation.node1._drawRadialNetwork_x, relation.node1._drawRadialNetwork_y);\n  });\n\n  network.nodeList.forEach(function(node) {\n    if(NetworkDraw._drawNode(node, node._drawRadialNetwork_x, node._drawRadialNetwork_y, r)) nodeOver = node;\n  });\n\n  return nodeOver;\n};\n\n\n/**\n * Draws a Network with nodes placed in coordinates provided by a polygon.\n *\n * @param  {Rectangle} frame\n * @param  {Network} network\n * @param {Polygon} polygon Nodes positions\n *\n * @param {Boolean} respectProportions If true, proportions will be equal for both axis\n * @param {Boolean} logScale uses a logarithmic scale in both axis, applies only if all values are >=0\n * @param {Boolean} drawGrid draws a grid\n * @param {Number} margin\n * @return {Node} If a Node in the Network is currently being moused over, it is returned.\n * If no Node is being interacted with, undefined is returned.\n * tags:draw\n */\nNetworkDraw.drawNetwork2D = function(frame, network, polygon, respectProportions, logScale, drawGrid, margin) {\n  if(network == null || polygon == null || polygon.type != 'Polygon') return;\n\n  respectProportions = respectProportions || false;\n  logScale = logScale || false;\n  drawGrid = drawGrid || false;\n  margin = margin || 0;\n\n\n  var r = 1.1 * Math.min(frame.width, frame.height) / network.nodeList.length;\n\n  var nodeOver;\n  var memory = frame.memory;\n  var kx;\n  var ky;\n  var frameP;\n  var frameMargin;\n  var changeOnFrame = memory == null || !memory.frame.isEqual(frame);\n\n  if(memory == null || memory.network != network || memory.nNodes != network.nodeList.length || memory.polygon != polygon || changeOnFrame || memory.respectProportions != respectProportions || memory.margin != margin || memory.logScale != logScale || memory.drawGrid != drawGrid) {\n\n    if(memory == null) {\n      frame.memory = {};\n      memory = frame.memory;\n    }\n    memory.frame = frame.clone();\n    memory.network = network;\n    var differentSize = memory.polygon != null && memory.polygon.length != polygon.length;\n    memory.polygon = polygon;\n    memory.respectProportions = respectProportions;\n    memory.logScale = logScale;\n    memory.drawGrid = drawGrid;\n    memory.margin = margin;\n    memory.nNodes = network.nodeList.length;\n\n    frame.bottom = frame.getBottom();\n    frame.right = frame.getRight();\n    memory.frameMargin = new Rectangle(frame.x + margin, frame.y + margin, frame.width - 2 * margin, frame.height - 2 * margin);\n    frameMargin = memory.frameMargin;\n    memory.frameMargin.right = memory.frameMargin.getRight();\n    memory.frameMargin.bottom = memory.frameMargin.getBottom();\n    memory.frameP = polygon.getFrame();\n    frameP = memory.frameP;\n    frameP.right = frameP.getRight();\n    frameP.bottom = frameP.getBottom();\n\n\n    if(respectProportions) kx = ky = Math.min(kx, ky);\n    var project;\n    memory.actualLogScale = logScale && frameP.x >= 0 && frameP.y >= 0;\n    if(memory.actualLogScale) {\n      kx = frameMargin.width / Math.log((frameP.right + 1) / (frameP.x + 1));\n      ky = frameMargin.height / Math.log((frameP.bottom + 1) / (frameP.y + 1));\n      project = function(p) {\n        return new Point((Math.log(p.x + 1) - Math.log(frameP.x + 1)) * kx + frameMargin.x, frameMargin.bottom - (Math.log(p.y + 1) - Math.log(frameP.y + 1)) * ky);\n      };\n    } else {\n      kx = frameMargin.width / frameP.width;\n      ky = frameMargin.height / frameP.height;\n      project = function(p) {\n        return new Point((p.x - frameP.x) * kx + frameMargin.x, frameMargin.bottom - (p.y - frameP.y) * ky);\n      };\n    }\n    memory.projectedPolygon = new Polygon();\n    polygon.forEach(function(p, i) {\n      memory.projectedPolygon[i] = project(p);\n    });\n\n    if(frameP.x <= 0 && frameP.getRight() >= 0) {\n      memory.yAxis = (-frameP.x) * kx + frameMargin.x;\n    }\n    if(frameP.y <= 0 && frameP.getBottom() >= 0) {\n      memory.xAxis = frameMargin.bottom - (-frameP.y) * ky;\n    }\n\n    if(frame.memory.projectPolygonConvergent == null || changeOnFrame || differentSize) frame.memory.projectPolygonConvergent = memory.projectedPolygon.clone();\n\n  } else {\n    frameP = memory.frameP;\n    frameMargin = memory.frameMargin;\n  }\n\n  setStroke('rgb(50,50,50)', 2);\n\n  if(memory.xAxis) line(frameMargin.x, memory.xAxis, memory.frameMargin.right, memory.xAxis);\n  if(memory.yAxis) line(memory.yAxis, memory.frameMargin.y, memory.yAxis, memory.frameMargin.bottom);\n\n  if(frame.containsPoint(mP)) {\n    setStroke('rgb(50,50,50)', 0.5);\n    line(frame.x + 2, mY + 0.5, frame.right - 4, mY + 0.5);\n    line(mX + 0.5, frame.y + 2, mX + 0.5, frame.bottom - 4);\n  }\n\n  memory.projectPolygonConvergent.approach(memory.projectedPolygon, 0.1);\n\n  network.nodeList.forEach(function(node, i) {\n    node.x = memory.projectPolygonConvergent[i].x;\n    node.y = memory.projectPolygonConvergent[i].y;\n  });\n\n  network.relationList.forEach(function(relation) {\n    setStroke('black', relation.weight * 0.25);\n    line(relation.node0.x, relation.node0.y, relation.node1.x, relation.node1.y);\n  });\n\n  network.nodeList.forEach(function(node) {\n    if(NetworkDraw._drawNode(node, node.x, node.y, r)) {\n      nodeOver = node;\n    }\n  });\n\n  //values label\n\n  if(frame.containsPoint(mP)) {\n    if(nodeOver == null) {\n      if(memory.actualLogScale) {\n        NetworkDraw._drawNodeValues(\n          Math.floor(10 * (Math.pow(Math.E, Math.log((frameP.right + 1) / (frameP.x + 1)) * (mX - frameMargin.x) / frameMargin.width) - 1)) / 10,\n          Math.floor(10 * (Math.pow(Math.E, Math.log((frameP.bottom + 1) / (frameP.y + 1)) * (frameMargin.bottom - mY) / frameMargin.height) - 1)) / 10\n        );\n      } else {\n        NetworkDraw._drawNodeValues(\n          Math.floor(10 * (frameP.x + frameP.width * (mX - memory.frameMargin.x) / memory.frameMargin.width)) / 10,\n          Math.floor(10 * (frameP.y + frameP.height * (memory.frameMargin.bottom - mY) / memory.frameMargin.height)) / 10\n        );\n      }\n    } else {\n      var index = network.nodeList.indexOf(nodeOver);\n      NetworkDraw._drawNodeValues(polygon[index].x, polygon[index].y, nodeOver.name);\n    }\n  }\n\n\n  return nodeOver;\n};\n\n/**\n * @ignore\n */\nNetworkDraw._drawNodeValues = function(vx, vy, name) {\n  var text = (name == null ? '' : (name + ': ')) + vx + \", \" + vy;\n  setFill('rgba(50,50,50,0.8)');\n  fRect(mX - 2, mY - 2, -getTextW(text) - 4, -14);\n  setText('white', 12, null, 'right', 'bottom');\n  fText(text, mX - 4, mY - 2);\n};\n\n\n//to be tested\n\n/**\n * drawNetworkMatrix\n * @ignore\n */\nNetworkDraw.drawNetworkMatrix = function(frame, network, colors, relationsColorScaleFunction, margin, directed, normalizedNodeWeights, returnHovered) {\n  relationsColorScaleFunction = relationsColorScaleFunction == null ? ColorOperators.grayScale : relationsColorScaleFunction;\n  margin = margin == null ? 2 : margin;\n  directed = directed == null ? false : directed;\n\n  var i;\n  var nodeList = network.nodeList;\n  var relationList = network.relationList;\n  var relation;\n\n  var useWeights = (normalizedNodeWeights != null);\n\n  var dX = frame.width / (nodeList.length + 1);\n  var dY = frame.height / (nodeList.length + 1);\n  var w = dX - margin;\n  var h = dY - margin;\n\n  var ix;\n  var iy;\n\n  var xx = dX;\n  var yy = dY;\n\n  returnHovered = returnHovered && frame.pointIsInside(mousePoint);\n\n  if(returnHovered) var hoverValues = new Point(-1, -1);\n\n\n  if(useWeights) {\n    dX = frame.width - dX;\n    dY = frame.height - dY;\n    var ww;\n    var hh;\n    var xNodes = [];\n    var yNodes = [];\n    var wNodes = [];\n    var hNodes = [];\n  }\n\n  for(i = 0; nodeList[i] != null; i++) {\n    context.fillStyle = colors[i];\n    if(useWeights) {\n      ww = dX * normalizedNodeWeights[i];\n      hh = dY * normalizedNodeWeights[i];\n      context.fillRect(frame.x + xx, frame.y, ww - margin, h);\n      context.fillRect(frame.x, frame.y + yy, w, hh - margin);\n\n      if(returnHovered) {\n        if(mouseX > frame.x + xx && mouseX < frame.x + xx + ww) hoverValues.x = i;\n        if(mouseY > frame.y + yy && mouseY < frame.y + yy + hh) hoverValues.y = i;\n      }\n      xNodes[nodeList[i].id] = xx;\n      yNodes[nodeList[i].id] = yy;\n      wNodes[nodeList[i].id] = ww;\n      hNodes[nodeList[i].id] = hh;\n      xx += ww;\n      yy += hh;\n\n\n\n    } else {\n      context.fillRect(frame.x + (i + 1) * dX, frame.y, w, h);\n      context.fillRect(frame.x, frame.y + (i + 1) * dY, w, h);\n    }\n  }\n\n  for(i = 0; relationList[i] != null; i++) {\n    relation = relationList[i];\n    context.fillStyle = relationsColorScaleFunction(relation.weight);\n    if(useWeights) {\n      context.fillRect(frame.x + xNodes[relation.node0.id], frame.y + yNodes[relation.node1.id], wNodes[relation.node0.id] - margin, hNodes[relation.node1.id] - margin);\n      if(!directed) context.fillRect(frame.x + yNodes[relation.node1.id], frame.y + xNodes[relation.node0.id], hNodes[relation.node1.id] - margin, wNodes[relation.node0.id] - margin);\n    } else {\n      ix = nodeList.indexOf(relation.node0) + 1;\n      iy = nodeList.indexOf(relation.node1) + 1;\n      context.fillRect(frame.x + ix * dX, frame.y + iy * dY, w, h);\n      if(!directed && (ix != iy)) {\n        context.fillRect(frame.x + iy * dX, frame.y + ix * dY, w, h);\n      }\n    }\n\n  }\n  return hoverValues;\n};\n","import {\n  context,\n  MOUSE_PRESSED,\n  MOUSE_DOWN,\n  MOUSE_UP_FAST,\n  WHEEL_CHANGE,\n  nF,\n  mX,\n  mY,\n  mP\n} from \"src/Global\";\n\nimport {\n  sRect,\n  setCursor,\n  line,\n  setStroke,\n  setFill,\n  fLines,\n  fText,\n  setText,\n  fsRectM,\n  drawImage,\n  getTextW,\n  clipRectangle,\n  sRectM\n} from \"src/tools/graphic/SimpleGraphics\";\n\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport RectangleOperators from \"src/operators/geometry/RectangleOperators\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport List from \"src/dataStructures/lists/List\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport ColorList from \"src/dataStructures/graphic/ColorList\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\n\n/**\n * @classdesc Functions for drawing {@link Tree|Trees}.\n *\n * @namespace\n * @category networks\n */\nfunction TreeDraw() {}\nexport default TreeDraw;\n\n\n/**\n * Simple tree visualization with levels in vertical rectangles.\n *\n * @param {Rectangle} frame\n * @param {Tree} tree The Tree to draw.\n *\n * @param {ColorList} levelColors\n * @param {Number} margin\n * tags:draw\n */\nTreeDraw.drawRectanglesTree = function(frame, tree, levelColors, margin) {\n  levelColors = levelColors == null ? ColorListGenerators.createCategoricalColors(1, tree.nLevels) : levelColors;\n  margin = margin || 1;\n\n  var dX = frame.width / tree.nLevels;\n  TreeDraw._drawRectanglesTreeChildren(tree.nodeList[0], new Rectangle(frame.x, frame.y, dX, frame.height), levelColors, margin);\n};\n\nTreeDraw._drawRectanglesTreeChildren = function(node, frame, colors, margin) {\n  context.fillStyle = colors[node.level];\n  context.fillRect(frame.x + margin, frame.y + margin, frame.width - margin * 2, frame.height - margin * 2);\n  var children = node.toNodeList;\n  //console.log((node.level, node.name, children.length);\n  if(children.length > 0) {\n    var i;\n    var dY = frame.height / (node.descentWeight - 1);\n    var yy = frame.y;\n    var h;\n    for(i = 0; children[i] != null; i++) {\n      h = dY * (children[i].descentWeight);\n      TreeDraw._drawRectanglesTreeChildren(children[i], new Rectangle(frame.x + frame.width, yy, frame.width, h), colors, margin);\n      yy += h;\n    }\n  }\n};\n\n\n/**\n * Creates a simple treemap visualization.\n *\n * @param {Rectangle} frame\n * @param {Tree} tree The Tree to draw.\n *\n * @param {ColorList} colorList\n * @param {NumberList} weights weights of leaves\n * @param {String} textColor if not provided will be calculated to contrast node color\n * @param {Node} externalSelectedNode node to force selection (by id)\n * @return {Node} selected node\n * tags:draw\n */\nTreeDraw.drawTreemap = function(frame, tree, colorList, weights, textColor, externalSelectedNode) {\n  var change = frame.memory == null || frame.memory.tree != tree || frame.memory.width != frame.width || frame.memory.height != frame.height || frame.memory.weights != weights;\n\n  if(externalSelectedNode != null) externalSelectedNode = tree.nodeList.getNodeById(externalSelectedNode.id);\n\n  var changeSelection = (externalSelectedNode != null && (frame.memory == null || externalSelectedNode != frame.memory.nodeSelected));\n\n  if(change) {\n    var changeInTree = frame.memory != null && frame.memory.tree != null != tree;\n    var changeInWeights = frame.memory != null && frame.memory.weights != weights;\n\n    frame.memory = {\n      tree: tree,\n      width: frame.width,\n      height: frame.height,\n      weights: weights,\n      nodeSelected: tree.nodeList[0],\n      nFLastChange: nF,\n      image: null\n    };\n\n    var leaves = (!changeInTree && frame.memory.leaves) ? frame.memory.leaves : tree.getLeaves();\n    frame.memory.leaves = leaves;\n\n    if(weights == null) {\n      tree.nodeList.forEach(function(node) {\n        node._treeMapWeight = node.descentWeight;\n      });\n    } else {\n      leaves.forEach(function(node, i) {\n        node._treeMapWeight = weights[i];\n      });\n      var assignTreemapWeight = function(node) {\n        var i;\n        if(node.toNodeList.length == 0) {\n          return node._treeMapWeight;\n        } else {\n          node._treeMapWeight = 0;\n          for(i = 0; node.toNodeList[i] != null; i++) {\n            node._treeMapWeight += assignTreemapWeight(node.toNodeList[i]);\n          }\n        }\n        return node._treeMapWeight;\n      };\n      assignTreemapWeight(tree.nodeList[0]);\n    }\n\n    tree.nodeList[0]._outRectangle = new Rectangle(0, 0, frame.width, frame.height);\n    tree.nodeList[0]._inRectangle = TreeDraw._inRectFromOutRect(tree.nodeList[0]._outRectangle);\n    TreeDraw._generateRectangles(tree.nodeList[0]);\n\n    frame.memory.focusFrame = TreeDraw._expandRect(tree.nodeList[0]._outRectangle);\n    c.l('>>>>>>>>>>>>>>>>>>>>>>>> frame.memory.focusFrame', frame.memory.focusFrame);\n\n    frame.memory.kx = frame.width / frame.memory.focusFrame.width;\n    frame.memory.mx = -frame.memory.kx * frame.memory.focusFrame.x;\n    frame.memory.ky = frame.height / frame.memory.focusFrame.height;\n    frame.memory.my = -frame.memory.ky * frame.memory.focusFrame.y;\n\n    setText('black', 12);\n    tree.nodeList.forEach(function(node) {\n      node._textWidth = getTextW(node.name);\n    });\n  }\n\n  if(frame.memory.colorList != colorList || frame.memory.colorList == null) {\n    frame.memory.nFLastChange = nF;\n    frame.memory.image = null;\n    frame.memory.actualColorList = colorList == null ? ColorListGenerators.createCategoricalColors(0, tree.nLevels, ColorScales.grayToOrange, 0.1) : colorList;\n    frame.memory.nodesColorList = new ColorList();\n    if(textColor == null) frame.memory.textsColorList = new ColorList();\n\n    if(frame.memory.actualColorList.length <= tree.nLevels) {\n      tree.nodeList.forEach(function(node, i) {\n        frame.memory.nodesColorList[i] = node._color = frame.memory.actualColorList[node.level % frame.memory.actualColorList.length];\n      });\n    } else if(frame.memory.actualColorList.length == frame.memory.leaves.length) {\n      frame.memory.leaves.forEach(function(node, i) {\n        node._color = frame.memory.actualColorList[i];\n        node._rgb = ColorOperators.colorStringToRGB(node._color);\n      });\n      var assignColor = function(node) {\n        var i;\n        if(node.toNodeList.length == 0) return;\n\n        node._rgb = [0, 0, 0];\n        for(i = 0; node.toNodeList[i] != null; i++) {\n          assignColor(node.toNodeList[i]);\n          node._rgb[0] += node.toNodeList[i]._rgb[0];\n          node._rgb[1] += node.toNodeList[i]._rgb[1];\n          node._rgb[2] += node.toNodeList[i]._rgb[2];\n        }\n        node._rgb[0] = Math.floor(node._rgb[0] / node.toNodeList.length);\n        node._rgb[1] = Math.floor(node._rgb[1] / node.toNodeList.length);\n        node._rgb[2] = Math.floor(node._rgb[2] / node.toNodeList.length);\n      };\n      assignColor(tree.nodeList[0]);\n      tree.nodeList.forEach(function(node, i) {\n        if(node._rgb && node._rgbF == null) node._rgbF = [node._rgb[0], node._rgb[1], node._rgb[2]];\n        frame.memory.nodesColorList[i] = 'rgb(' + node._rgb[0] + ',' + node._rgb[1] + ',' + node._rgb[2] + ')';\n      });\n    } else {\n      tree.nodeList.forEach(function(node, i) {\n        node._color = frame.memory.nodesColorList[i] = frame.memory.actualColorList[i % frame.memory.actualColorList.length];\n      });\n    }\n\n    if(textColor == null) {\n      var rgb;\n      tree.nodeList.forEach(function(node, i) {\n        rgb = node._color ? ColorOperators.colorStringToRGB(node._color) : [0, 0, 0];\n        frame.memory.textsColorList[i] = (rgb[0] + rgb[1] + rgb[2] > 360) ? 'black' : 'white';\n      });\n    }\n\n    frame.memory.colorList = colorList;\n  }\n\n  if(textColor == null) textColor = 'black';\n\n  var kxF = frame.width / frame.memory.focusFrame.width;\n  var mxF = -kxF * frame.memory.focusFrame.x;\n  var kyF = frame.height / frame.memory.focusFrame.height;\n  var myF = -kyF * frame.memory.focusFrame.y;\n\n  var v = kxF > frame.memory.kx ? 0.05 : 0.1;\n  var antiv = 1 - v;\n\n  frame.memory.kx = antiv * frame.memory.kx + v * kxF;\n  frame.memory.mx = antiv * frame.memory.mx + v * mxF;\n  frame.memory.ky = antiv * frame.memory.ky + v * kyF;\n  frame.memory.my = antiv * frame.memory.my + v * myF;\n  var kx = frame.memory.kx;\n  var mx = frame.memory.mx;\n  var ky = frame.memory.ky;\n  var my = frame.memory.my;\n\n  var tx = function(x) {\n    return kx * x + mx;\n  };\n  var ty = function(y) {\n    return ky * y + my;\n  };\n\n\n  var x, y;\n  var margTextX, margTextY;\n  var textSize;\n  var exceedes;\n  var rect;\n  var overNode = null;\n  var overI;\n  var mouseOnFrame = frame.containsPoint(mP);\n  var moving = nF - frame.memory.nFLastChange < 50 || Math.pow(frame.memory.kx - kxF, 2) + Math.pow(frame.memory.ky - kyF, 2) + Math.pow(frame.memory.mx - mxF, 2) + Math.pow(frame.memory.my - myF, 2) > 0.01;\n  var captureImage = !moving && frame.memory.image == null && !mouseOnFrame;\n  var drawingImage = !moving && !mouseOnFrame && frame.memory.image != null &&  !captureImage && frame.memory.image.width > 0 && !changeSelection;\n\n  if(drawingImage) {\n    drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n  } else {\n    if(captureImage) {\n      // TODO refactor this to not reassign context\n      // var newCanvas = document.createElement(\"canvas\");\n      // newCanvas.width = frame.width;\n      // newCanvas.height = frame.height;\n      // var newContext = newCanvas.getContext(\"2d\");\n      // newContext.clearRect(0, 0, frame.width, frame.height);\n      // var mainContext = context;\n      // context = newContext;\n      // var prevFx = frame.x;\n      // var prevFy = frame.y;\n      // frame.x = 0;\n      // frame.y = 0;\n      // setFill('white');\n      // fRect(0, 0, frame.width, frame.height);\n      // setText('black', 12);\n    } else {\n      context.save();\n      clipRectangle(frame.x, frame.y, frame.width, frame.height);\n    }\n\n    setStroke('black', 0.2);\n\n    tree.nodeList.forEach(function(node, i) {\n\n      rect = new Rectangle(tx(node._outRectangle.x), ty(node._outRectangle.y), node._outRectangle.width * kx, node._outRectangle.height * ky);\n\n      if(rect.width > 5 && rect.height > 4 && rect.x < frame.width && rect.getRight() > 0 && rect.y < frame.height && rect.getBottom() > 0) {\n\n        x = Math.round(frame.x + rect.x) + 0.5;\n        y = Math.round(frame.y + rect.y) + 0.5;\n\n        if(node._rgbF) {\n          node._rgbF[0] = 0.95 * node._rgbF[0] + 0.05 * node._rgb[0];\n          node._rgbF[1] = 0.95 * node._rgbF[1] + 0.05 * node._rgb[1];\n          node._rgbF[2] = 0.95 * node._rgbF[2] + 0.05 * node._rgb[2];\n          setFill('rgb(' + Math.floor(node._rgbF[0]) + ',' + Math.floor(node._rgbF[1]) + ',' + Math.floor(node._rgbF[2]) + ')');\n        } else {\n          setFill(frame.memory.nodesColorList[i]);\n        }\n\n        if(fsRectM(x, y, Math.floor(rect.width), Math.floor(rect.height))) {\n          overNode = node;\n          overI = i;\n        }\n        if(rect.width > 20) {\n          margTextX = rect.width * TreeDraw.PROP_RECT_MARGIN * 0.8;\n          margTextY = rect.height * TreeDraw.PROP_RECT_MARGIN * 0.15;\n          textSize = rect.height * TreeDraw.PROP_RECT_LABEL - 2;\n          if(textSize >= 5) {\n\n            var propTextSpace = (rect.width - 2 * margTextX) / (node._textWidth * textSize / 12);\n            exceedes = propTextSpace < 1; //(node._textWidth*textSize/12)>(rect.width-1.2*margTextX);\n\n            if(exceedes) {\n              //clipRectangle(x+margTextX, y+margTextY,rect.width-2*margTextX, textSize*2);\n              setText(textColor ? textColor : frame.memory.textsColorList[i], textSize * propTextSpace);\n            } else {\n              setText(textColor ? textColor : frame.memory.textsColorList[i], textSize);\n            }\n\n            fText(node.name, x + margTextX, y + margTextY);\n            //if(exceedes) context.restore();\n          }\n        }\n      }\n    });\n\n    if(captureImage) {\n      c.l('captureImage');\n      // TODO refactor this to not reassign context\n      // context = mainContext;\n      // frame.memory.image = new Image();\n      // frame.memory.image.src = newCanvas.toDataURL();\n      // frame.x = prevFx;\n      // frame.y = prevFy;\n      // drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n    }\n  }\n\n  if(mouseOnFrame) {\n    if(overNode) {\n      setCursor('pointer');\n\n      rect = new Rectangle(tx(overNode._outRectangle.x), ty(overNode._outRectangle.y), overNode._outRectangle.width * kx, overNode._outRectangle.height * ky);\n      x = Math.round(frame.x + rect.x) + 0.5;\n      y = Math.round(frame.y + rect.y) + 0.5;\n      setStroke(textColor ? textColor : frame.memory.textsColorList[overI], 2);\n      sRect(x, y, Math.floor(rect.width), Math.floor(rect.height));\n\n      if(MOUSE_UP_FAST) {\n        frame.memory.focusFrame = TreeDraw._expandRect(overNode._outRectangle);\n        frame.memory.nodeSelected = overNode;\n\n        frame.memory.image = null;\n      }\n    }\n    if(MOUSE_DOWN) {\n      frame.memory.prevMX = mX;\n      frame.memory.prevMY = mY;\n    }\n    if(MOUSE_PRESSED) {\n      var scale = 5 * frame.memory.focusFrame.width / frame.width;\n      frame.memory.focusFrame.x -= (mX - frame.memory.prevMX) * scale;\n      frame.memory.focusFrame.y -= (mY - frame.memory.prevMY) * scale;\n\n      frame.memory.prevMX = mX;\n      frame.memory.prevMY = mY;\n    }\n    if(WHEEL_CHANGE != 0) {\n      var center = frame.memory.focusFrame.getCenter();\n      var zoom = 1 - 0.1 * WHEEL_CHANGE;\n      frame.memory.focusFrame.x = center.x - frame.memory.focusFrame.width * 0.5 * zoom;\n      frame.memory.focusFrame.y = center.y - frame.memory.focusFrame.height * 0.5 * zoom;\n      frame.memory.focusFrame.width *= zoom;\n      frame.memory.focusFrame.height *= zoom;\n    }\n    if(MOUSE_PRESSED || WHEEL_CHANGE != 0) {\n      frame.memory.image = null;\n    }\n  }\n\n  if(changeSelection) {\n    frame.memory.focusFrame = TreeDraw._expandRect(externalSelectedNode._outRectangle);\n    frame.memory.nodeSelected = externalSelectedNode;\n    frame.memory.image = null;\n  }\n\n  if(!captureImage && !drawingImage) context.restore();\n\n\n  return frame.memory.nodeSelected;\n\n};\n\n/**\n * @ignore\n */\nTreeDraw._generateRectangles = function(node) {\n\n  var weights = new NumberList();\n  node.toNodeList.forEach(function(node) {\n    weights.push(node._treeMapWeight);\n  });\n\n  var rectangles = RectangleOperators.squarify(node._inRectangle, weights, false, false);\n\n  node.toNodeList.forEach(function(child, i) {\n    child._outRectangle = TreeDraw._reduceRect(rectangles[i]);\n    child._inRectangle = TreeDraw._inRectFromOutRect(child._outRectangle);\n    TreeDraw._generateRectangles(child);\n  });\n};\n\n/**\n * @ignore\n */\nTreeDraw._reduceRect = function(rect) {\n  return new Rectangle(rect.x + rect.width * TreeDraw.PROP_RECT_REDUCTION_MARGIN, rect.y + rect.height * TreeDraw.PROP_RECT_REDUCTION_MARGIN, rect.width * (1 - 2 * TreeDraw.PROP_RECT_REDUCTION_MARGIN), rect.height * (1 - 2 * TreeDraw.PROP_RECT_REDUCTION_MARGIN));\n};\nTreeDraw._expandRect = function(rect) {\n  return new Rectangle(rect.x - rect.width * TreeDraw.PROP_RECT_EXPANTION_MARGIN, rect.y - rect.height * TreeDraw.PROP_RECT_EXPANTION_MARGIN, rect.width * (1 + 2 * TreeDraw.PROP_RECT_EXPANTION_MARGIN), rect.height * (1 + 2 * TreeDraw.PROP_RECT_EXPANTION_MARGIN));\n};\nTreeDraw._inRectFromOutRect = function(rect) {\n  return new Rectangle(rect.x + rect.width * TreeDraw.PROP_RECT_MARGIN, rect.y + rect.height * TreeDraw.PROP_RECT_LABEL, rect.width * (1 - 2 * TreeDraw.PROP_RECT_MARGIN), rect.height * (1 - TreeDraw.PROP_RECT_MARGIN - TreeDraw.PROP_RECT_LABEL));\n};\nTreeDraw.PROP_RECT_MARGIN = 0.03;\nTreeDraw.PROP_RECT_LABEL = 0.2;\nTreeDraw.PROP_RECT_REDUCTION_MARGIN = 0.01;\nTreeDraw.PROP_RECT_EXPANTION_MARGIN = 0.05;\n\n\n\n///////////////////////////decision tree\n\n\n\n/**\n * Decision tree visualization, tree from {@link TableOperators}'s buildDecisionTree function.\n *\n * @param {Rectangle} frame\n * @param {Tree} tree\n * @return {Node} selected node\n * @return {Node} hovered node\n * tags:draw,ds\n */\nTreeDraw.drawDecisionTree = function(frame, tree) {\n  var change = frame.memory == null || frame.memory.tree != tree || frame.memory.width != frame.width || frame.memory.height != frame.height;\n\n  var gap = frame.height * 0.06;\n  var hTree = tree.nLevels * (frame.height - gap) / (tree.nLevels + 1);\n  var hLevel = hTree / tree.nLevels;\n  var changeInResult = false;\n\n  if(change) {\n    var changeInTree = frame.memory != null && frame.memory.tree != null && frame.memory.tree != tree;\n\n    frame.memory = {\n      tree: tree,\n      width: frame.width,\n      height: frame.height,\n      nodeSelected: tree.nodeList[0],\n      nFLastChange: nF,\n      leaves: null,\n      image: null\n    };\n\n    if(changeInTree || frame.memory.leaves == null) {\n      frame.memory.leaves = tree.getLeaves().getSortedByProperty('valueFollowingProbability', false);\n    }\n\n\n\n    tree.nodeList[0]._outRectangle = new Rectangle(0, 0, frame.width, hTree);\n    tree.nodeList[0]._inRectangle = TreeDraw._inRectFromOutRectDecision(tree.nodeList[0]._outRectangle, hLevel);\n    TreeDraw._generateRectanglesDecision(tree.nodeList[0], hLevel);\n\n    frame.memory.focusFrame = new Rectangle(0, 0, frame.width, frame.height);\n    frame.memory.kx = frame.width / frame.memory.focusFrame.width;\n    frame.memory.mx = -frame.memory.kx * frame.memory.focusFrame.x;\n    frame.memory.ky = frame.height / frame.memory.focusFrame.height;\n    frame.memory.my = -frame.memory.ky * frame.memory.focusFrame.y;\n\n    setText('black', 12);\n    tree.nodeList.forEach(function(node) {\n      node.label = node.toNodeList.length == 0 ? Math.round(node.valueFollowingProbability * 100) / 100 : node.bestFeatureName;\n      node._textWidth = getTextW(node.label);\n    });\n\n\n  }\n\n  if(frame.memory.followingWeights) {\n    tree.nodeList.forEach(function(node) {\n      node._treeMapWeight = node.descentWeight;\n    });\n  }\n\n  var textColor = 'black';\n\n  var kxF = frame.width / frame.memory.focusFrame.width;\n  var mxF = -kxF * frame.memory.focusFrame.x;\n\n  var v = kxF > frame.memory.kx ? 0.05 : 0.1;\n  var antiv = 1 - v;\n\n  frame.memory.kx = antiv * frame.memory.kx + v * kxF;\n  frame.memory.mx = antiv * frame.memory.mx + v * mxF;\n  var kx = frame.memory.kx;\n  var mx = frame.memory.mx;\n\n  var tx = function(x) {\n    return kx * x + mx;\n  };\n\n  var x, y;\n  var margTextX, margTextY;\n  var textSize;\n  var exceedes;\n  var rect;\n  var overNode = null;\n  var overI;\n  var mouseOnFrame = frame.containsPoint(mP);\n  var moving = nF - frame.memory.nFLastChange < 80 || Math.pow(frame.memory.kx - kxF, 2) + Math.pow(frame.memory.mx - mxF, 2) > 0.001;\n  var captureImage = !moving && frame.memory.image == null && !mouseOnFrame;\n  var drawingImage = !moving && !mouseOnFrame && frame.memory.image != null &&  !captureImage && frame.memory.image.width > 0;\n\n  if(drawingImage) {\n    drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n  } else {\n    console.log('drawing');\n    if(captureImage) {\n      // TODO refactor this to not reassign context\n      // var newCanvas = document.createElement(\"canvas\");\n      // newCanvas.width = frame.width;\n      // newCanvas.height = frame.height;\n      // var newContext = newCanvas.getContext(\"2d\");\n      // newContext.clearRect(0, 0, frame.width, frame.height);\n      // var mainContext = context;\n      // context = newContext;\n      // var prevFx = frame.x;\n      // var prevFy = frame.y;\n      // frame.x = 0;\n      // frame.y = 0;\n      // setFill('white');\n      // fRect(0, 0, frame.width, frame.height);\n      // setText('black', 12);\n    } else {\n      context.save();\n      clipRectangle(frame.x, frame.y, frame.width, frame.height);\n    }\n\n    var yLeaves = frame.y + hTree + gap;\n\n    setStroke('black', 0.2);\n\n    tree.nodeList.forEach(function(node, i) {\n\n      rect = new Rectangle(tx(node._outRectangle.x), node._outRectangle.y, node._outRectangle.width * kx, node._outRectangle.height);\n\n      if(rect.x < frame.width && rect.getRight() > 0 && rect.y < frame.height && rect.getBottom() > 0) {\n\n        x = Math.round(frame.x + rect.x) + 0.5;\n        y = Math.round(frame.y + rect.y) + 0.5;\n\n        if(node.pattern) {\n          context.fillStyle = node.pattern;\n          context.fillRect(x, y, Math.floor(rect.width), Math.floor(rect.height));\n\n          if(sRectM(x, y, Math.floor(rect.width), Math.floor(rect.height))) {\n            overNode = node;\n            overI = i;\n          }\n\n        } else {\n\n          setFill(node._color);\n\n          if(fsRectM(x, y, Math.floor(rect.width), Math.floor(rect.height))) {\n            overNode = node;\n            overI = i;\n          }\n        }\n\n        var realWidth = Math.min(rect.getRight(), frame.width) - Math.max(rect.x, 0);\n\n        if(realWidth > 16) {\n          margTextX = rect.width * TreeDraw.PROP_RECT_MARGIN * 0.8;\n          margTextY = rect.height * TreeDraw.PROP_RECT_MARGIN * 0.15;\n          var tC = textColor ? textColor : frame.memory.textsColorList[i];\n          textSize = 18;\n\n          setText(tC, textSize);\n          exceedes = true; //(node._textWidth*textSize/12)>(rect.width-1.2*margTextX);\n          if(exceedes) {\n            clipRectangle(x, y - 17, rect.width, rect.height);\n          }\n\n          //feature or P\n          fText(node.label, Math.max(x, frame.x) + 8, y + 1);\n\n          if(node.value) {\n            textSize = 14;\n            setText(tC, textSize);\n\n            fText(node.value, Math.max(x, frame.x) + 8, y - 17);\n          }\n\n          //size\n          if(realWidth - node._textWidth > 60) {\n            textSize = 12;\n            setText(tC, textSize, null, 'right');\n\n            fText(\"s=\" + node.weight, Math.min(frame.x + rect.getRight(), frame.getRight()) - 2, y + 1);\n            fText(\"e=\" + Math.round(node.entropy * 100) / 100, Math.min(frame.x + rect.getRight(), frame.getRight()) - 2, y + 12);\n            if(node.toNodeList.length > 0) fText(\"P=\" + Math.round(node.valueFollowingProbability * 100) / 100, Math.min(frame.x + rect.getRight(), frame.getRight()) - 2, y + 23);\n            fText(\"l=\" + Math.round(node.lift * 100) / 100, Math.min(frame.x + rect.getRight(), frame.getRight()) - 2, y + 23 + (node.toNodeList.length > 0 ? 11 : 0));\n          }\n\n          if(exceedes) context.restore();\n        }\n      }\n    });\n\n    //leaves\n\n    var x0 = frame.x;\n    var w;\n    var sx = frame.width / tree.nodeList[0].weight;\n    var waitingForMark = true;\n    var waitingForDoubleMark = true;\n    var waitingForHalfMark = true;\n    var waitingFor15Mark = true;\n    var waitingFor067Mark = true;\n\n\n    frame.memory.leaves.forEach(function(node) {\n      setStroke('black', 0.2);\n\n      w = sx * node.weight;\n\n      if(node.pattern) {\n        context.fillStyle = node.pattern;\n        context.fillRect(x0, yLeaves, w, hLevel);\n\n        if(sRectM(x0, yLeaves, w, hLevel)) {\n          overNode = node;\n          overI = tree.nodeList.indexOf(node);\n        }\n\n      } else {\n        setFill(node._color);\n        if(fsRectM(x0, yLeaves, w, hLevel)) {\n          overNode = node;\n          overI = tree.nodeList.indexOf(node);\n        }\n      }\n\n      node._xLeaf = x0;\n      node._wLeaf = w;\n\n      setStroke('black', 1);\n\n      if(waitingForMark && node.valueFollowingProbability < tree.nodeList[0].valueFollowingProbability) {\n        waitingForMark = false;\n        setFill('black');\n        fLines(x0, yLeaves - 14, x0 + 4, yLeaves - 8, x0, yLeaves - 2, x0 - 4, yLeaves - 8);\n      }\n      if(waitingForDoubleMark && node.valueFollowingProbability <= tree.nodeList[0].valueFollowingProbability * 2) {\n        waitingForDoubleMark = false;\n        line(x0, yLeaves - 14, x0, yLeaves - 2);\n      }\n      if(waitingForHalfMark && node.valueFollowingProbability < tree.nodeList[0].valueFollowingProbability * 0.5) {\n        waitingForHalfMark = false;\n        line(x0, yLeaves - 14, x0, yLeaves - 2);\n      }\n      if(waitingFor15Mark && node.valueFollowingProbability <= tree.nodeList[0].valueFollowingProbability * 1.5) {\n        waitingFor15Mark = false;\n        line(x0, yLeaves - 8, x0, yLeaves - 2);\n      }\n      if(waitingFor067Mark && node.valueFollowingProbability < tree.nodeList[0].valueFollowingProbability * 0.66667) {\n        waitingFor067Mark = false;\n        line(x0, yLeaves - 8, x0, yLeaves - 2);\n      }\n\n      x0 += w;\n\n    });\n\n    if(captureImage) {\n      // TODO refactor this to not reassign context\n      // context = mainContext;\n      // frame.memory.image = new Image();\n      // frame.memory.image.src = newCanvas.toDataURL();\n      // frame.x = prevFx;\n      // frame.y = prevFy;\n      // drawImage(frame.memory.image, frame.x, frame.y, frame.width, frame.height);\n    }\n  }\n\n  if(mouseOnFrame) {\n    if(overNode) {\n      setCursor('pointer');\n\n      //rect = new Rectangle(tx(overNode._outRectangle.x), ty(overNode._outRectangle.y), overNode._outRectangle.width*kx, overNode._outRectangle.height*ky);\n      rect = new Rectangle(tx(overNode._outRectangle.x), overNode._outRectangle.y, overNode._outRectangle.width * kx, overNode._outRectangle.height);\n      x = Math.round(frame.x + rect.x) + 0.5;\n      y = Math.round(frame.y + rect.y) + 0.5;\n\n      setStroke(textColor ? textColor : frame.memory.textsColorList[overI], 2);\n\n      if(overNode._wLeaf) {\n        setFill('rgba(0,0,0,0.5)');\n        context.beginPath();\n\n        context.moveTo(x, yLeaves - gap);\n        context.bezierCurveTo(x, yLeaves - 0.65 * gap, overNode._xLeaf, yLeaves - gap * 0.35, overNode._xLeaf, yLeaves);\n        context.lineTo(overNode._xLeaf + overNode._wLeaf, yLeaves);\n        context.bezierCurveTo(overNode._xLeaf + overNode._wLeaf, yLeaves - gap * 0.35, x + rect.width, yLeaves - 0.65 * gap, x + rect.width, yLeaves - gap);\n        context.fill();\n\n        sRect(overNode._xLeaf, yLeaves, overNode._wLeaf, hLevel);\n      }\n\n      sRect(x, y, Math.floor(rect.width), Math.floor(rect.height));\n\n\n\n      if(MOUSE_UP_FAST) {\n        frame.memory.focusFrame = new Rectangle(overNode._outRectangle.x - overNode._outRectangle.width * 0.025, 0, overNode._outRectangle.width * 1.05, frame.height); // TreeDraw._expandRect(overNode._outRectangle);\n\n        if(frame.memory.focusFrame.x < 0) {\n          frame.memory.focusFrame.width += frame.memory.focusFrame.x;\n          frame.memory.focusFrame.x = 0;\n        }\n\n        if(frame.memory.focusFrame.getRight() > frame.width) {\n          frame.memory.focusFrame.width -= (frame.memory.focusFrame.getRight() - frame.width);\n          frame.memory.focusFrame.x = frame.width - frame.memory.focusFrame.width;\n        }\n\n\n        frame.memory.nodeSelected = overNode;\n        changeInResult = true;\n\n        frame.memory.image = null;\n      }\n    }\n    if(MOUSE_DOWN) {\n      frame.memory.prevMX = mX;\n    }\n    if(MOUSE_PRESSED) {\n      var scale = 5 * frame.memory.focusFrame.width / frame.width;\n      frame.memory.focusFrame.x -= (mX - frame.memory.prevMX) * scale;\n      frame.memory.prevMX = mX;\n    }\n    if(WHEEL_CHANGE != 0) {\n      var center = frame.memory.focusFrame.getCenter();\n      var zoom = 1 + 0.1 * WHEEL_CHANGE;\n      frame.memory.focusFrame.x = center.x - frame.memory.focusFrame.width * 0.5 * zoom;\n      frame.memory.focusFrame.width *= zoom;\n    }\n    if(MOUSE_PRESSED || WHEEL_CHANGE != 0) {\n\n      frame.memory.image = null;\n\n    }\n  }\n\n  if(!captureImage && !drawingImage) context.restore();\n\n\n  if(frame.memory.overNode != overNode) {\n    frame.memory.overNode = overNode;\n    changeInResult = true;\n  }\n\n  if(changeInResult || frame.memory.result == null) {\n    frame.memory.result = [\n      {\n        value: frame.memory.nodeSelected,\n        type: 'Node'\n      },\n      {\n        value: frame.memory.overNode,\n        type: 'Node'\n      }\n    ];\n  }\n\n  return frame.memory.result;\n\n};\n\n/**\n * @ignore\n */\nTreeDraw._generateRectanglesDecision = function(node, hLevel) {\n\n  var weights = new NumberList();\n  node.toNodeList.forEach(function(node) {\n    weights.push(node.weight);\n  });\n\n  var rectangles = TreeDraw._horizontalRectanglesDecision(node._inRectangle, weights);\n\n  node.toNodeList.forEach(function(child, i) {\n    child._outRectangle = rectangles[i];\n    child._inRectangle = TreeDraw._inRectFromOutRectDecision(child._outRectangle, hLevel);\n    TreeDraw._generateRectanglesDecision(child, hLevel);\n  });\n};\nTreeDraw._inRectFromOutRectDecision = function(rect, hLevel) {\n  return new Rectangle(rect.x, rect.y + hLevel, rect.width, rect.height - hLevel);\n};\nTreeDraw._horizontalRectanglesDecision = function(rect, weights) {\n  var rects = new List();\n  var x0 = rect.x;\n  var w;\n  var newWeights = weights.getNormalizedToSum();\n\n  newWeights.forEach(function(weight) {\n    w = weight * rect.width;\n    rects.push(new Rectangle(x0, rect.y, w, rect.height));\n    x0 += w;\n  });\n\n  return rects;\n};\n","// jshint unused:false\n\n// This file re-exports everything that is in the public\n// interface of the framework.\n\n// dataStructures/\nimport DataModel from \"src/dataStructures/DataModel\";\nexport { DataModel };\n\n// dataStructures/lists\nimport List from \"src/dataStructures/lists/List\";\nimport Table from \"src/dataStructures/lists/Table\";\nexport { List, Table };\n\n// dataStructures/numeric\nimport Axis from \"src/dataStructures/numeric/Axis\";\nimport Axis2D from \"src/dataStructures/numeric/Axis2D\";\nimport Interval from \"src/dataStructures/numeric/Interval\";\nimport Matrix from \"src/dataStructures/numeric/Matrix\";\nimport NumberList from \"src/dataStructures/numeric/NumberList\";\nimport NumberTable from \"src/dataStructures/numeric/NumberTable\";\nexport { Axis, Axis2D, Interval, Matrix, NumberList, NumberTable };\n\n// dataStructures/dates\nimport DateAxis from \"src/dataStructures/dates/DateAxis\";\nimport DateInterval from \"src/dataStructures/dates/DateInterval\";\nimport DateList from \"src/dataStructures/dates/DateList\";\nexport { DateAxis, DateInterval, DateList };\n\n// dataStructures/geo\nimport Country from \"src/dataStructures/geo/Country\";\nimport CountryList from \"src/dataStructures/geo/CountryList\";\nexport { Country, CountryList };\n\n// dataStructures/geometry\nimport Point from \"src/dataStructures/geometry/Point\";\nimport Point3D from \"src/dataStructures/geometry/Point3D\";\nimport Polygon from \"src/dataStructures/geometry/Polygon\";\nimport Polygon3D from \"src/dataStructures/geometry/Polygon3D\";\nimport Polygon3DList from \"src/dataStructures/geometry/Polygon3DList\";\nimport PolygonList from \"src/dataStructures/geometry/PolygonList\";\nimport Rectangle from \"src/dataStructures/geometry/Rectangle\";\nimport RectangleList from \"src/dataStructures/geometry/RectangleList\";\nexport { Point, Point3D, Polygon, Polygon3D, Polygon3DList, PolygonList, Rectangle, RectangleList };\n\n// dataStructures/graphic\nimport ColorList from \"src/dataStructures/graphic/ColorList\";\nimport ColorScale from \"src/dataStructures/graphic/ColorScale\";\nexport { ColorList, ColorScale };\n\n// dataStructures/spaces\nimport Space2D from \"src/dataStructures/spaces/Space2D\";\nexport { Space2D };\n\n// dataStructures/Strings\nimport StringList from \"src/dataStructures/strings/StringList\";\nexport { StringList };\n\n// dataStructures/structures\nimport Node from \"src/dataStructures/structures/elements/Node\";\nimport Relation from \"src/dataStructures/structures/elements/Relation\";\nimport NodeList from \"src/dataStructures/structures/lists/NodeList\";\nimport RelationList from \"src/dataStructures/structures/lists/RelationList\";\nimport Network from \"src/dataStructures/structures/networks/Network\";\nimport Tree from \"src/dataStructures/structures/networks/Tree\";\nexport { Node, Relation, NodeList, RelationList, Network, Tree };\n\n// operators/dates\nimport DateListOperators from \"src/operators/dates/DateListOperators\";\nimport DateOperators from \"src/operators/dates/DateOperators\";\nexport { DateOperators, DateOperators };\n\n// operators/geo\nimport CountryListOperators from \"src/operators/geo/CountryListOperators\";\nimport CountryOperators from \"src/operators/geo/CountryOperators\";\nimport GeoOperators from \"src/operators/geo/GeoOperators\";\nexport { CountryListOperators, CountryOperators, GeoOperators };\n\n// operators/geometry\nimport GeometryConvertions from \"src/operators/geometry/GeometryConvertions\";\nimport GeometryOperators from \"src/operators/geometry/GeometryOperators\";\nimport PointOperators from \"src/operators/geometry/PointOperators\";\nimport PolygonGenerators from \"src/operators/geometry/PolygonGenerators\";\nimport PolygonListEncodings from \"src/operators/geometry/PolygonListEncodings\";\nimport PolygonListOperators from \"src/operators/geometry/PolygonListOperators\";\nimport PolygonOperators from \"src/operators/geometry/PolygonOperators\";\nimport RectangleOperators from \"src/operators/geometry/RectangleOperators\";\nexport { GeometryConvertions, GeometryOperators, PointOperators, PolygonGenerators,\n  PolygonOperators, PolygonListEncodings, PolygonListOperators, RectangleOperators };\n\n// operators/graphic\n// import ColorConvertions from \"src/operators/graphic/ColorConvertions\";\nimport ColorGenerators from \"src/operators/graphic/ColorGenerators\";\nimport ColorListGenerators from \"src/operators/graphic/ColorListGenerators\";\nimport ColorListOperators from \"src/operators/graphic/ColorListOperators\";\nimport ColorOperators from \"src/operators/graphic/ColorOperators\";\nimport ColorScales from \"src/operators/graphic/ColorScales\";\nimport ColorScaleGenerators from \"src/operators/graphic/ColorScaleGenerators\";\n// export ColorConvertions TODO: Deal with ambiguity between this and ColorOperators\nexport { ColorGenerators, ColorListGenerators, ColorListOperators,\n  ColorOperators, ColorScales, ColorScaleGenerators };\n\n// operators/lists\nimport ListGenerators from \"src/operators/lists/ListGenerators\";\nimport ListOperators from \"src/operators/lists/ListOperators\";\nimport TableConversions from \"src/operators/lists/TableConversions\";\nimport TableEncodings from \"src/operators/lists/TableEncodings\";\nimport TableGenerators from \"src/operators/lists/TableGenerators\";\nimport TableOperators from \"src/operators/lists/TableOperators\";\nexport { ListGenerators, ListOperators, TableConversions, TableEncodings,\n  TableGenerators, TableOperators };\n\n\n// operators/numeric\nimport IntervalListOperators from \"src/operators/numeric/interval/IntervalListOperators\";\nimport IntervalTableOperators from \"src/operators/numeric/interval/IntervalTableOperators\";\nimport MatrixGenerators from \"src/operators/numeric/MatrixGenerators\";\nimport NumberListGenerators from \"src/operators/numeric/numberList/NumberListGenerators\";\nimport NumberListOperators from \"src/operators/numeric/numberList/NumberListOperators\";\nimport NumberOperators from \"src/operators/numeric/NumberOperators\";\nimport NumberTableConversions from \"src/operators/numeric/numberTable/NumberTableConversions\";\nimport NumberTableFlowOperators from \"src/operators/numeric/numberTable/NumberTableFlowOperators\";\nimport NumberTableOperators from \"src/operators/numeric/numberTable/NumberTableOperators\";\nexport { IntervalListOperators, IntervalTableOperators, MatrixGenerators, NumberListGenerators,\n  NumberListOperators, NumberOperators, NumberTableConversions, NumberTableFlowOperators,\n  NumberTableOperators };\n\n// operators/objects\nimport ObjectOperators from \"src/operators/objects/ObjectOperators\";\nimport ObjectConversions from \"src/operators/objects/ObjectConversions\";\nexport { ObjectOperators, ObjectConversions };\n\n// operators/strings\nimport StringConversions from \"src/operators/strings/StringConversions\";\nimport StringListOperators from \"src/operators/strings/StringListOperators\";\nimport StringOperators from \"src/operators/strings/StringOperators\";\nexport { StringConversions, StringListOperators, StringOperators };\n\n// operators/structures\nimport NetworkConvertions from \"src/operators/structures/NetworkConvertions\";\nimport NetworkEncodings from \"src/operators/structures/NetworkEncodings\";\nimport NetworkGenerators from \"src/operators/structures/NetworkGenerators\";\nimport NetworkOperators from \"src/operators/structures/NetworkOperators\";\nimport TreeConvertions from \"src/operators/structures/TreeConvertions\";\nimport TreeEncodings from \"src/operators/structures/TreeEncodings\";\nexport { NetworkConvertions, NetworkEncodings, NetworkGenerators, NetworkOperators,\n  TreeConvertions, TreeEncodings };\n\n// tools/graphic\nimport CanvasAndContext from \"src/tools/graphic/CanvasAndContext\";\nimport Draw from \"src/tools/graphic/Draw\";\nimport DrawSimpleVis from \"src/tools/graphic/DrawSimpleVis\";\nimport DrawTexts from \"src/tools/graphic/DrawTexts\";\nimport DrawTextsAdvanced from \"src/tools/graphic/DrawTextsAdvanced\";\nexport { CanvasAndContext, Draw, DrawSimpleVis, DrawTexts, DrawTextsAdvanced };\n\nimport {\n  fRect, sRect, fsRect, fCircle, sCircle, fsCircle, fEllipse,\n  sEllipse, fsEllipse, line, bezier, fLines, sLines, fsLines, fsLinesM,\n  fPolygon, sPolygon, fsPolygon, fEqTriangle, sEqTriangle, fsEqTriangle,\n  fRectM, sRectM, fsRectM, fCircleM, sCircleM, fsCircleM, lineM, bezierM,\n  drawImage, fitImage, setFill, setStroke, setLW, clipCircle, clipRectangle,\n  restore, fText, sText, fsText, fTextRotated, fTextM, fsTextM,\n  fTextRotatedM, fTextW, setText, getTextW, getPixelData, getPixelColor,\n  getPixelColorRGBA, captureCanvas, setCursor, getMilliseconds\n} from \"src/tools/graphic/SimpleGraphics\";\n\nexport {\n  fRect, sRect, fsRect, fCircle, sCircle, fsCircle, fEllipse,\n  sEllipse, fsEllipse, line, bezier, fLines, sLines, fsLines, fsLinesM,\n  fPolygon, sPolygon, fsPolygon, fEqTriangle, sEqTriangle, fsEqTriangle,\n  fRectM, sRectM, fsRectM, fCircleM, sCircleM, fsCircleM, lineM, bezierM,\n  drawImage, fitImage, setFill, setStroke, setLW, clipCircle, clipRectangle,\n  restore, fText, sText, fsText, fTextRotated, fTextM, fsTextM,\n  fTextRotatedM, fTextW, setText, getTextW, getPixelData, getPixelColor,\n  getPixelColorRGBA, captureCanvas, setCursor, getMilliseconds\n};\n\n// tools/interaction\nimport DragDetection from \"src/tools/interaction/DragDetection\";\nimport InputTextFieldHTML from \"src/tools/interaction/InputTextFieldHTML\";\nimport TextBox from \"src/tools/interaction/TextBox\";\nimport TextFieldHTML from \"src/tools/interaction/TextFieldHTML\";\nexport { DragDetection, InputTextFieldHTML, TextBox, TextFieldHTML };\n\n\n// tools/loaders\nimport Loader from \"src/tools/loaders/Loader\";\nimport LoadEvent from \"src/tools/loaders/LoadEvent\";\nimport MultiLoader from \"src/tools/loaders/MultiLoader\";\nexport { Loader, LoadEvent, TextBox, MultiLoader };\n\n// tools/utils\nimport ConsoleTools from \"src/tools/utils/strings/ConsoleTools\";\nimport FastHtml from \"src/tools/utils/strings/FastHtml\";\nimport JSONUtils from \"src/tools/utils/strings/JSONUtils\";\nimport MD5 from \"src/tools/utils/strings/MD5\";\nimport StringUtils from \"src/tools/utils/strings/StringUtils\";\nimport Navigator from \"src/tools/utils/system/Navigator\";\nexport { ConsoleTools, FastHtml, JSONUtils, MD5, StringUtils, Navigator };\n\nimport { typeOf, instantiate, getShortNameFromDataModelType, getColorFromDataModelType, getLightColorFromDataModelType, getTextFromObject, instantiateWithSameType, isArray,\n  evalJavaScriptFunction, argumentsToArray, TimeLogger } from \"src/tools/utils/code/ClassUtils\";\nexport { typeOf, instantiate, getShortNameFromDataModelType, getColorFromDataModelType, getLightColorFromDataModelType, getTextFromObject, instantiateWithSameType, isArray,\n  evalJavaScriptFunction, argumentsToArray, TimeLogger };\n\n// tools/physics\nimport Forces from \"src/tools/physics/Forces\";\nexport { Forces };\n\n// tools/threeD\nimport Engine3D from \"src/tools/threeD/Engine3D\";\nexport { Engine3D };\n\n// visualization/geo\nimport CountryListDraw from \"src/visualization/geo/CountryListDraw\";\nexport { CountryListDraw };\n\n// visualization/geometry\nimport CirclesVisOperators from \"src/visualization/geometry/CirclesVisOperators\";\nexport { CirclesVisOperators };\n\n// visualization/graphic\nimport ColorsDraw from \"src/visualization/graphic/ColorsDraw\";\nimport ImageDraw from \"src/visualization/graphic/ImageDraw\";\nexport { ColorsDraw, ImageDraw };\n\n// visualization/lists\nimport ListDraw from \"src/visualization/lists/ListDraw\";\nexport { ListDraw };\n\n// visualization/numeric\nimport IntervalTableDraw from \"src/visualization/numeric/IntervalTableDraw\";\nimport NumberTableDraw from \"src/visualization/numeric/NumberTableDraw\";\nimport NumberListDraw from \"src/visualization/numeric/NumberListDraw\";\nexport { IntervalTableDraw, NumberTableDraw, NumberListDraw};\n\n// visualization/objects\nimport ObjectDraw from \"src/visualization/objects/ObjectDraw\";\nimport StringDraw from \"src/visualization/strings/StringDraw\";\nexport { ObjectDraw, StringDraw};\n\n// visualization/strings\nimport StringListDraw from \"src/visualization/strings/StringListDraw\";\nimport StringListVisOperators from \"src/visualization/strings/StringListVisOperators\";\nexport { StringListDraw, StringListVisOperators};\n\n// visualization/structures\nimport NetworkDraw from \"src/visualization/structures/NetworkDraw\";\nimport TreeDraw from \"src/visualization/structures/TreeDraw\";\nexport { NetworkDraw, TreeDraw };\n\n\n// Global.js\n// Functions\nimport { Global, onResize, clearContext, cycleOnMouseMovement, setFrameRate,\n  enterFrame, startCycle, stopCycle, onMoveCycle, reStartCycle,\n  addInteractionEventListener, onCanvasEvent, removeInteractionEventListener,\n  cancelAllInteractions, setBackgroundColor, activateKeyboard, onKey,\n  activateWheel, setStructureLocalStorageWithSeed,\n  setStructureLocalStorage, getStructureLocalStorageFromSeed,\n  getStructureLocalStorage, getDocWidth, getDocHeight, _onMouse\n} from \"src/Global\";\nexport { Global, onResize, clearContext, cycleOnMouseMovement, setFrameRate,\n  enterFrame, startCycle, stopCycle, onMoveCycle, reStartCycle,\n  addInteractionEventListener, onCanvasEvent, removeInteractionEventListener,\n  cancelAllInteractions, setBackgroundColor, activateKeyboard, onKey,\n  activateWheel, setStructureLocalStorageWithSeed,\n  setStructureLocalStorage, getStructureLocalStorageFromSeed,\n  getStructureLocalStorage, getDocWidth, getDocHeight, _onMouse\n};\n// Variables\nimport { listenerArray, canvas, userAgent, userAgentVersion,\n  canvasResizeable, dataModelsInfo, cW, cH, cX, cY, mX, mY, mP, nF, MOUSE_DOWN,\n  MOUSE_UP, MOUSE_UP_FAST, WHEEL_CHANGE, NF_DOWN, NF_UP, MOUSE_PRESSED,\n  MOUSE_IN_DOCUMENT, mX_DOWN, mY_DOWN, mX_UP, mY_UP, PREV_mX, PREV_mY,\n  DX_MOUSE, DY_MOUSE, MOUSE_MOVED, T_MOUSE_PRESSED, cursorStyle, backGroundColor,\n  backGroundColorRGB, cycleActive, context, TwoPi, HalfPi, radToGrad, gradToRad,\n  c, _cycleOnMouseMovement\n} from \"src/Global\";\nexport { listenerArray, canvas, removeDiv, userAgent, userAgentVersion,\n  canvasResizeable, dataModelsInfo, cW, cH, cX, cY, mX, mY, mP, nF, MOUSE_DOWN,\n  MOUSE_UP, MOUSE_UP_FAST, WHEEL_CHANGE, NF_DOWN, NF_UP, MOUSE_PRESSED,\n  MOUSE_IN_DOCUMENT, mX_DOWN, mY_DOWN, mX_UP, mY_UP, PREV_mX, PREV_mY,\n  DX_MOUSE, DY_MOUSE, MOUSE_MOVED, T_MOUSE_PRESSED, cursorStyle, backGroundColor,\n  backGroundColorRGB, cycleActive, context, TwoPi, HalfPi, radToGrad, gradToRad,\n  c, _cycleOnMouseMovement\n};\n"],"names":[],"mappings":"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"}