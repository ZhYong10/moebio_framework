NumberList.prototype = new List();
NumberList.prototype.constructor=NumberList;
/**
* NodeList
* @constructor
*/

function NumberList () {
	//FIX ME: Should use this ??? 
	var args=[];
	var i;
	for(i=0; i<arguments.length; i++){
		arguments[i]=Number(arguments[i]);
	}
	var array=List.apply(this, arguments);
	//
	array=NumberList.fromArray(array);
   	//
   	return array;   	
}
NumberList.fromArray=function(array){
	var result=List.fromArray(array);
	result.type="NumberList";
   	//assign methods to array:
   	result.unit=NumberList.prototype.unit;
   	result.tenPower=NumberList.prototype.tenPower;
   	result.getMin=NumberList.prototype.getMin;
   	result.getMax=NumberList.prototype.getMax;
   	result.getSum=NumberList.prototype.getSum;
	result.getRangeInterval=NumberList.prototype.getRangeInterval;
	result.normalizedSum=NumberList.prototype.normalizedSum;
	result.getAverage=NumberList.prototype.getAverage;
	result.getStandardDeviation=NumberList.prototype.getStandardDeviation;
	
	

	return result;
}
NumberList.prototype.unit="";
NumberList.prototype.tenPower=0;

NumberList.prototype.getMin=function(){
	if(this.length==0) return null;
	var i;
	var min=this[0];
	for(i=1; i<this.length; i++){
		min=Math.min(min, this[i]);
	}
	return min;
}

NumberList.prototype.getMax=function(){
	if(this.length==0) return null;
	var i;
	var max=this[0];
	for(i=1; i<this.length; i++){
		max=Math.max(max, this[i]);
	}
	return max;
}

NumberList.prototype.getSum=function(){
	if(this.length==0) return null;
	var i;
	var sum=this[0];
	for(i=1; i<this.length; i++){
		sum+=this[i];
	}
	return sum;
}
NumberList.prototype.normalizedSum=function(){
	if(this.length==0) return null;
	var i;
	var sum=this.getSum();
	var newArray=eval("new "+this.type+"()");
	for(i=0; i<this.length; i++){
		newArray.push(this[i]/sum);
	}
	return newArray;
}
NumberList.prototype.getRangeInterval=function(){
	if(this.length==0) return null;
	var i;
	var max=this[0];
	var min=this[0];
	for(i=1; i<this.length; i++){
		max=Math.max(max, this[i]);
		min=Math.min(min, this[i]);
	}
	var interval=new Interval(min, max);
	return interval;
}
NumberList.prototype.getAverage=function(){
	return this.getSum() / this.length;
}
NumberList.prototype.getStandardDeviation=function(){
	var sd=0;
	var average=this.getAverage();
	var i=0;
	for(i=0; i<this.length; i++){
		sd+=Math.pow(this[i]-average, 2);
	}
	return sd / this.length;
}
//STATIC METHODS:
NumberList.fromInterval=function(nElements, interval){
	if(interval==null) interval=new Interval(0, 1);
	var numberList = new NumberList();
	var range=interval.getAmplitude();
	var i;
	for(i=0; i<nElements; i++){
		numberList.push(Number(interval.getMin())+Number(Math.random()*range));
	}
	return numberList;
}

