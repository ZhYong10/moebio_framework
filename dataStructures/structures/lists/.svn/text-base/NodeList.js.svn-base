NodeList.prototype = new List();
NodeList.prototype.constructor=NodeList;
/**
* NodeList
* @constructor
*/

function NodeList () {
	//FIX ME: Should use this ??? 
	var array=List.apply(this, arguments);
	//
	array=NodeList.fromArray(array);
   	return array;   	
}

NodeList.fromArray=function(array){
	var result=List.fromArray(array);
	result.type="NodeList";
   	//assign methods to array:
   	result.addNode=NodeList.prototype.addNode;
   	result.addNodeIfNew=NodeList.prototype.addNodeIfNew;
   	result.removeNode=NodeList.prototype.removeNode;
   	result.getNodeWithLabel=NodeList.prototype.getNodeWithLabel;
   	result.getNodeWithId=NodeList.prototype.getNodeWithId;

	return result;
}

NodeList.prototype.addNode=function(node){
  this.push(node);
}
NodeList.prototype.addNodeIfNew=function(node){
  this.pushIfUnique(node);
}

NodeList.prototype.removeNode=function(node){
  this.removeElement(node);
}
NodeList.prototype.getNodeWithLabel=function(label){
	var i;
	for(i=0; i<this.length; i++){
    	if(this[i].label==label){
    		return this[i];
    	}
  	}
  	return null;
}
NodeList.prototype.getNodeWithId=function(id){
	var i;
	for(i=0; i<this.length; i++){
    	if(this[i].id==id){
    		return this[i];
    	}
  	}
  	return null;
}